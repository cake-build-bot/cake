<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="C:\temp\dev\gh\cake-build-bot\cake\src\Cake.Common.Tests\bin\Release\Cake.Common.Tests.DLL" configFile="C:\temp\dev\gh\cake-build-bot\cake\tools\xunit.runner.console\tools\xunit.console.exe.Config" run-date="2016-07-27" run-time="22:07:30" time="3.497" total="2584" passed="2584" failed="0" skipped="0" environment="64-bit .NET 4.0.30319.42000 [collection-per-class, parallel (4 threads)]" test-framework="xUnit.net 2.1.0.3179">
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" time="0.081" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_ErrorMessage" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_ErrorMessage" result="Pass" time="0.0035614" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_ErrorMessageWithException" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_ErrorMessageWithException" result="Pass" time="0.0519169" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_InformationalMessage" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_InformationalMessage" result="Pass" time="0.0043118" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_Message(message: &quot;Hello world&quot;, category: Error, details: &quot;Details of message&quot;, args: &quot;&quot;Hello world&quot; -Category &quot;Error&quot; -Details &quot;Details &quot;...)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_Message" result="Pass" time="0.001363" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_Message(message: &quot;Hello world&quot;, category: Error, details: null, args: &quot;&quot;Hello world&quot; -Category &quot;Error&quot;&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_Message" result="Pass" time="0.0015217" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_Message(message: &quot;Hello world&quot;, category: Information, details: null, args: &quot;&quot;Hello world&quot; -Category &quot;Information&quot;&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_Message" result="Pass" time="0.0014708" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_Message(message: &quot;Hello world&quot;, category: Warning, details: null, args: &quot;&quot;Hello world&quot; -Category &quot;Warning&quot;&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_Message" result="Pass" time="0.0102111" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Add_WarningMessage" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Add_WarningMessage" result="Pass" time="0.0034379" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Throw_If_Message_Is_Empty" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Throw_If_Message_Is_Empty" result="Pass" time="0.0009963" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Throw_If_Message_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Throw_If_Message_Is_Null" result="Pass" time="0.0011407" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod.Should_Throw_If_Not_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheAddMessageMethod" method="Should_Throw_If_Not_Running_On_AppVeyor" result="Pass" time="0.0013599" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0009987" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheConstructor.Should_Throw_If_Process_Runner_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheConstructor" method="Should_Throw_If_Process_Runner_Is_Null" result="Pass" time="0.000772" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheEnvironmentProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheEnvironmentProperty.Should_Return_Non_Null_Reference" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheEnvironmentProperty" method="Should_Return_Non_Null_Reference" result="Pass" time="0.0006008" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheIsRunningOnAppVeyorProperty" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheIsRunningOnAppVeyorProperty.Should_Return_False_If_Not_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheIsRunningOnAppVeyorProperty" method="Should_Return_False_If_Not_Running_On_AppVeyor" result="Pass" time="0.000686" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheIsRunningOnAppVeyorProperty.Should_Return_True_If_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheIsRunningOnAppVeyorProperty" method="Should_Return_True_If_Running_On_AppVeyor" result="Pass" time="0.0004622" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" time="0.010" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod.Should_Throw_If_Build_Version_Is_Empty(version: &quot;&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" method="Should_Throw_If_Build_Version_Is_Empty" result="Pass" time="0.0003102" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod.Should_Throw_If_Build_Version_Is_Empty(version: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" method="Should_Throw_If_Build_Version_Is_Empty" result="Pass" time="0.0011124" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod.Should_Throw_If_Build_Version_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" method="Should_Throw_If_Build_Version_Is_Null" result="Pass" time="0.0020593" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod.Should_Throw_If_Not_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" method="Should_Throw_If_Not_Running_On_AppVeyor" result="Pass" time="0.0025946" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod.Should_Update_Build_Version" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUpdateBuildVersionMethod" method="Should_Update_Build_Version" result="Pass" time="0.0038567" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" time="0.040" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Throw_If_Not_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Throw_If_Not_Running_On_AppVeyor" result="Pass" time="0.0009667" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0010069" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Throw_If_Path_Is_Null_WithSettings" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Throw_If_Path_Is_Null_WithSettings" result="Pass" time="0.0069843" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact" result="Pass" time="0.0144744" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact_For_ArtifactType(type: Auto, arg: &quot;Auto&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact_For_ArtifactType" result="Pass" time="0.0017242" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact_For_ArtifactType(type: NuGetPackage, arg: &quot;NuGetPackage&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact_For_ArtifactType" result="Pass" time="0.0092499" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact_For_ArtifactType(type: WebDeployPackage, arg: &quot;WebDeployPackage&quot;)" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact_For_ArtifactType" result="Pass" time="0.0015075" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact_For_DeploymentName" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact_For_DeploymentName" result="Pass" time="0.0030774" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod.Should_Upload_Artifact_Throw_Exception_For_DeploymentName_Containing_Spaces" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadArtifactMethod" method="Should_Upload_Artifact_Throw_Exception_For_DeploymentName_Containing_Spaces" result="Pass" time="0.0013756" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadTestResultsMethod" time="0.005" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadTestResultsMethod.Should_Throw_If_Not_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadTestResultsMethod" method="Should_Throw_If_Not_Running_On_AppVeyor" result="Pass" time="0.003908" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadTestResultsMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.Build.AppVeyor.AppVeyorProviderTests+TheUploadTestResultsMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0008893" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheFolderProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheFolderProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheFolderProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0038354" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheIdProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0017428" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheNumberProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0018521" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheVersionProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheVersionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorBuildInfoTests+TheVersionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0016287" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheAuthorProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheAuthorProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheAuthorProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0032242" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheEmailProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheEmailProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheEmailProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0016314" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheExtendedMessageProperty" time="0.258" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheExtendedMessageProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheExtendedMessageProperty" method="Should_Return_Correct_Value" result="Pass" time="0.2579841" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheIdProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014869" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheMessageProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheMessageProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheMessageProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014818" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheTimestampProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheTimestampProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorCommitInfoTests+TheTimestampProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0041639" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheApiUrlProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheApiUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheApiUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020791" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheBuildProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheBuildProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012134" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheConfigurationProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheConfigurationProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheConfigurationProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015256" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobIdProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015793" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobNameProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheJobNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015335" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePlatformProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePlatformProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePlatformProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0033431" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheProjectProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheProjectProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheProjectProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014558" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePullRequestProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePullRequestProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+ThePullRequestProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0030435" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheRepositoryProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheRepositoryProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheRepositoryProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0036253" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" time="0.008" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty.Should_Return_Correct_Value(value: &quot;false&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0010271" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty.Should_Return_Correct_Value(value: &quot;False&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0010555" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty.Should_Return_Correct_Value(value: &quot;true&quot;, expected: True)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0008688" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty.Should_Return_Correct_Value(value: &quot;True&quot;, expected: True)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020897" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty.Should_Return_Correct_Value(value: &quot;Yes&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorEnvironmentInfoTests+TheScheduledBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0029104" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheIdProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015707" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheNameProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0016571" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheSlugProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheSlugProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorProjectInfoTests+TheSlugProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0016188" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheIsPullRequestProperty" time="0.006" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheIsPullRequestProperty.Should_Return_Correct_Value(value: &quot;0&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheIsPullRequestProperty" method="Should_Return_Correct_Value" result="Pass" time="0.002072" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheIsPullRequestProperty.Should_Return_Correct_Value(value: &quot;1&quot;, expected: True)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheIsPullRequestProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0038074" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheNumberProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014108" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheTitleProperty" time="0.258" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheTitleProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorPullRequestInfoTests+TheTitleProperty" method="Should_Return_Correct_Value" result="Pass" time="0.2578669" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheBranchProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015612" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheCommitProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheCommitProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheCommitProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015549" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheNameProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0031031" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheProviderProperty" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheProviderProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheProviderProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0045053" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheScmProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheScmProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheScmProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015947" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheTagProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheTagProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorRepositoryInfoTests+TheTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0036384" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" time="0.007" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty.Should_Return_Correct_Value(value: &quot;false&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020877" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty.Should_Return_Correct_Value(value: &quot;False&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.000836" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty.Should_Return_Correct_Value(value: &quot;true&quot;, expected: True)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0008273" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty.Should_Return_Correct_Value(value: &quot;True&quot;, expected: True)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0025575" />
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty.Should_Return_Correct_Value(value: &quot;Yes&quot;, expected: False)" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheIsTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0008119" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheNameProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.AppVeyor.Data.AppVeyorTagInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0019255" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0013705" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheEnvironmentProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheEnvironmentProperty.Should_Return_Non_Null_Reference" type="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheEnvironmentProperty" method="Should_Return_Non_Null_Reference" result="Pass" time="0.0034295" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheIsRunningOnBambooProperty" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheIsRunningOnBambooProperty.Should_Return_False_If_Not_Running_On_Bamboo" type="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheIsRunningOnBambooProperty" method="Should_Return_False_If_Not_Running_On_Bamboo" result="Pass" time="0.0010338" />
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheIsRunningOnBambooProperty.Should_Return_True_If_Running_On_Bamboo" type="Cake.Common.Tests.Unit.Build.Bamboo.BambooProviderTests+TheIsRunningOnBambooProperty" method="Should_Return_True_If_Running_On_Bamboo" result="Pass" time="0.0008869" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildKeyProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0040643" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildTimestampProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildTimestampProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheBuildTimestampProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013547" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheFolderProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheFolderProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheFolderProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014925" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheNumberProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015363" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultKeyProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012529" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultUrlProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooBuildInfoTests+TheResultUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0028366" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooCommitInfoTests+TheRepositoryRevisionProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooCommitInfoTests+TheRepositoryRevisionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooCommitInfoTests+TheRepositoryRevisionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011759" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanKeyProperty" time="0.258" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.2580193" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+ThePlanNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011625" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobKeyProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011369" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortJobNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.001262" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanKeyProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012627" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooPlanInfoTests+TheShortPlanNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013307" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheBranchProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013239" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.001324" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheScmProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheScmProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bamboo.Data.BambooRepositoryInfoTests+TheScmProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014471" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheBranchProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0009118" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheCommitProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheCommitProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheCommitProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0009832" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoOwnerProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoOwnerProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoOwnerProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011482" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoSlugProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoSlugProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheRepoSlugProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0008727" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheTagProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheTagProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.BitbucketPipelines.Data.BitbucketPipelinesRepositoryInfoTests+TheTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0008226" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationSlugProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationSlugProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationSlugProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014929" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationTitleProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationTitleProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationTitleProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0040971" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseApplicationInfoTests+TheApplicationUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014696" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests" method="Should_Return_Correct_Value" result="Pass" time="0.0018667" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildNumberProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013685" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildSlugProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildSlugProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildSlugProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013271" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildTriggerTimestampProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildTriggerTimestampProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildTriggerTimestampProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013551" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseBuildInfoTests+TheBuildUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013855" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheDeployDirectoryProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheDeployDirectoryProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheDeployDirectoryProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0035866" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheSourceDirectoryProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheSourceDirectoryProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseDirectoryInfoTests+TheSourceDirectoryProperty" method="Should_Return_Correct_Value" result="Pass" time="0.003923" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificatePassPhraseProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificatePassPhraseProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificatePassPhraseProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013527" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificateUrlProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificateUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheCertificateUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0037402" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheProvisioningUrlProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheProvisioningUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseProvisioningInfo+TheProvisioningUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0015624" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitBranchProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014269" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitCommitProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitCommitProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitCommitProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012509" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitRepositoryUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitRepositoryUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitRepositoryUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013784" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitTagProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitTagProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+TheGitTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013839" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+ThePullRequestProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+ThePullRequestProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseRepositoryInfoTests+ThePullRequestProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0039972" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowIdProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013583" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowTitleProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowTitleProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Bitrise.Data.BitriseWorkflowInfoTests+TheWorkflowTitleProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012908" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheAppVeyorMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheAppVeyorMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheAppVeyorMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0010768" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBambooMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBambooMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBambooMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009489" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitbucketPipelinesMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitbucketPipelinesMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitbucketPipelinesMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0010566" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitriseMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitriseMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBitriseMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0012367" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBuildSystemMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBuildSystemMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheBuildSystemMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0021044" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheJenkinsMethod" time="0.012" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheJenkinsMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheJenkinsMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.011766" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTeamCityMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTeamCityMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTeamCityMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0011273" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTravisCIMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTravisCIMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemAliasesTests+TheTravisCIMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.00108" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" time="0.292" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_AppVeyor_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_AppVeyor_Is_Null" result="Pass" time="0.0013859" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_Bamboo_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_Bamboo_Is_Null" result="Pass" time="0.2732467" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_BitbucketPipelines_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_BitbucketPipelines_Is_Null" result="Pass" time="0.0016895" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_Bitrise_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_Bitrise_Is_Null" result="Pass" time="0.0013626" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_ContinuaCI_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_ContinuaCI_Is_Null" result="Pass" time="0.0013974" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_Jenkins_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_Jenkins_Is_Null" result="Pass" time="0.0046419" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_MyGet_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_MyGet_Is_Null" result="Pass" time="0.0058395" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_TeamCity_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_TeamCity_Is_Null" result="Pass" time="0.0013985" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor.Should_Throw_If_TravisCI_Is_Null" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheConstructor" method="Should_Throw_If_TravisCI_Is_Null" result="Pass" time="0.0013827" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" time="0.025" total="10" passed="10" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_AppVeyor" result="Pass" time="0.0020052" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_Bamboo" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_Bamboo" result="Pass" time="0.0018608" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_BitbucketPipelines" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_BitbucketPipelines" result="Pass" time="0.0047236" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_Bitrise" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_Bitrise" result="Pass" time="0.0019007" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_ContinuaCI" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_ContinuaCI" result="Pass" time="0.0018351" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_Jenkins" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_Jenkins" result="Pass" time="0.0031102" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_MyGet" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_MyGet" result="Pass" time="0.0018892" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_TeamCity" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_TeamCity" result="Pass" time="0.0037291" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_False_If_Running_On_TravisCI" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_False_If_Running_On_TravisCI" result="Pass" time="0.0021663" />
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty.Should_Return_True_If_Not_Running_On_Any" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsLocalBuildProperty" method="Should_Return_True_If_Not_Running_On_Any" result="Pass" time="0.0022615" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnAppVeyorProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnAppVeyorProperty.Should_Return_True_If_Running_On_AppVeyor" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnAppVeyorProperty" method="Should_Return_True_If_Running_On_AppVeyor" result="Pass" time="0.001935" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBambooProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBambooProperty.Should_Return_True_If_Running_On_Bamboo" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBambooProperty" method="Should_Return_True_If_Running_On_Bamboo" result="Pass" time="0.0013748" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitbucketPipelinesProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitbucketPipelinesProperty.Should_Return_True_If_Running_On_BitbucketPipelines" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitbucketPipelinesProperty" method="Should_Return_True_If_Running_On_BitbucketPipelines" result="Pass" time="0.0013752" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitriseProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitriseProperty.Should_Return_True_If_Running_On_Bitrise" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnBitriseProperty" method="Should_Return_True_If_Running_On_Bitrise" result="Pass" time="0.0036518" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnContinuaCIProperty" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnContinuaCIProperty.Should_Return_True_If_Running_On_ContinuaCI" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnContinuaCIProperty" method="Should_Return_True_If_Running_On_ContinuaCI" result="Pass" time="0.0048748" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnJenkinsProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnJenkinsProperty.Should_Return_True_If_Running_On_Jenkins" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnJenkinsProperty" method="Should_Return_True_If_Running_On_Jenkins" result="Pass" time="0.001909" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnMyGetProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnMyGetProperty.Should_Return_True_If_Running_On_MyGet" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnMyGetProperty" method="Should_Return_True_If_Running_On_MyGet" result="Pass" time="0.0020092" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTeamCityProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTeamCityProperty.Should_Return_True_If_Running_On_TeamCity" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTeamCityProperty" method="Should_Return_True_If_Running_On_TeamCity" result="Pass" time="0.0021391" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTravisCIProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTravisCIProperty.Should_Return_True_If_Running_On_TravisCI" type="Cake.Common.Tests.Unit.Build.BuildSystemTests+TheIsRunningOnTravisCIProperty" method="Should_Return_True_If_Running_On_TravisCI" result="Pass" time="0.0042696" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.000699" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty.Should_Return_False_If_Not_Running_On_ContinuaCI" type="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty" method="Should_Return_False_If_Not_Running_On_ContinuaCI" result="Pass" time="0.0005853" />
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty.Should_Return_True_If_Running_On_ContinuaCI" type="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty" method="Should_Return_True_If_Running_On_ContinuaCI" result="Pass" time="0.0022856" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty+TheEnvironmentProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty+TheEnvironmentProperty.Should_Return_Non_Null_Reference" type="Cake.Common.Tests.Unit.Build.ContinuaCI.ContinuaCIProviderTests+TheIsRunningOnContinuaCIProperty+TheEnvironmentProperty" method="Should_Return_Non_Null_Reference" result="Pass" time="0.000607" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildKeyProperty" time="0.032" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildKeyProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildKeyProperty" method="Should_Return_Correct_Value" result="Pass" time="0.032231" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildNumberProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheBuildNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0019279" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetCountProperty" time="0.006" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetCountProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetCountProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0063729" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetRevisionsProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetRevisionsProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetRevisionsProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020724" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetTagNamesProperty" time="0.009" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetTagNamesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetTagNamesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0089068" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetUserNamesProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetUserNamesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheChangesetUserNamesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0027419" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheElapsedProperty" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheElapsedProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheElapsedProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0054685" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheHasNewChangesProperty" time="0.018" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheHasNewChangesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheHasNewChangesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0178682" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIdProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0018482" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIsFeatureBranchBuildProperty" time="0.008" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIsFeatureBranchBuildProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIsFeatureBranchBuildProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0082092" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIssueCountProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIssueCountProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheIssueCountProperty" method="Should_Return_Correct_Value" result="Pass" time="0.002807" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoriesProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoriesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoriesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0033064" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoryBranchesProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoryBranchesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheRepositoryBranchesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020728" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheStartedProperty" time="0.009" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheStartedProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheStartedProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0094244" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTimeOnQueueProperty" time="0.007" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTimeOnQueueProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTimeOnQueueProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0066808" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTriggeringBranchProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTriggeringBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheTriggeringBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0017735" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheUsesDefaultBranchProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheUsesDefaultBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheUsesDefaultBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0021327" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheVersionProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheVersionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIBuildInfoTests+TheVersionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0017724" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheBranchProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0017479" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheCreatedProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheCreatedProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheCreatedProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0040983" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheFileCountProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheFileCountProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheFileCountProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020503" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueCountProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueCountProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueCountProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0021466" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueNamesProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueNamesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheIssueNamesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020831" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheRevisionProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheRevisionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheRevisionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0018166" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagCountProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagCountProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagCountProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0020333" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagNamesProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagNamesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheTagNamesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0021111" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheUserNameProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheUserNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIChangesetInfoTests+TheUserNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0022753" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIConfigurationInfoTests+TheNameProperty" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIConfigurationInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIConfigurationInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0048882" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVAgentPropertyProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVAgentPropertyProperty.Should_Return_Correct_Values" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVAgentPropertyProperty" method="Should_Return_Correct_Values" result="Pass" time="0.0024462" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVariableProperty" time="0.007" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVariableProperty.Should_Return_Correct_Values" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVariableProperty" method="Should_Return_Correct_Values" result="Pass" time="0.0073412" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVersionProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVersionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIEnvironmentInfoTests+TheVersionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.001948" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIProjectInfoTests+TheNameProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIProjectInfoTests+TheNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.ContinuaCI.Data.ContinuaCIProjectInfoTests+TheNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0036309" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildDisplayNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildDisplayNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildDisplayNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013716" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildIdProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0023578" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildNumberProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014384" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildTagProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildTagProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011151" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsBuildInfoTests+TheBuildUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012501" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobNameProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0021805" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobUrlProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsJobInfoTests+TheJobUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.003231" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeLabelsProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeLabelsProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeLabelsProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013168" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsNodeInfoTests+TheNodeNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012532" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheCvsBranchProperty" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheCvsBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheCvsBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0037244" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitBranchProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013555" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitCommitShaProperty" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitCommitShaProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheGitCommitShaProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0045072" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnRevisionProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnRevisionProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnRevisionProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012533" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.Data.JenkinsRepositoryInfoTests+TheSvnUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013227" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheExecutorNumberProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheExecutorNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheExecutorNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.001464" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsHomeProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsHomeProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsHomeProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0018193" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsUrlProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsUrlProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheJenkinsUrlProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011759" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheWorkspaceProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheWorkspaceProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsEnvironmentInfoTests+TheWorkspaceProperty" method="Should_Return_Correct_Value" result="Pass" time="0.002858" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheConstructor" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.001714" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheIsRunningOnJenkinsProperty" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheIsRunningOnJenkinsProperty.Should_Return_False_If_Not_Running_On_Jenkins" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheIsRunningOnJenkinsProperty" method="Should_Return_False_If_Not_Running_On_Jenkins" result="Pass" time="0.0007156" />
      <test name="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheIsRunningOnJenkinsProperty.Should_Return_True_If_Running_On_Jenkins" type="Cake.Common.Tests.Unit.Build.Jenkins.JenkinsProviderTests+TheIsRunningOnJenkinsProperty" method="Should_Return_True_If_Running_On_Jenkins" result="Pass" time="0.000596" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheConstructor" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0016212" />
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0015494" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheImportDotCoverCoverageMethod" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheImportDotCoverCoverageMethod.Should_Use_Bundled_DotCover_If_ToolPath_Is_Null" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheImportDotCoverCoverageMethod" method="Should_Use_Bundled_DotCover_If_ToolPath_Is_Null" result="Pass" time="0.0005723" />
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheImportDotCoverCoverageMethod.Should_Use_Provided_DotCover_If_ToolPath_Is_Not_Null" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheImportDotCoverCoverageMethod" method="Should_Use_Provided_DotCover_If_ToolPath_Is_Not_Null" result="Pass" time="0.0034279" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheIsRunningOnTeamCityProperty" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheIsRunningOnTeamCityProperty.Should_Return_False_If_Not_Running_On_TeamCity" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheIsRunningOnTeamCityProperty" method="Should_Return_False_If_Not_Running_On_TeamCity" result="Pass" time="0.0011842" />
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheIsRunningOnTeamCityProperty.Should_Return_True_If_Running_On_TeamCity" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheIsRunningOnTeamCityProperty" method="Should_Return_True_If_Running_On_TeamCity" result="Pass" time="0.002659" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheSetParameterMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheSetParameterMethod.SetParameter_Should_Write_To_The_Log_Correctly" type="Cake.Common.Tests.Unit.Build.TeamCity.TeamCityProviderTests+TheSetParameterMethod" method="SetParameter_Should_Write_To_The_Log_Correctly" result="Pass" time="0.0009493" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBranchProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBranchProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBranchProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011794" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildDirectoryProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildDirectoryProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildDirectoryProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0032053" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildIdProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011278" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildNumberProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildNumberProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheBuildNumberProperty" method="Should_Return_Correct_Value" result="Pass" time="0.001436" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTagProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTagProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTagProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0027135" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTestResultProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTestResultProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisBuildInfoTests+TheTestResultProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0018134" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobIdProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobIdProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobIdProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013089" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobNumerProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobNumerProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheJobNumerProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0013836" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheOSNameProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheOSNameProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheOSNameProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0011778" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheSecureEnvironmentVariablesProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheSecureEnvironmentVariablesProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisJobInfoTests+TheSecureEnvironmentVariablesProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014522" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0033928" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitRangeProperty" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitRangeProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheCommitRangeProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0031694" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+ThePullRequestProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+ThePullRequestProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+ThePullRequestProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012138" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheSlugProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheSlugProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.Data.TravisRepositoryInfoTests+TheSlugProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0012604" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheCIProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheCIProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheCIProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0014305" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheHomeProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheHomeProperty.Should_Return_Correct_Values" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheHomeProperty" method="Should_Return_Correct_Values" result="Pass" time="0.0012055" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheTravisProperty" time="0.011" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheTravisProperty.Should_Return_Correct_Value" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIEnvironmentInfoTests+TheTravisProperty" method="Should_Return_Correct_Value" result="Pass" time="0.0112678" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteEndFold" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteEndFold.Should_Be_In_Correct_Format" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteEndFold" method="Should_Be_In_Correct_Format" result="Pass" time="0.0006718" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteStartFold" time="0.006" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteStartFold.Should_Be_In_Correct_Format" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisCIWriteStartFold" method="Should_Be_In_Correct_Format" result="Pass" time="0.0061644" />
    </class>
    <class name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold.Should_Write_End_Fold" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold" method="Should_Write_End_Fold" result="Pass" time="0.000774" />
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold.Should_Write_On_Dispose" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold" method="Should_Write_On_Dispose" result="Pass" time="0.0027151" />
      <test name="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold.Should_Write_Start_Fold" type="Cake.Common.Tests.Unit.Build.TravicCI.TravisCIProviderTests+TravisFold" method="Should_Write_Start_Fold" result="Pass" time="0.0008076" />
    </class>
    <class name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod.Should_Evaluate_And_Write_Debug_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod" method="Should_Evaluate_And_Write_Debug_Message_To_Log" result="Pass" time="0.0014289" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod.Should_Not_Evaluate_And_Write_Debug_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod" method="Should_Not_Evaluate_And_Write_Debug_Message_To_Log" result="Pass" time="0.0007926" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod.Should_Write_Debug_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheDebugMethod" method="Should_Write_Debug_Message_To_Log" result="Pass" time="0.0010571" />
    </class>
    <class name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheErrorMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheErrorMethod.Should_Evaluate_And_Write_Error_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheErrorMethod" method="Should_Evaluate_And_Write_Error_Message_To_Log" result="Pass" time="0.0014293" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheErrorMethod.Should_Write_Error_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheErrorMethod" method="Should_Write_Error_Message_To_Log" result="Pass" time="0.001063" />
    </class>
    <class name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod.Should_Evaluate_And_Write_Information_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod" method="Should_Evaluate_And_Write_Information_Message_To_Log" result="Pass" time="0.0013476" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod.Should_Not_Evaluate_And_Write_Information_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod" method="Should_Not_Evaluate_And_Write_Information_Message_To_Log" result="Pass" time="0.0008909" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod.Should_Write_Informational_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheInformationMethod" method="Should_Write_Informational_Message_To_Log" result="Pass" time="0.0012043" />
    </class>
    <class name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod" time="0.006" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod.Should_Evaluate_And_Write_Warning_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod" method="Should_Evaluate_And_Write_Warning_Message_To_Log" result="Pass" time="0.000881" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod.Should_Not_Evaluate_And_Write_Warning_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod" method="Should_Not_Evaluate_And_Write_Warning_Message_To_Log" result="Pass" time="0.0044393" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod.Should_Write_Warning_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheWarningMethod" method="Should_Write_Warning_Message_To_Log" result="Pass" time="0.0010898" />
    </class>
    <class name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod" time="0.021" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod.Should_Evaluate_And_Write_Verbose_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod" method="Should_Evaluate_And_Write_Verbose_Message_To_Log" result="Pass" time="0.0014996" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod.Should_Not_Evaluate_And_Write_Verbose_Message_To_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod" method="Should_Not_Evaluate_And_Write_Verbose_Message_To_Log" result="Pass" time="0.0051744" />
      <test name="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod.Should_Write_Verbose_Message_Log" type="Cake.Common.Tests.Unit.Diagnostics.LoggingAliasesTests+TheVerboseMethod" method="Should_Write_Verbose_Message_Log" result="Pass" time="0.0140434" />
    </class>
    <class name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheEnvironmentVariableMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheEnvironmentVariableMethod.Should_Return_Null_If_Value_Do_Not_Exist" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheEnvironmentVariableMethod" method="Should_Return_Null_If_Value_Do_Not_Exist" result="Pass" time="0.0007444" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheEnvironmentVariableMethod.Should_Return_Value" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheEnvironmentVariableMethod" method="Should_Return_Value" result="Pass" time="0.001333" />
    </class>
    <class name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod.Should_Return_False_If_Variable_Was_Null" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod" method="Should_Return_False_If_Variable_Was_Null" result="Pass" time="0.0007579" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod.Should_Return_True_If_Value_Is_Empty" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod" method="Should_Return_True_If_Value_Is_Empty" result="Pass" time="0.0008269" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod.Should_Return_True_If_Variable_Exist" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheHasEnvironmentVariableMethod" method="Should_Return_True_If_Variable_Exist" result="Pass" time="0.0014021" />
    </class>
    <class name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod" time="0.002" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod.Should_Return_Correct_Value(family: Linux, expected: True)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0008391" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod.Should_Return_Correct_Value(family: OSX, expected: True)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0000966" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod.Should_Return_Correct_Value(family: Windows, expected: False)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0001156" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnUnixMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007042" />
    </class>
    <class name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod" time="0.008" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod.Should_Return_Correct_Value(family: Linux, expected: False)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0001179" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod.Should_Return_Correct_Value(family: OSX, expected: False)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0065896" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod.Should_Return_Correct_Value(family: Windows, expected: True)" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod" method="Should_Return_Correct_Value" result="Pass" time="0.0002652" />
      <test name="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.EnvironmentAliasesTests+TheIsRunningOnWindowsMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009142" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" time="0.044" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths.Should_Create_Directories_If_Missing" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" method="Should_Create_Directories_If_Missing" result="Pass" time="0.00999" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths.Should_Delete_Files_In_Provided_Directories" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" method="Should_Delete_Files_In_Provided_Directories" result="Pass" time="0.0154357" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths.Should_Leave_Provided_Directories_Intact" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" method="Should_Leave_Provided_Directories_Intact" result="Pass" time="0.0164368" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009375" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths.Should_Throw_If_Directories_Are_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithPaths" method="Should_Throw_If_Directories_Are_Null" result="Pass" time="0.0007488" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" time="0.036" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings.Should_Create_Directories_If_Missing" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" method="Should_Create_Directories_If_Missing" result="Pass" time="0.0131236" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings.Should_Delete_Files_In_Provided_Directories" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" method="Should_Delete_Files_In_Provided_Directories" result="Pass" time="0.0101547" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings.Should_Leave_Provided_Directories_Intact" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" method="Should_Leave_Provided_Directories_Intact" result="Pass" time="0.0100121" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.001003" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings.Should_Throw_If_Directories_Are_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanDirectoriesMethod+WithStrings" method="Should_Throw_If_Directories_Are_Null" result="Pass" time="0.0016599" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" time="0.108" total="10" passed="10" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Create_Directory_If_Missing" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Create_Directory_If_Missing" result="Pass" time="0.0017775" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Delete_Directories_In_Provided_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Delete_Directories_In_Provided_Directory" result="Pass" time="0.0144694" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Delete_Directories_Respecting_Predicate_In_Provided_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Delete_Directories_Respecting_Predicate_In_Provided_Directory" result="Pass" time="0.0117657" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Delete_Files_And_Directories_In_Provided_Directory_Using_Relative_Path" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Delete_Files_And_Directories_In_Provided_Directory_Using_Relative_Path" result="Pass" time="0.0087142" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Delete_Files_In_Provided_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Delete_Files_In_Provided_Directory" result="Pass" time="0.0194113" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Delete_Files_Respecting_Predicate_In_Provided_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Delete_Files_Respecting_Predicate_In_Provided_Directory" result="Pass" time="0.0192432" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Leave_Provided_Directory_Itself_Intact" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Leave_Provided_Directory_Itself_Intact" result="Pass" time="0.0107653" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Skip_Predicate_Folder" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Skip_Predicate_Folder" result="Pass" time="0.0198128" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007669" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod.Should_Throw_If_Directory_Are_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCleanMethod" method="Should_Throw_If_Directory_Are_Null" result="Pass" time="0.001264" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" time="0.052" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Copy_Files" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Copy_Files" result="Pass" time="0.0226862" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Create_Destination_Folder_If_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Create_Destination_Folder_If_Not_Exist" result="Pass" time="0.0088018" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Recursively_Copy_Files_And_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Recursively_Copy_Files_And_Directory" result="Pass" time="0.010371" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0065055" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Throw_If_Destination_Directory_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Throw_If_Destination_Directory_Is_Null" result="Pass" time="0.0011866" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Throw_If_Source_Directory_Does_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Throw_If_Source_Directory_Does_Not_Exist" result="Pass" time="0.0013776" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod.Should_Throw_If_Source_Directory_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCopyDirectoryMethod" method="Should_Throw_If_Source_Directory_Is_Null" result="Pass" time="0.0010211" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" time="0.008" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod.Should_Create_Non_Existing_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" method="Should_Create_Non_Existing_Directory" result="Pass" time="0.002027" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod.Should_Make_Relative_Path_Absolute" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" method="Should_Make_Relative_Path_Absolute" result="Pass" time="0.0021257" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod.Should_Not_Try_To_Create_Directory_If_It_Already_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" method="Should_Not_Try_To_Create_Directory_If_It_Already_Exist" result="Pass" time="0.0019117" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.000744" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod.Should_Throw_If_Directory_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheCreateMethod" method="Should_Throw_If_Directory_Is_Null" result="Pass" time="0.0009477" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" time="0.035" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Delete_Directory_With_Content_If_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Delete_Directory_With_Content_If_Recursive" result="Pass" time="0.0124557" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Delete_Empty_Directory_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Delete_Empty_Directory_If_Non_Recursive" result="Pass" time="0.0090351" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Throw_If_Any_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Throw_If_Any_Directory_Do_Not_Exist" result="Pass" time="0.002072" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009643" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Throw_If_Directories_Are_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Throw_If_Directories_Are_Null" result="Pass" time="0.000898" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" result="Pass" time="0.0036775" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths.Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithPaths" method="Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" result="Pass" time="0.0060361" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" time="0.026" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Delete_Directory_With_Content_If_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Delete_Directory_With_Content_If_Recursive" result="Pass" time="0.0086166" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Delete_Empty_Directory_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Delete_Empty_Directory_If_Non_Recursive" result="Pass" time="0.0025082" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Throw_If_Any_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Throw_If_Any_Directory_Do_Not_Exist" result="Pass" time="0.003775" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0008881" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Throw_If_Directories_Are_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Throw_If_Directories_Are_Null" result="Pass" time="0.0018323" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" result="Pass" time="0.0037655" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings.Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoriesMethod+WithStrings" method="Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" result="Pass" time="0.0044599" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" time="0.031" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Delete_Directory_With_Content_If_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Delete_Directory_With_Content_If_Recursive" result="Pass" time="0.0047737" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Delete_Empty_Directory_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Delete_Empty_Directory_If_Non_Recursive" result="Pass" time="0.0049561" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007247" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Throw_If_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Throw_If_Directory_Do_Not_Exist" result="Pass" time="0.0020677" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Throw_If_Directory_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Throw_If_Directory_Is_Null" result="Pass" time="0.0020637" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Throw_When_Deleting_Directory_With_Files_If_Non_Recursive" result="Pass" time="0.0123017" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod.Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDeleteDirectoryMethod" method="Should_Throw_When_Deleting_Directory_With_Sub_Directories_If_Non_Recursive" result="Pass" time="0.0041247" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod" time="0.005" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod.Should_Return_False_If_Directory_Does_Not_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod" method="Should_Return_False_If_Directory_Does_Not_Exist" result="Pass" time="0.0019086" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod.Should_Return_True_If_Directory_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod" method="Should_Return_True_If_Directory_Exist" result="Pass" time="0.0009449" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0011222" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryExistsMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0008585" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod.Should_Return_A_Convertable_Directory_Path" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod" method="Should_Return_A_Convertable_Directory_Path" result="Pass" time="0.0008889" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0006639" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheDirectoryMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007653" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" time="0.013" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod.Should_Create_Non_Existing_Directory" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" method="Should_Create_Non_Existing_Directory" result="Pass" time="0.0045858" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod.Should_Make_Relative_Path_Absolute" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" method="Should_Make_Relative_Path_Absolute" result="Pass" time="0.0025749" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod.Should_Not_Create_Directory_Or_Fail_If_It_Already_Exist" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" method="Should_Not_Create_Directory_Or_Fail_If_It_Already_Exist" result="Pass" time="0.0040552" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009568" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod.Should_Throw_If_Directory_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheEnsureExistsMethod" method="Should_Throw_If_Directory_Is_Null" result="Pass" time="0.0009659" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod.Should_Return_Absolute_Directory_Path" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod" method="Should_Return_Absolute_Directory_Path" result="Pass" time="0.0010065" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0011139" />
      <test name="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.DirectoryAliasesTests+TheMakeAbsoluteMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0008115" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" time="0.032" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Copy_File" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Copy_File" result="Pass" time="0.0104606" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Log_Verbose_Message_With_Correct_Target" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Log_Verbose_Message_With_Correct_Target" result="Pass" time="0.0061708" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.000943" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Throw_If_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Throw_If_File_Do_Not_Exist" result="Pass" time="0.0050734" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.0010626" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Throw_If_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Throw_If_Target_Directory_Do_Not_Exist" result="Pass" time="0.0067965" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod.Should_Throw_If_Target_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFileMethod" method="Should_Throw_If_Target_File_Path_Is_Null" result="Pass" time="0.0010058" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" time="0.031" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Copy_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Copy_Files" result="Pass" time="0.0063425" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Throw_If_Any_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Throw_If_Any_File_Do_Not_Exist" result="Pass" time="0.0075773" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Throw_If_Any_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Throw_If_Any_Target_Directory_Do_Not_Exist" result="Pass" time="0.0070365" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0045412" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Throw_If_File_Paths_Are_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Throw_If_File_Paths_Are_Null" result="Pass" time="0.0011179" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithFilePaths" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.0045021" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" time="0.035" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Copy_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Copy_Files" result="Pass" time="0.0065604" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Throw_If_Any_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Throw_If_Any_File_Do_Not_Exist" result="Pass" time="0.005086" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Throw_If_Any_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Throw_If_Any_Target_Directory_Do_Not_Exist" result="Pass" time="0.0087375" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0008076" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Throw_If_Glob_Expression_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Throw_If_Glob_Expression_Is_Null" result="Pass" time="0.0096182" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithGlobExpression" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.0046502" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" time="0.032" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Copy_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Copy_Files" result="Pass" time="0.0078161" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Throw_If_Any_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Throw_If_Any_File_Do_Not_Exist" result="Pass" time="0.0073519" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Throw_If_Any_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Throw_If_Any_Target_Directory_Do_Not_Exist" result="Pass" time="0.0073815" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.004306" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Throw_If_File_Paths_Are_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Throw_If_File_Paths_Are_Null" result="Pass" time="0.0015671" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyFilesMethod+WithStrings" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.0040063" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod" time="0.061" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod.Should_Copy_File" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod" method="Should_Copy_File" result="Pass" time="0.057027" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007981" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.0016745" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheCopyToDirectoryMethod" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.0010152" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" time="0.014" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod.Should_Delete_File" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" method="Should_Delete_File" result="Pass" time="0.0055289" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod.Should_Make_Relative_File_Path_Absolute" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" method="Should_Make_Relative_File_Path_Absolute" result="Pass" time="0.0046569" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007286" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod.Should_Throw_If_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" method="Should_Throw_If_File_Do_Not_Exist" result="Pass" time="0.0022066" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFileMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.0008024" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths" time="0.014" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths.Should_Delete_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths" method="Should_Delete_Files" result="Pass" time="0.0113358" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0008151" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths.Should_Throw_If_File_Paths_Are_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithFilePaths" method="Should_Throw_If_File_Paths_Are_Null" result="Pass" time="0.0017073" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression" time="0.006" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression.Should_Delete_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression" method="Should_Delete_Files" result="Pass" time="0.0040221" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0012813" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression.Should_Throw_If_Glob_Expression_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheDeleteFilesMethod+WithGlobExpression" method="Should_Throw_If_Glob_Expression_Is_Null" result="Pass" time="0.0009067" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" time="0.007" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod.Should_Return_False_If_Directory_Does_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" method="Should_Return_False_If_Directory_Does_Not_Exist" result="Pass" time="0.0014858" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod.Should_Return_True_If_Absolute_Path_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" method="Should_Return_True_If_Absolute_Path_Exist" result="Pass" time="0.00111" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod.Should_Return_True_If_Relative_Path_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" method="Should_Return_True_If_Relative_Path_Exist" result="Pass" time="0.0011779" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009209" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileExistsMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0027167" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod.Should_Return_A_Convertable_File_Path" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod" method="Should_Return_A_Convertable_File_Path" result="Pass" time="0.0007476" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0005577" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007373" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" time="0.014" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod.Should_Return_Size_If_Path_Exist(workingDirectory: &quot;/Working&quot;, filePath: &quot;/Working/some file.txt&quot;)" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" method="Should_Return_Size_If_Path_Exist" result="Pass" time="0.0087323" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod.Should_Return_Size_If_Path_Exist(workingDirectory: &quot;/Working/target&quot;, filePath: &quot;/Working/target/some file.txt&quot;)" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" method="Should_Return_Size_If_Path_Exist" result="Pass" time="0.0002983" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007266" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod.Should_Throw_If_Directory_Does_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" method="Should_Throw_If_Directory_Does_Not_Exist" result="Pass" time="0.0031801" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheFileSizeMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0014763" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod" time="0.006" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod.Should_Return_Absolute_Directory_Path" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod" method="Should_Return_Absolute_Directory_Path" result="Pass" time="0.0040655" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007306" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMakeAbsoluteMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.000864" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" time="0.031" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Move_File" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Move_File" result="Pass" time="0.0058968" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009414" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Throw_If_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Throw_If_File_Do_Not_Exist" result="Pass" time="0.0123665" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Throw_If_Source_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Throw_If_Source_File_Path_Is_Null" result="Pass" time="0.0037395" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Throw_If_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Throw_If_Target_Directory_Do_Not_Exist" result="Pass" time="0.0069781" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod.Should_Throw_If_Target_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileMethod" method="Should_Throw_If_Target_File_Path_Is_Null" result="Pass" time="0.0010373" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" time="0.033" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Move_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Move_Files" result="Pass" time="0.0066441" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Throw_If_Any_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Throw_If_Any_File_Do_Not_Exist" result="Pass" time="0.005643" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0059414" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Throw_If_File_Paths_Are_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Throw_If_File_Paths_Are_Null" result="Pass" time="0.0009753" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Throw_If_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Throw_If_Target_Directory_Do_Not_Exist" result="Pass" time="0.0095068" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithFilePaths" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.0042357" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" time="0.047" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Move_Files" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Move_Files" result="Pass" time="0.0169895" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Throw_If_Any_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Throw_If_Any_File_Do_Not_Exist" result="Pass" time="0.0062047" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009094" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Throw_If_Glob_Expression_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Throw_If_Glob_Expression_Is_Null" result="Pass" time="0.0084994" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Throw_If_Target_Directory_Do_Not_Exist" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Throw_If_Target_Directory_Do_Not_Exist" result="Pass" time="0.0065335" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression.Should_Throw_If_Target_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFilesMethod+WithGlobExpression" method="Should_Throw_If_Target_Directory_Path_Is_Null" result="Pass" time="0.008304" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory" time="0.011" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory.Should_Move_File" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory" method="Should_Move_File" result="Pass" time="0.0078339" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0008585" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory.Should_Throw_If_Source_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory" method="Should_Throw_If_Source_File_Path_Is_Null" result="Pass" time="0.001498" />
      <test name="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory.Should_Throw_If_Target_File_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.FileAliasesTests+TheMoveFileToDirectory" method="Should_Throw_If_Target_File_Path_Is_Null" result="Pass" time="0.000866" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath.Should_Combine_The_Two_Paths" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath" method="Should_Combine_The_Two_Paths" result="Pass" time="0.0004132" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath.Should_Return_A_New_Convertable_Directory_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath" method="Should_Return_A_New_Convertable_Directory_Path" result="Pass" time="0.0003994" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath.Should_Throw_If_Left_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath" method="Should_Throw_If_Left_Operand_Is_Null" result="Pass" time="0.0008427" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath.Should_Throw_If_Right_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableDirectoryPath" method="Should_Throw_If_Right_Operand_Is_Null" result="Pass" time="0.0013346" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath.Should_Combine_The_Two_Paths" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath" method="Should_Combine_The_Two_Paths" result="Pass" time="0.0010483" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath.Should_Return_A_New_Convertable_File_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath" method="Should_Return_A_New_Convertable_File_Path" result="Pass" time="0.0003923" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath.Should_Throw_If_Left_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath" method="Should_Throw_If_Left_Operand_Is_Null" result="Pass" time="0.0008143" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath.Should_Throw_If_Right_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingConvertableFilePath" method="Should_Throw_If_Right_Operand_Is_Null" result="Pass" time="0.0007531" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath.Should_Combine_The_Two_Paths" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath" method="Should_Combine_The_Two_Paths" result="Pass" time="0.0004109" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath.Should_Return_A_New_Convertable_Directory_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath" method="Should_Return_A_New_Convertable_Directory_Path" result="Pass" time="0.0003706" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath.Should_Throw_If_Left_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath" method="Should_Throw_If_Left_Operand_Is_Null" result="Pass" time="0.000669" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath.Should_Throw_If_Right_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingDirectoryPath" method="Should_Throw_If_Right_Operand_Is_Null" result="Pass" time="0.0012924" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath" time="0.004" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath.Should_Combine_The_Two_Paths" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath" method="Should_Combine_The_Two_Paths" result="Pass" time="0.0004641" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath.Should_Return_A_New_Convertable_File_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath" method="Should_Return_A_New_Convertable_File_Path" result="Pass" time="0.0019646" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath.Should_Throw_If_Left_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath" method="Should_Throw_If_Left_Operand_Is_Null" result="Pass" time="0.0012856" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath.Should_Throw_If_Right_Operand_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheAddOperator+AddingFilePath" method="Should_Throw_If_Right_Operand_Is_Null" result="Pass" time="0.0006813" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheConstructor.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheConstructor" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007381" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToDirectoryPath.Should_Return_A_Representation_Of_The_Current_Instance" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" method="Should_Return_A_Representation_Of_The_Current_Instance" result="Pass" time="0.000577" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToDirectoryPath.Should_Return_Null_If_Convertable_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" method="Should_Return_Null_If_Convertable_Directory_Path_Is_Null" result="Pass" time="0.0003418" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToString" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToString.Should_Return_A_Representation_Of_The_Current_Instance" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToString" method="Should_Return_A_Representation_Of_The_Current_Instance" result="Pass" time="0.0006299" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToString.Should_Return_Null_If_Convertable_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheImplicitConversionOperator+ConvertToString" method="Should_Return_Null_If_Convertable_Directory_Path_Is_Null" result="Pass" time="0.0003058" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+ThePathProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+ThePathProperty.Should_Return_Path_Provided_To_Constructor" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+ThePathProperty" method="Should_Return_Path_Provided_To_Constructor" result="Pass" time="0.0005016" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheToStringMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheToStringMethod.Should_Return_String_Representation_Of_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableDirectoryPathTests+TheToStringMethod" method="Should_Return_String_Representation_Of_Path" result="Pass" time="0.0009738" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheConstructor.Should_Throw_If_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheConstructor" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007886" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToDirectoryPath.Should_Return_A_Representation_Of_The_Current_Instance" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" method="Should_Return_A_Representation_Of_The_Current_Instance" result="Pass" time="0.0006284" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToDirectoryPath.Should_Return_Null_If_Convertable_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToDirectoryPath" method="Should_Return_Null_If_Convertable_Directory_Path_Is_Null" result="Pass" time="0.0003232" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToString" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToString.Should_Return_A_Representation_Of_The_Current_Instance" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToString" method="Should_Return_A_Representation_Of_The_Current_Instance" result="Pass" time="0.0005786" />
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToString.Should_Return_Null_If_Convertable_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheImplicitConversionOperator+ConvertToString" method="Should_Return_Null_If_Convertable_Directory_Path_Is_Null" result="Pass" time="0.0003793" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+ThePathProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+ThePathProperty.Should_Return_Path_Provided_To_Constructor" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+ThePathProperty" method="Should_Return_Path_Provided_To_Constructor" result="Pass" time="0.0005604" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheToStringMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheToStringMethod.Should_Return_String_Representation_Of_Path" type="Cake.Common.Tests.Unit.IO.Paths.ConvertableFilePathTests+TheToStringMethod" method="Should_Return_String_Representation_Of_Path" result="Pass" time="0.0010582" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0011162" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0008743" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0008419" />
    </class>
    <class name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" time="0.023" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Should_Throw_If_File_Is_Not_Relative_To_Root" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Should_Throw_If_File_Is_Not_Relative_To_Root" result="Pass" time="0.008049" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Should_Throw_If_File_Paths_Are_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Should_Throw_If_File_Paths_Are_Null" result="Pass" time="0.0012738" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Should_Throw_If_Output_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Should_Throw_If_Output_Path_Is_Null" result="Pass" time="0.0074016" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Should_Throw_If_Root_Path_Is_Null" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Should_Throw_If_Root_Path_Is_Null" result="Pass" time="0.0012043" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Should_Zip_Provided_Files" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Should_Zip_Provided_Files" result="Pass" time="0.0035638" />
      <test name="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod.Zipped_File_Should_Contain_Correct_Content" type="Cake.Common.Tests.Unit.IO.ZipperTests+TheZipMethod" method="Zipped_File_Should_Contain_Correct_Content" result="Pass" time="0.0017116" />
    </class>
    <class name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" time="0.024" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings.Should_Return_Process_Started_By_ProcessRunner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" method="Should_Return_Process_Started_By_ProcessRunner" result="Pass" time="0.0016058" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.000716" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings.Should_Throw_If_Filename_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" method="Should_Throw_If_Filename_Is_Null" result="Pass" time="0.0009359" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings.Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" method="Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" result="Pass" time="0.0188215" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings.Should_Use_Environments_Working_Directory" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithoutSettings" method="Should_Use_Environments_Working_Directory" result="Pass" time="0.0018036" />
    </class>
    <class name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" time="0.014" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Make_Working_Directory_Absolute_If_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Make_Working_Directory_Absolute_If_Set" result="Pass" time="0.0022733" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Return_Process_Started_By_ProcessRunner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Return_Process_Started_By_ProcessRunner" result="Pass" time="0.0019599" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007239" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Throw_If_Filename_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Throw_If_Filename_Is_Null" result="Pass" time="0.0009299" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" result="Pass" time="0.0017945" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0008013" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Use_Environments_Working_Directory_If_Not_Working_Directory_Is_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Use_Environments_Working_Directory_If_Not_Working_Directory_Is_Set" result="Pass" time="0.0035156" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings.Should_Use_Provided_Working_Directory_If_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartAndReturnProcessMethod+WithSettings" method="Should_Use_Provided_Working_Directory_If_Set" result="Pass" time="0.0019618" />
    </class>
    <class name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" time="0.006" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings.Should_Return_Exit_Code" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" method="Should_Return_Exit_Code" result="Pass" time="0.0013353" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007867" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings.Should_Throw_If_Filename_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" method="Should_Throw_If_Filename_Is_Null" result="Pass" time="0.0009959" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings.Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" method="Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" result="Pass" time="0.0013804" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings.Should_Use_Environments_Working_Directory" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithoutSettings" method="Should_Use_Environments_Working_Directory" result="Pass" time="0.0017937" />
    </class>
    <class name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" time="0.019" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Make_Working_Directory_Absolute_If_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Make_Working_Directory_Absolute_If_Set" result="Pass" time="0.0021877" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Return_Exit_Code" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Return_Exit_Code" result="Pass" time="0.0016548" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0010224" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Throw_If_Filename_Is_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Throw_If_Filename_Is_Null" result="Pass" time="0.0009414" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Throw_If_No_Process_Was_Returned_From_Process_Runner" result="Pass" time="0.0018553" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010863" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Use_Environments_Working_Directory_If_Not_Working_Directory_Is_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Use_Environments_Working_Directory_If_Not_Working_Directory_Is_Set" result="Pass" time="0.0021277" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings.Should_Use_Provided_Working_Directory_If_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithSettings" method="Should_Use_Provided_Working_Directory_If_Set" result="Pass" time="0.007826" />
    </class>
    <class name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithStringArguments" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithStringArguments.Should_Not_Use_Arguments_If_Not_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithStringArguments" method="Should_Not_Use_Arguments_If_Not_Set" result="Pass" time="0.0025978" />
      <test name="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithStringArguments.Should_Use_Provided_Arguments_In_Process_Settings_If_Set" type="Cake.Common.Tests.Unit.ProcessAliasesTests+TheStartProcessMethod+WithStringArguments" method="Should_Use_Provided_Arguments_In_Process_Settings_If_Set" result="Pass" time="0.0018158" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod" time="0.009" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod.Should_Read_Content_Of_File_And_Parse_It" type="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod" method="Should_Read_Content_Of_File_And_Parse_It" result="Pass" time="0.0030024" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod.Should_Throw_If_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod" method="Should_Throw_If_File_Do_Not_Exist" result="Pass" time="0.0049556" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseAllReleaseNotesMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.000896" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseReleaseNotesMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseReleaseNotesMethod.Should_Return_The_Latest_Release_Notes" type="Cake.Common.Tests.Unit.ReleaseNotesAliasesTests+TheParseReleaseNotesMethod" method="Should_Return_The_Latest_Release_Notes" result="Pass" time="0.0013449" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod.Should_Throw_If_Content_Is_Empty" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod" method="Should_Throw_If_Content_Is_Empty" result="Pass" time="0.0012616" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod.Should_Throw_If_Content_Is_Null" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod" method="Should_Throw_If_Content_Is_Null" result="Pass" time="0.0008542" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" time="0.005" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Parse_Release_Note_Text" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Parse_Release_Note_Text" result="Pass" time="0.0008344" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Parse_Release_Note_Version" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Parse_Release_Note_Version" result="Pass" time="0.0005344" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Remove_Bullets_From_Release_Note_Text" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Remove_Bullets_From_Release_Note_Text" result="Pass" time="0.0005755" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Remove_Empty_Lines_From_Release_Note_Text" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Remove_Empty_Lines_From_Release_Note_Text" result="Pass" time="0.0005644" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Return_Multiple_Release_Notes" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Return_Multiple_Release_Notes" result="Pass" time="0.0004018" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Return_Release_Notes_In_Descending_Order" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Return_Release_Notes_In_Descending_Order" result="Pass" time="0.0006533" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Set_RawVersionLine_Property_To_Line_Containing_Version_Number" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Set_RawVersionLine_Property_To_Line_Containing_Version_Number" result="Pass" time="0.0003595" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat.Should_Throw_If_Header_Is_Missing_Version" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+ComplexFormat" method="Should_Throw_If_Header_Is_Missing_Version" result="Pass" time="0.0010448" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" time="0.008" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Parse_Release_Note_Text" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Parse_Release_Note_Text" result="Pass" time="0.0006126" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Parse_Release_Note_Version" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Parse_Release_Note_Version" result="Pass" time="0.0015051" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Remove_Empty_Lines_From_Release_Note_Text" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Remove_Empty_Lines_From_Release_Note_Text" result="Pass" time="0.0004669" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Return_Multiple_Release_Notes" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Return_Multiple_Release_Notes" result="Pass" time="0.0004152" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Return_Release_Notes_In_Descending_Order" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Return_Release_Notes_In_Descending_Order" result="Pass" time="0.000592" />
      <test name="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat.Should_Throw_If_Header_Is_Missing_Version" type="Cake.Common.Tests.Unit.ReleaseNotesParserTests+TheParseMethod+SimpleFormat" method="Should_Throw_If_Header_Is_Missing_Version" result="Pass" time="0.0044189" />
    </class>
    <class name="Cake.Common.Tests.Unit.ReleaseNotesTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.ReleaseNotesTests+TheConstructor.Should_Throw_If_Version_Is_Null" type="Cake.Common.Tests.Unit.ReleaseNotesTests+TheConstructor" method="Should_Throw_If_Version_Is_Null" result="Pass" time="0.0008068" />
    </class>
    <class name="Cake.Common.Tests.Unit.Security.FileHashCalculatorTests+TheCalculateMethod" time="0.008" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Security.FileHashCalculatorTests+TheCalculateMethod.Should_Throw_If_File_Does_Not_Exist" type="Cake.Common.Tests.Unit.Security.FileHashCalculatorTests+TheCalculateMethod" method="Should_Throw_If_File_Does_Not_Exist" result="Pass" time="0.0069863" />
      <test name="Cake.Common.Tests.Unit.Security.FileHashCalculatorTests+TheCalculateMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Security.FileHashCalculatorTests+TheCalculateMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.0014577" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0008447" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0009848" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" time="0.088" total="14" passed="14" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Assembly_Name" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Assembly_Name" result="Pass" time="0.0007685" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Configuration" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Configuration" result="Pass" time="0.0010263" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Framework_Profile" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Framework_Profile" result="Pass" time="0.004392" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Framework_Version" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Framework_Version" result="Pass" time="0.0008032" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Namespace" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Namespace" result="Pass" time="0.00087" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Output_Type" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Output_Type" result="Pass" time="0.0009031" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_OutputAssembly" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_OutputAssembly" result="Pass" time="0.0009007" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Parse_Platform" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Parse_Platform" result="Pass" time="0.0007551" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_Correct_File_Count" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_Correct_File_Count" result="Pass" time="0.000967" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_Null_When_Profile_Not_Defined" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_Null_When_Profile_Not_Defined" result="Pass" time="0.0012517" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_Parser_Result" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_Parser_Result" result="Pass" time="0.0679305" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_Project_References" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_Project_References" result="Pass" time="0.0013152" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_References" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_References" result="Pass" time="0.0029693" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod.Should_Return_Valid_Guid" type="Cake.Common.Tests.Unit.Solution.Project.ProjectParserTests+TheParseMethod" method="Should_Return_Valid_Guid" result="Pass" time="0.0031406" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor" time="0.005" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0034229" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0009955" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0010117" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" time="0.029" total="18" passed="18" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_CLSCompliant_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_CLSCompliant_Attribute_If_Set" result="Pass" time="0.0010204" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Company_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Company_Attribute_If_Set" result="Pass" time="0.0009931" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_ComVisible_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_ComVisible_Attribute_If_Set" result="Pass" time="0.0010914" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Configuration_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Configuration_Attribute_If_Set" result="Pass" time="0.0010018" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Copyright_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Copyright_Attribute_If_Set" result="Pass" time="0.0023645" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Description_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Description_Attribute_If_Set" result="Pass" time="0.0010373" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_FileVersion_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_FileVersion_Attribute_If_Set" result="Pass" time="0.0010211" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Guid_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Guid_Attribute_If_Set" result="Pass" time="0.0012028" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_InformationalVersion_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_InformationalVersion_Attribute_If_Set" result="Pass" time="0.0038634" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_InternalsVisibleTo_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_InternalsVisibleTo_Attribute_If_Set" result="Pass" time="0.0010898" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Multiple_InternalsVisibleTo_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Multiple_InternalsVisibleTo_Attribute_If_Set" result="Pass" time="0.0030956" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Product_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Product_Attribute_If_Set" result="Pass" time="0.0009864" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Title_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Title_Attribute_If_Set" result="Pass" time="0.0012418" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Trademark_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Trademark_Attribute_If_Set" result="Pass" time="0.0010705" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Add_Version_Attribute_If_Set" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Add_Version_Attribute_If_Set" result="Pass" time="0.0047891" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Make_Relative_Output_Path_Absolute" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Make_Relative_Output_Path_Absolute" result="Pass" time="0.0010295" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Throw_If_Output_Path_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Throw_If_Output_Path_Is_Null" result="Pass" time="0.0012785" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoCreatorTests+TheCreateMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001202" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheConstructor" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.001637" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0009679" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" time="0.093" total="38" passed="38" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Correctly_Parse_MonoDevelop_AssemblyInfo_File" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Correctly_Parse_MonoDevelop_AssemblyInfo_File" result="Pass" time="0.0030198" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Correctly_Parse_VisualStudio_AssemblyInfo_File" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Correctly_Parse_VisualStudio_AssemblyInfo_File" result="Pass" time="0.004388" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyFileVersion(value: &quot;1.2.*.*&quot;, expected: &quot;1.2.*.*&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyFileVersion" result="Pass" time="0.0010216" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyFileVersion(value: &quot;1.2.3.4&quot;, expected: &quot;1.2.3.4&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyFileVersion" result="Pass" time="0.0031513" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyFileVersion(value: null, expected: &quot;1.0.0.0&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyFileVersion" result="Pass" time="0.0013156" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyInformationalVersion(value: &quot;1.2.*.*&quot;, expected: &quot;1.2.*.*&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyInformationalVersion" result="Pass" time="0.0009931" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyInformationalVersion(value: &quot;1.2.3.4&quot;, expected: &quot;1.2.3.4&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyInformationalVersion" result="Pass" time="0.0012758" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyInformationalVersion(value: &quot;1.2.3-rc1&quot;, expected: &quot;1.2.3-rc1&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyInformationalVersion" result="Pass" time="0.0124979" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyInformationalVersion(value: null, expected: &quot;1.0.0.0&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyInformationalVersion" result="Pass" time="0.0012114" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyVersion(value: &quot;1.2.*.*&quot;, expected: &quot;1.2.*.*&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyVersion" result="Pass" time="0.000939" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyVersion(value: &quot;1.2.3.4&quot;, expected: &quot;1.2.3.4&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyVersion" result="Pass" time="0.0012327" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_AssemblyVersion(value: null, expected: &quot;1.0.0.0&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_AssemblyVersion" result="Pass" time="0.0007942" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ClsCompliance(value: False, expected: False)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ClsCompliance" result="Pass" time="0.005005" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ClsCompliance(value: null, expected: False)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ClsCompliance" result="Pass" time="0.0009904" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ClsCompliance(value: True, expected: True)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ClsCompliance" result="Pass" time="0.0008593" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Company(value: &quot;CompanyA&quot;, expected: &quot;CompanyA&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Company" result="Pass" time="0.021273" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Company(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Company" result="Pass" time="0.0008941" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ComVisible(value: False, expected: False)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ComVisible" result="Pass" time="0.0015541" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ComVisible(value: null, expected: False)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ComVisible" result="Pass" time="0.0009276" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_ComVisible(value: True, expected: True)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_ComVisible" result="Pass" time="0.0027613" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Configuration(value: &quot;Debug&quot;, expected: &quot;Debug&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Configuration" result="Pass" time="0.0012537" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Configuration(value: &quot;Release&quot;, expected: &quot;Release&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Configuration" result="Pass" time="0.0025003" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Configuration(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Configuration" result="Pass" time="0.0008613" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Copyright(value: &quot;Copyright (c) Patrik Svensson, Mattias Karlsson, G&quot;..., expected: &quot;Copyright (c) Patrik Svensson, Mattias Karlsson, G&quot;...)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Copyright" result="Pass" time="0.0030585" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Copyright(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Copyright" result="Pass" time="0.0012276" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Description(value: &quot;Assembly Description&quot;, expected: &quot;Assembly Description&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Description" result="Pass" time="0.0009481" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Description(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Description" result="Pass" time="0.0012394" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Guid(value: &quot;D394B7DB-0DDC-4D11-AD69-C408212E1E80&quot;, expected: &quot;D394B7DB-0DDC-4D11-AD69-C408212E1E80&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Guid" result="Pass" time="0.0013606" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Guid(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Guid" result="Pass" time="0.0008846" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_InternalsVisibleTo" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_InternalsVisibleTo" result="Pass" time="0.0022425" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Product(value: &quot;Cake&quot;, expected: &quot;Cake&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Product" result="Pass" time="0.0026002" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Product(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Product" result="Pass" time="0.0008281" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Title(value: &quot;Cake.Common&quot;, expected: &quot;Cake.Common&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Title" result="Pass" time="0.0013259" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Title(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Title" result="Pass" time="0.0022086" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Trademark(value: &quot;Trademark Cake&quot;, expected: &quot;Trademark Cake&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Trademark" result="Pass" time="0.0013804" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Read_Trademark(value: null, expected: &quot;&quot;)" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Read_Trademark" result="Pass" time="0.000778" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Throw_If_AssemblyInfo_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Throw_If_AssemblyInfo_File_Do_Not_Exist" result="Pass" time="0.0011111" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod.Should_Throw_If_AssemblyInfo_Path_Is_Null" type="Cake.Common.Tests.Unit.Solution.Project.Properties.AssemblyInfoParserTests+TheParseMethod" method="Should_Throw_If_AssemblyInfo_Path_Is_Null" result="Pass" time="0.000896" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod" time="0.019" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod.Should_Return_Correct_Number_Of_Examples" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod" method="Should_Return_Correct_Number_Of_Examples" result="Pass" time="0.0141377" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod.Should_Throw_If_Pattern_Is_Empty" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod" method="Should_Throw_If_Pattern_Is_Empty" result="Pass" time="0.0009848" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod.Should_Throw_If_Pattern_Was_Null" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseFilesMethod" method="Should_Throw_If_Pattern_Was_Null" result="Pass" time="0.0041117" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod.Should_Return_Correct_Number_Of_Examples" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod" method="Should_Return_Correct_Number_Of_Examples" result="Pass" time="0.0012387" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod.Should_Throw_If_Xml_Is_Missing" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod" method="Should_Throw_If_Xml_Is_Missing" result="Pass" time="0.0012079" />
      <test name="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod.Should_Throw_If_Xml_Path_Was_Null" type="Cake.Common.Tests.Unit.Solution.Project.XmlDoc.XmlDocExampleCodeParserTests+TheParseMethod" method="Should_Throw_If_Xml_Path_Was_Null" result="Pass" time="0.0010002" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.SolutionParserAliasesTests+TheParseSolutionMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserAliasesTests+TheParseSolutionMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Solution.SolutionParserAliasesTests+TheParseSolutionMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0010433" />
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserAliasesTests+TheParseSolutionMethod.Should_Throw_If_SolutionPath_Is_Null" type="Cake.Common.Tests.Unit.Solution.SolutionParserAliasesTests+TheParseSolutionMethod" method="Should_Throw_If_SolutionPath_Is_Null" result="Pass" time="0.0012272" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.000971" />
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheConstructor.Should_Throw_If_FileSystem_Is_Null" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheConstructor" method="Should_Throw_If_FileSystem_Is_Null" result="Pass" time="0.0006501" />
    </class>
    <class name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod" time="0.024" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod.Should_Properly_Parse_Folders" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod" method="Should_Properly_Parse_Folders" result="Pass" time="0.0136281" />
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod.Should_Properly_Parse_Projects" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod" method="Should_Properly_Parse_Projects" result="Pass" time="0.0018217" />
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod.Should_Properly_Parse_Relation_Between_Project_And_Folder" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod" method="Should_Properly_Parse_Relation_Between_Project_And_Folder" result="Pass" time="0.0079033" />
      <test name="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod.Should_Throw_If_SolutionPath_Is_Null" type="Cake.Common.Tests.Unit.Solution.SolutionParserTests+TheParseMethod" method="Should_Throw_If_SolutionPath_Is_Null" result="Pass" time="0.00102" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" time="0.007" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Create_Text_Transformation_From_Disc_Template" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Create_Text_Transformation_From_Disc_Template" result="Pass" time="0.0009832" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0010022" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Throw_If_Left_Placeholder_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Throw_If_Left_Placeholder_Is_Null" result="Pass" time="0.0008703" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Throw_If_Right_Placeholder_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Throw_If_Right_Placeholder_Is_Null" result="Pass" time="0.0008838" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Throw_If_Template_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Throw_If_Template_Is_Null" result="Pass" time="0.0007555" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder.Should_Transform_Text_From_Disc_Template_Using_Specified_Placeholders" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithCustomPlaceholder" method="Should_Transform_Text_From_Disc_Template_Using_Specified_Placeholders" result="Pass" time="0.0025812" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder" time="0.012" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder.Should_Create_Text_Transformation_From_Disc_Template" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder" method="Should_Create_Text_Transformation_From_Disc_Template" result="Pass" time="0.0011518" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0006682" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder.Should_Throw_If_Template_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder" method="Should_Throw_If_Template_Is_Null" result="Pass" time="0.0042625" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder.Should_Transform_Text_From_Disc_Template_Using_Default_Placeholders" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextFileMethod+WithDefaultPlaceholder" method="Should_Transform_Text_From_Disc_Template_Using_Default_Placeholders" result="Pass" time="0.006348" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" time="0.012" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Create_Text_Transformation" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Create_Text_Transformation" result="Pass" time="0.0071644" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0006414" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Throw_If_Left_Placeholder_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Throw_If_Left_Placeholder_Is_Null" result="Pass" time="0.0009864" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Throw_If_Right_Placeholder_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Throw_If_Right_Placeholder_Is_Null" result="Pass" time="0.0007898" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Throw_If_Template_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Throw_If_Template_Is_Null" result="Pass" time="0.0009635" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder.Should_Transform_Text_Using_Specified_Placeholders" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithCustomPlaceholder" method="Should_Transform_Text_Using_Specified_Placeholders" result="Pass" time="0.00186" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder.Should_Create_Text_Transformation" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder" method="Should_Create_Text_Transformation" result="Pass" time="0.0004965" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0007567" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder.Should_Throw_If_Template_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder" method="Should_Throw_If_Template_Is_Null" result="Pass" time="0.0008486" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder.Should_Transform_Text_Using_Specified_Placeholders" type="Cake.Common.Tests.Unit.Text.TextTransformationAliasesTests+TheTransformTextMethod+WithDefaultPlaceholder" method="Should_Transform_Text_Using_Specified_Placeholders" result="Pass" time="0.0004554" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationExtensionsTests+TheWithTokenMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationExtensionsTests+TheWithTokenMethod.Should_Register_The_Provided_Token_With_The_Template" type="Cake.Common.Tests.Unit.Text.TextTransformationExtensionsTests+TheWithTokenMethod" method="Should_Register_The_Provided_Token_With_The_Template" result="Pass" time="0.0015576" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationExtensionsTests+TheWithTokenMethod.Should_Return_Same_Instance" type="Cake.Common.Tests.Unit.Text.TextTransformationExtensionsTests+TheWithTokenMethod" method="Should_Return_Same_Instance" result="Pass" time="0.0004614" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheConstructor" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheConstructor.Should_Throw_If_Template_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheConstructor" method="Should_Throw_If_Template_Is_Null" result="Pass" time="0.0018379" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheSaveMethod" time="0.015" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheSaveMethod.Should_Render_Content_To_File" type="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheSaveMethod" method="Should_Render_Content_To_File" result="Pass" time="0.0051444" />
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheSaveMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheSaveMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.0095278" />
    </class>
    <class name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheToStringMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheToStringMethod.Should_Render_The_Provided_Template" type="Cake.Common.Tests.Unit.Text.TextTransformationTests+TheToStringMethod" method="Should_Render_The_Provided_Template" result="Pass" time="0.0011459" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" time="0.028" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Add_Provided_Arguments_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Add_Provided_Arguments_To_Process_Arguments" result="Pass" time="0.0030656" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Add_Provided_Script_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Add_Provided_Script_To_Process_Arguments" result="Pass" time="0.0028276" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Add_Provided_Verbosity_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Add_Provided_Verbosity_To_Process_Arguments" result="Pass" time="0.0029704" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Throw_If_Cake_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Throw_If_Cake_Executable_Was_Not_Found" result="Pass" time="0.005178" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Throw_If_Script_Is_Missing" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Throw_If_Script_Is_Missing" result="Pass" time="0.0049984" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Throw_If_Script_Path_Was_Null" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Throw_If_Script_Path_Was_Null" result="Pass" time="0.0009943" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Use_Cake_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/Cake/Cake.exe&quot;, expected: &quot;/Working/tools/Cake/Cake.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Use_Cake_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003749" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Use_Cake_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/Cake/Cake.exe&quot;, expected: &quot;/bin/Cake/Cake.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Use_Cake_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0066169" />
      <test name="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod.Should_Use_Cake_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/Cake/Cake.exe&quot;, expected: &quot;C:/Cake/Cake.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Cake.CakeRunnerTests+TheExecuteScriptMethod" method="Should_Use_Cake_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007484" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" time="0.173" total="26" passed="26" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0066539" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y --allowunoffic&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0058968" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0073847" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0069974" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0122113" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0051847" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0074273" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y --execution-ti&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.005294" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0077553" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0087043" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0055178" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0050749" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0108147" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0048684" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0095661" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0052451" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;apikey -s &quot;source1&quot; -k &quot;apikey1&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.011577" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Find_Chocolatey_Executable_By_Resolver_If_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Find_Chocolatey_Executable_By_Resolver_If_Found" result="Pass" time="0.0064305" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0050615" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0179938" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0069298" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0056911" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0030387" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.000896" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002423" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.ApiKey.ChocolateyApiKeySetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0009098" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" time="0.164" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0050962" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0069638" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.004885" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0101025" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0052537" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0113484" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0073815" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0066685" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0058419" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0095578" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0080522" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0095033" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0056244" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0052952" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0058285" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0055388" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;config set --name &quot;cacheLocation&quot; --value &quot;c:\temp&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0101613" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0065521" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0151787" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0064368" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0093509" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011115" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008139" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002451" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Config.ChocolateyConfigSetterTests+TheSetMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008806" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" time="0.160" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0076175" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y --allowunoff&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.005472" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0047283" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0077664" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.005191" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0078314" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0073965" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y --execution-&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0054894" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0070767" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0076645" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0107018" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.012522" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0050883" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0103939" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0054238" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.004827" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;feature disable -n &quot;checkSumFiles&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0069243" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0051622" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.00897" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0059371" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0088713" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010733" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002979" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008028" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheDisableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0064783" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" time="0.151" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0067325" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y --allowunoffi&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0053753" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0060622" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0097413" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0089151" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0067439" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0121865" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y --execution-t&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0069709" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0052857" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0067755" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0053907" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0046087" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.005692" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0051787" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0069279" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.00698" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;feature enable -n &quot;checkSumFiles&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0056406" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0090296" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0083822" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0080869" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0060823" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011451" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0019397" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003059" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Features.ChocolateyFeatureTogglerTests+TheEnableFeatureMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008309" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerSettingsTests" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerSettingsTests.Should_Set_Prerelease_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerSettingsTests" method="Should_Set_Prerelease_To_False_By_Default" result="Pass" time="0.001678" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" time="0.145" total="27" passed="27" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0071695" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;install &quot;/Working/packages.config&quot; -y --allowunoff&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.005988" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0051582" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;install &quot;/Working/packages.config&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0069883" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0057192" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;install &quot;/Working/packages.config&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0047769" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0055573" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;install &quot;/Working/packages.config&quot; -y --execution-&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0051377" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.005086" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;install &quot;/Working/packages.config&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0045633" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0052908" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;install &quot;/Working/packages.config&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0066003" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0063319" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0067352" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;install &quot;/Working/packages.config&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0050966" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Source_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Source_To_Arguments_If_Set" result="Pass" time="0.0135736" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;install &quot;/Working/packages.config&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0087209" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;install &quot;/Working/packages.config&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0049126" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0071584" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0075414" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0055431" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0065126" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0009647" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Target_Package_Config_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Target_Package_Config_Path_Is_Null" result="Pass" time="0.0010665" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0010026" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002774" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallFromConfigMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0010476" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" time="0.401" total="58" passed="58" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AcceptLicense_Flag_To_Arguments_If_Set(acceptLicense: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AcceptLicense_Flag_To_Arguments_If_Set" result="Pass" time="0.006417" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AcceptLicense_Flag_To_Arguments_If_Set(acceptLicense: True, expected: &quot;install &quot;Cake&quot; --acceptLicense -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AcceptLicense_Flag_To_Arguments_If_Set" result="Pass" time="0.0061897" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set(allowDowngrade: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set" result="Pass" time="0.0061037" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set(allowDowngrade: True, expected: &quot;install &quot;Cake&quot; -y --allowdowngrade&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set" result="Pass" time="0.0053445" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0048582" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;install &quot;Cake&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0053769" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0048199" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;install &quot;Cake&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.005716" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0058577" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;install &quot;Cake&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0053469" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.007055" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;install &quot;Cake&quot; -y --execution-timeout &quot;5&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0072113" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.004812" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;install &quot;Cake&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.007119" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_ForceDependencies_Flag_To_Arguments_If_Set(forceDependencies: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_ForceDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.0052415" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_ForceDependencies_Flag_To_Arguments_If_Set(forceDependencies: True, expected: &quot;install &quot;Cake&quot; -y -x&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_ForceDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.0080321" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Forcex86_Flag_To_Arguments_If_Set(forcex86: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Forcex86_Flag_To_Arguments_If_Set" result="Pass" time="0.0052052" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Forcex86_Flag_To_Arguments_If_Set(forcex86: True, expected: &quot;install &quot;Cake&quot; -y --x86&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Forcex86_Flag_To_Arguments_If_Set" result="Pass" time="0.0082898" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set(ignoreChecksums: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set" result="Pass" time="0.0079266" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set(ignoreChecksums: True, expected: &quot;install &quot;Cake&quot; -y --ignorechecksums&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set" result="Pass" time="0.0055561" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set(ignoreDependencies: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.0060958" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set(ignoreDependencies: True, expected: &quot;install &quot;Cake&quot; -y -i&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.00825" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_InstallArguments_To_Arguments_If_Set(installArgs: &quot;&quot;, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_InstallArguments_To_Arguments_If_Set" result="Pass" time="0.0061759" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_InstallArguments_To_Arguments_If_Set(installArgs: &quot;args1&quot;, expected: &quot;install &quot;Cake&quot; -y --ia &quot;args1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_InstallArguments_To_Arguments_If_Set" result="Pass" time="0.0054294" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.006571" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;install &quot;Cake&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0050753" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0070901" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0145708" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;install &quot;Cake&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0062655" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_NotSilent_Flag_To_Arguments_If_Set(notSilent: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_NotSilent_Flag_To_Arguments_If_Set" result="Pass" time="0.0136044" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_NotSilent_Flag_To_Arguments_If_Set(notSilent: True, expected: &quot;install &quot;Cake&quot; -y --notSilent&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_NotSilent_Flag_To_Arguments_If_Set" result="Pass" time="0.0047635" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_OverrideArguments_Flag_To_Arguments_If_Set(overrideArguments: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_OverrideArguments_Flag_To_Arguments_If_Set" result="Pass" time="0.0098278" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_OverrideArguments_Flag_To_Arguments_If_Set(overrideArguments: True, expected: &quot;install &quot;Cake&quot; -y -o&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_OverrideArguments_Flag_To_Arguments_If_Set" result="Pass" time="0.0143924" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_PackageParameters_To_Arguments_If_Set(packageParameters: &quot;&quot;, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_PackageParameters_To_Arguments_If_Set" result="Pass" time="0.0060958" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_PackageParameters_To_Arguments_If_Set(packageParameters: &quot;param1&quot;, expected: &quot;install &quot;Cake&quot; -y --params &quot;param1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_PackageParameters_To_Arguments_If_Set" result="Pass" time="0.0069607" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Password_To_Arguments_If_Set(password: &quot;&quot;, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Password_To_Arguments_If_Set" result="Pass" time="0.0068813" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Password_To_Arguments_If_Set(password: &quot;password1&quot;, expected: &quot;install &quot;Cake&quot; -y -p &quot;password1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Password_To_Arguments_If_Set" result="Pass" time="0.0046707" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Prerelease_Flag_To_Arguments_If_Set(prerelease: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Prerelease_Flag_To_Arguments_If_Set" result="Pass" time="0.0084907" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Prerelease_Flag_To_Arguments_If_Set(prerelease: True, expected: &quot;install &quot;Cake&quot; -y --pre&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Prerelease_Flag_To_Arguments_If_Set" result="Pass" time="0.0049051" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_SideBySide_Flag_To_Arguments_If_Set(sideBySide: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_SideBySide_Flag_To_Arguments_If_Set" result="Pass" time="0.0079527" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_SideBySide_Flag_To_Arguments_If_Set(sideBySide: True, expected: &quot;install &quot;Cake&quot; -y -m&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_SideBySide_Flag_To_Arguments_If_Set" result="Pass" time="0.0097843" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set(skipPowerShell: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set" result="Pass" time="0.0057748" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set(skipPowerShell: True, expected: &quot;install &quot;Cake&quot; -y -n&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set" result="Pass" time="0.0117195" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Source_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Source_To_Arguments_If_Set" result="Pass" time="0.0113362" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_User_To_Arguments_If_Set(user: &quot;&quot;, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_User_To_Arguments_If_Set" result="Pass" time="0.0052668" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_User_To_Arguments_If_Set(user: &quot;user1&quot;, expected: &quot;install &quot;Cake&quot; -y -u &quot;user1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_User_To_Arguments_If_Set" result="Pass" time="0.009707" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;install &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.005056" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;install &quot;Cake&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0182152" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0130234" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.00548" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0082432" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0113192" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0056035" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001046" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Throw_If_Target_Package_Id_Is_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Throw_If_Target_Package_Id_Is_Null" result="Pass" time="0.0010989" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009781" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003165" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Install.ChocolateyInstallerTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008352" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests" time="0.021" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests.Should_Replace_Template_Tokens_In_Nuspec_With_Files" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests" method="Should_Replace_Template_Tokens_In_Nuspec_With_Files" result="Pass" time="0.0104176" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests.Should_Replace_Template_Tokens_In_Nuspec_With_Files_Without_Namespaces" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests" method="Should_Replace_Template_Tokens_In_Nuspec_With_Files_Without_Namespaces" result="Pass" time="0.0106118" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" time="0.277" total="32" passed="32" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.047179" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;pack -y --allowunofficial &quot;/Working/existing.temp.&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0055474" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.007961" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;pack -y -c &quot;c:\temp&quot; &quot;/Working/existing.temp.nuspe&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.010067" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0124414" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;pack -d -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0103007" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0108044" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;pack -y --execution-timeout &quot;5&quot; &quot;/Working/existing&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0071044" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0116693" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;pack -y -f &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0050773" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0057338" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;pack -y -r &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0098333" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Metadata_Element_To_Nuspec_If_Missing" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Metadata_Element_To_Nuspec_If_Missing" result="Pass" time="0.0096107" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0064179" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;pack -y --noop &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0096158" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;pack -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0054491" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;pack -v -y &quot;/Working/existing.temp.nuspec&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0150883" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0056749" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Delete_Transformed_Nuspec" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Delete_Transformed_Nuspec" result="Pass" time="0.0065043" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0054373" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Replace_Template_Tokens_In_Nuspec" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Replace_Template_Tokens_In_Nuspec" result="Pass" time="0.0090931" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Replace_Template_Tokens_In_Nuspec_Without_Namespaces" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Replace_Template_Tokens_In_Nuspec_Without_Namespaces" result="Pass" time="0.0116764" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0070471" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Nuspec_Do_Not_Exist" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Nuspec_Do_Not_Exist" result="Pass" time="0.0011423" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Nuspec_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Nuspec_File_Path_Is_Null" result="Pass" time="0.0011052" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0236534" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0083656" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.002537" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Throw_If_Temporary_Nuspec_Already_Exist" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Throw_If_Temporary_Nuspec_Already_Exist" result="Pass" time="0.0016634" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0011889" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0005865" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+ThePackMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0017467" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" time="0.018" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Pack_If_Sufficient_Settings_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Pack_If_Sufficient_Settings_Specified" result="Pass" time="0.0104302" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Throw_If_Authors_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Throw_If_Authors_Setting_Not_Specified" result="Pass" time="0.0012106" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Throw_If_Description_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Throw_If_Description_Setting_Not_Specified" result="Pass" time="0.0014376" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Throw_If_Files_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Throw_If_Files_Setting_Not_Specified" result="Pass" time="0.0013887" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Throw_If_Id_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Throw_If_Id_Setting_Not_Specified" result="Pass" time="0.0011645" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod.Should_Throw_If_Version_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pack.ChocolateyPackerTests+TheSettingsPackMethod" method="Should_Throw_If_Version_Setting_Not_Specified" result="Pass" time="0.0027711" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" time="0.170" total="26" passed="26" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0089171" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;pin add -n &quot;Cake&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0059908" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0059915" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;pin add -n &quot;Cake&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0068565" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0092325" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;pin add -n &quot;Cake&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0051783" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0053149" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;pin add -n &quot;Cake&quot; -y --execution-timeout &quot;5&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0115525" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0050512" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;pin add -n &quot;Cake&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0069828" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0053595" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;pin add -n &quot;Cake&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.004675" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0051026" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0072721" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;pin add -n &quot;Cake&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0081343" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;pin add -n &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0054512" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;pin add -n &quot;Cake&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0180976" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0118055" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0061921" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0085038" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0077667" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0058474" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010488" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009197" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002754" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Pin.ChocolateyPinnerTests+ThePinMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0026598" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" time="0.166" total="28" passed="28" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0050682" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y --allowunofficia&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0053074" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Api_Key_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Api_Key_To_Arguments_If_Not_Null" result="Pass" time="0.0075433" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0065024" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0050374" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0112003" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0062824" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0049352" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y --execution-time&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0098562" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0057409" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0073586" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0055648" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.007085" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0057582" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0094117" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0074032" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Source_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Source_To_Arguments_If_Not_Null" result="Pass" time="0.005084" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Timeout_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Timeout_To_Arguments_If_Not_Null" result="Pass" time="0.0054783" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;push &quot;/Working/existing.nupkg&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0061265" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;push &quot;/Working/existing.nupkg&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0051894" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0056563" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.005611" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0120392" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0070357" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001089" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.000298" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009962" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Push.ChocolateyPusherTests+ThePushMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0013437" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" time="0.175" total="27" passed="27" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0102636" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y --allowunoffic&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0070807" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0053465" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0072197" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0072311" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0083802" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0054776" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y --execution-ti&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0075706" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0069958" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0095408" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0088496" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0068825" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0056414" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.005977" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0048613" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Priority_To_Arguments_If_Set(priority: 0, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Priority_To_Arguments_If_Set" result="Pass" time="0.0086818" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Priority_To_Arguments_If_Set(priority: 2, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y --priority &quot;2&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Priority_To_Arguments_If_Set" result="Pass" time="0.0085117" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0066105" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;source add -n &quot;name&quot; -s &quot;source&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0095136" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0083226" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0068454" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0059481" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0058293" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0033021" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003134" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009086" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheAddSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0025003" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" time="0.178" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0096" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;source disable -n &quot;name&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0057448" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0050899" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;source disable -n &quot;name&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0051756" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0084939" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;source disable -n &quot;name&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0053106" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0055679" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;source disable -n &quot;name&quot; -y --execution-timeout &quot;5&quot;...)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0047915" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0052072" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;source disable -n &quot;name&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0378421" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0049221" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;source disable -n &quot;name&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0127395" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.00514" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.005697" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;source disable -n &quot;name&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0072764" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;source disable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.006123" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;source disable -n &quot;name&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0121675" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0068967" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0077087" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0060176" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0064491" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.00105" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008435" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002407" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheDisableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0019575" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" time="0.151" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0145068" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;source enable -n &quot;name&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0064882" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0095305" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;source enable -n &quot;name&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.006138" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0085571" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;source enable -n &quot;name&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0049979" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0055135" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;source enable -n &quot;name&quot; -y --execution-timeout &quot;5&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0051353" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0072761" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;source enable -n &quot;name&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0048341" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0048815" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;source enable -n &quot;name&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0079341" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0050062" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0056671" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;source enable -n &quot;name&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0063361" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;source enable -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0092218" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;source enable -n &quot;name&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0053031" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0069208" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0072761" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.008576" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0079298" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010989" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0011258" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002482" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheEnableSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008921" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" time="0.162" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.005971" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;source remove -n &quot;name&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0082124" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0075801" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;source remove -n &quot;name&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0070996" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0055699" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;source remove -n &quot;name&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0094788" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0053896" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;source remove -n &quot;name&quot; -y --execution-timeout &quot;5&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0054929" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0081564" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;source remove -n &quot;name&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0052229" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0114072" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;source remove -n &quot;name&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0205028" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.005446" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0072449" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;source remove -n &quot;name&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0069421" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;source remove -n &quot;name&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0053552" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;source remove -n &quot;name&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.00728" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0055084" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0059162" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.006635" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0082816" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010847" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008459" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002206" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Sources.ChocolateySourcesTests+TheRemoveSourceMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0011013" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" time="0.394" total="60" passed="60" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AcceptLicense_Flag_To_Arguments_If_Set(acceptLicense: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AcceptLicense_Flag_To_Arguments_If_Set" result="Pass" time="0.0048546" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AcceptLicense_Flag_To_Arguments_If_Set(acceptLicense: True, expected: &quot;upgrade &quot;Cake&quot; --acceptLicense -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AcceptLicense_Flag_To_Arguments_If_Set" result="Pass" time="0.0051906" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set(allowDowngrade: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set" result="Pass" time="0.0093438" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set(allowDowngrade: True, expected: &quot;upgrade &quot;Cake&quot; -y --allowdowngrade&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AllowDowngrade_Flag_To_Arguments_If_Set" result="Pass" time="0.0084004" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0054061" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set(allowUnofficial: True, expected: &quot;upgrade &quot;Cake&quot; -y --allowunofficial&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_AllowUnofficial_Flag_To_Arguments_If_Set" result="Pass" time="0.0109154" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;&quot;, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0048349" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_CacheLocation_Flag_To_Arguments_If_Set(cacheLocation: &quot;c:\temp&quot;, expected: &quot;upgrade &quot;Cake&quot; -y -c &quot;c:\temp&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_CacheLocation_Flag_To_Arguments_If_Set" result="Pass" time="0.0102802" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0066496" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Debug_Flag_To_Arguments_If_Set(debug: True, expected: &quot;upgrade &quot;Cake&quot; -d -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Set" result="Pass" time="0.0064372" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 0, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0063381" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_ExecutionTimeout_To_Arguments_If_Set(executionTimeout: 5, expected: &quot;upgrade &quot;Cake&quot; -y --execution-timeout &quot;5&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_ExecutionTimeout_To_Arguments_If_Set" result="Pass" time="0.0075856" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_FailOnNotInstalled_Flag_To_Arguments_If_Set(failOnNotInstalled: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_FailOnNotInstalled_Flag_To_Arguments_If_Set" result="Pass" time="0.0055095" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_FailOnNotInstalled_Flag_To_Arguments_If_Set(failOnNotInstalled: True, expected: &quot;upgrade &quot;Cake&quot; -y --failonnotinstalled&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_FailOnNotInstalled_Flag_To_Arguments_If_Set" result="Pass" time="0.0055668" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_FailOnUnfound_Flag_To_Arguments_If_Set(failOnUnfound: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_FailOnUnfound_Flag_To_Arguments_If_Set" result="Pass" time="0.0052249" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_FailOnUnfound_Flag_To_Arguments_If_Set(failOnUnfound: True, expected: &quot;upgrade &quot;Cake&quot; -y --failonunfound&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_FailOnUnfound_Flag_To_Arguments_If_Set" result="Pass" time="0.0066919" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0051132" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Force_Flag_To_Arguments_If_Set(force: True, expected: &quot;upgrade &quot;Cake&quot; -y -f&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Force_Flag_To_Arguments_If_Set" result="Pass" time="0.0068624" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Forcex86_Flag_To_Arguments_If_Set(forcex86: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Forcex86_Flag_To_Arguments_If_Set" result="Pass" time="0.0047488" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Forcex86_Flag_To_Arguments_If_Set(forcex86: True, expected: &quot;upgrade &quot;Cake&quot; -y --x86&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Forcex86_Flag_To_Arguments_If_Set" result="Pass" time="0.0056461" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set(ignoreChecksums: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set" result="Pass" time="0.0080928" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set(ignoreChecksums: True, expected: &quot;upgrade &quot;Cake&quot; -y --ignorechecksums&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_IgnoreChecksums_Flag_To_Arguments_If_Set" result="Pass" time="0.0045618" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set(ignoreDependencies: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.0054961" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set(ignoreDependencies: True, expected: &quot;upgrade &quot;Cake&quot; -y -i&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_IgnoreDependencies_Flag_To_Arguments_If_Set" result="Pass" time="0.005024" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_InstallArguments_To_Arguments_If_Set(installArgs: &quot;&quot;, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_InstallArguments_To_Arguments_If_Set" result="Pass" time="0.0047196" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_InstallArguments_To_Arguments_If_Set(installArgs: &quot;args1&quot;, expected: &quot;upgrade &quot;Cake&quot; -y --ia &quot;args1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_InstallArguments_To_Arguments_If_Set" result="Pass" time="0.0060748" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0053571" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_LimitOutput_Flag_To_Arguments_If_Set(limitOutput: True, expected: &quot;upgrade &quot;Cake&quot; -y -r&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_LimitOutput_Flag_To_Arguments_If_Set" result="Pass" time="0.0076428" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0097555" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0090809" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Noop_Flag_To_Arguments_If_Set(noop: True, expected: &quot;upgrade &quot;Cake&quot; -y --noop&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Noop_Flag_To_Arguments_If_Set" result="Pass" time="0.0105352" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_NotSilent_Flag_To_Arguments_If_Set(notSilent: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_NotSilent_Flag_To_Arguments_If_Set" result="Pass" time="0.0099277" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_NotSilent_Flag_To_Arguments_If_Set(notSilent: True, expected: &quot;upgrade &quot;Cake&quot; -y --notSilent&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_NotSilent_Flag_To_Arguments_If_Set" result="Pass" time="0.0055218" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_OverrideArguments_Flag_To_Arguments_If_Set(overrideArguments: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_OverrideArguments_Flag_To_Arguments_If_Set" result="Pass" time="0.0049352" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_OverrideArguments_Flag_To_Arguments_If_Set(overrideArguments: True, expected: &quot;upgrade &quot;Cake&quot; -y -o&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_OverrideArguments_Flag_To_Arguments_If_Set" result="Pass" time="0.0082527" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_PackageParameters_To_Arguments_If_Set(packageParameters: &quot;&quot;, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_PackageParameters_To_Arguments_If_Set" result="Pass" time="0.0123499" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_PackageParameters_To_Arguments_If_Set(packageParameters: &quot;param1&quot;, expected: &quot;upgrade &quot;Cake&quot; -y --params &quot;param1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_PackageParameters_To_Arguments_If_Set" result="Pass" time="0.0060626" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Password_To_Arguments_If_Set(password: &quot;&quot;, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Password_To_Arguments_If_Set" result="Pass" time="0.0057215" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Password_To_Arguments_If_Set(password: &quot;password1&quot;, expected: &quot;upgrade &quot;Cake&quot; -y -p &quot;password1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Password_To_Arguments_If_Set" result="Pass" time="0.0060985" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Prerelease_Flag_To_Arguments_If_Set(prerelease: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Prerelease_Flag_To_Arguments_If_Set" result="Pass" time="0.0104645" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Prerelease_Flag_To_Arguments_If_Set(prerelease: True, expected: &quot;upgrade &quot;Cake&quot; -y --pre&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Prerelease_Flag_To_Arguments_If_Set" result="Pass" time="0.0071032" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_SideBySide_Flag_To_Arguments_If_Set(sideBySide: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_SideBySide_Flag_To_Arguments_If_Set" result="Pass" time="0.0051779" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_SideBySide_Flag_To_Arguments_If_Set(sideBySide: True, expected: &quot;upgrade &quot;Cake&quot; -y -m&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_SideBySide_Flag_To_Arguments_If_Set" result="Pass" time="0.007192" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set(skipPowerShell: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set" result="Pass" time="0.0082815" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set(skipPowerShell: True, expected: &quot;upgrade &quot;Cake&quot; -y -n&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_SkipPowerShell_Flag_To_Arguments_If_Set" result="Pass" time="0.0046218" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Source_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Source_To_Arguments_If_Set" result="Pass" time="0.0076961" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_User_To_Arguments_If_Set(user: &quot;&quot;, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_User_To_Arguments_If_Set" result="Pass" time="0.0071218" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_User_To_Arguments_If_Set(user: &quot;user1&quot;, expected: &quot;upgrade &quot;Cake&quot; -y -u &quot;user1&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_User_To_Arguments_If_Set" result="Pass" time="0.0088981" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: False, expected: &quot;upgrade &quot;Cake&quot; -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0053496" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Verbose_Flag_To_Arguments_If_Set(verbose: True, expected: &quot;upgrade &quot;Cake&quot; -v -y&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Verbose_Flag_To_Arguments_If_Set" result="Pass" time="0.0076105" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0086554" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Find_Chocolatey_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0108889" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Throw_If_Chocolatey_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Throw_If_Chocolatey_Executable_Was_Not_Found" result="Pass" time="0.0067384" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0064483" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0100623" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010054" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Throw_If_Target_Package_Id_Is_Null" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Throw_If_Target_Package_Id_Is_Null" result="Pass" time="0.0021391" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./chocolatey/choco.exe&quot;, expected: &quot;/Working/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008368" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/chocolatey/choco.exe&quot;, expected: &quot;/bin/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.000234" />
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod.Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ProgramData/chocolatey/choco.exe&quot;, expected: &quot;C:/ProgramData/chocolatey/choco.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgraderTests+TheInstallMethod" method="Should_Use_Chocolatey_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008699" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgradeSettingsTests" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgradeSettingsTests.Should_Set_Prerelease_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.Chocolatey.Upgrade.ChocolateyUpgradeSettingsTests" method="Should_Set_Prerelease_To_False_By_Default" result="Pass" time="0.0004491" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" time="0.045" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Arguments_And_Settings_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Arguments_And_Settings_If_Set" result="Pass" time="0.0030324" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Configurations_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Configurations_If_Set" result="Pass" time="0.0028647" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Frameworks_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Frameworks_If_Set" result="Pass" time="0.0067329" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0026266" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Proxy_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Proxy_If_Set" result="Pass" time="0.0029195" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Add_Quiet_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Add_Quiet_If_Set" result="Pass" time="0.0028647" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Throw_If_DNU_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Throw_If_DNU_Executable_Was_Not_Found" result="Pass" time="0.009302" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Throw_If_Path_Are_Null" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Throw_If_Path_Are_Null" result="Pass" time="0.0025749" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0072406" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0033186" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DNU.Build.DNUBuilderTests+TheBuildMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010362" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" time="0.049" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Arguments_And_Settings_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Arguments_And_Settings_If_Set" result="Pass" time="0.0035188" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Configurations_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Configurations_If_Set" result="Pass" time="0.0029898" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Frameworks_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Frameworks_If_Set" result="Pass" time="0.0028568" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0071568" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Proxy_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Proxy_If_Set" result="Pass" time="0.008278" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Add_Quiet_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Add_Quiet_If_Set" result="Pass" time="0.0083779" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Throw_If_DNU_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Throw_If_DNU_Executable_Was_Not_Found" result="Pass" time="0.0066607" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Throw_If_Path_Are_Null" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Throw_If_Path_Are_Null" result="Pass" time="0.0011471" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0034754" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0033763" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DNU.Pack.DNUPackerTests+ThePackMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011483" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" time="0.085" total="18" passed="18" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Arguments_And_Settings_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Arguments_And_Settings_If_Set" result="Pass" time="0.00367" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_FallbackSources_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_FallbackSources_If_Set" result="Pass" time="0.0058829" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_FilePath_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_FilePath_If_Set" result="Pass" time="0.0027549" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_IgnoreFailedSources_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_IgnoreFailedSources_If_Set" result="Pass" time="0.00301" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Locked_If_Set(locked: Lock, arg: &quot;--lock&quot;)" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Locked_If_Set" result="Pass" time="0.0030364" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Locked_If_Set(locked: Unlock, arg: &quot;--unlock&quot;)" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Locked_If_Set" result="Pass" time="0.0029345" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0026894" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_NoCache_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_NoCache_If_Set" result="Pass" time="0.0031481" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Packages_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Packages_If_Set" result="Pass" time="0.0130056" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Parallel_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Parallel_If_Set" result="Pass" time="0.0028813" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Proxy_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Proxy_If_Set" result="Pass" time="0.0061419" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Quiet_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Quiet_If_Set" result="Pass" time="0.002781" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Runtime_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Runtime_If_Set" result="Pass" time="0.0088346" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Add_Sources_If_Set" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Add_Sources_If_Set" result="Pass" time="0.0043237" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Throw_If_DNU_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Throw_If_DNU_Executable_Was_Not_Found" result="Pass" time="0.0096833" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0056386" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034094" />
      <test name="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DNU.Restore.DNURestorerTests+TheRestoreMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001108" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" time="0.085" total="19" passed="19" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_AttributeFilters" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_AttributeFilters" result="Pass" time="0.0039649" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_DisableDefaultFilters" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_DisableDefaultFilters" result="Pass" time="0.0033723" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_Filters" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_Filters" result="Pass" time="0.0042522" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_ReportType(reportType: DetailedXML, reportTypeString: &quot;DetailedXML&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_ReportType" result="Pass" time="0.0035377" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_ReportType(reportType: HTML, reportTypeString: &quot;HTML&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_ReportType" result="Pass" time="0.0029397" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_ReportType(reportType: JSON, reportTypeString: &quot;JSON&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_ReportType" result="Pass" time="0.0030411" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_ReportType(reportType: NDependXML, reportTypeString: &quot;NDependXML&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_ReportType" result="Pass" time="0.0027451" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_Scope" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_Scope" result="Pass" time="0.0056003" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Append_TargetWorkingDir" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Append_TargetWorkingDir" result="Pass" time="0.014244" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Capture_NUnit" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Capture_NUnit" result="Pass" time="0.011571" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Capture_Tool_And_Arguments_From_Action" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Capture_Tool_And_Arguments_From_Action" result="Pass" time="0.0053118" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Capture_XUnit" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Capture_XUnit" result="Pass" time="0.0095677" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0028292" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: null)" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0039878" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Throw_If_Action_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0013247" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0015351" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Throw_If_No_Tool_Was_Intercepted" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Throw_If_No_Tool_Was_Intercepted" result="Pass" time="0.0016038" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Throw_If_Output_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Throw_If_Output_File_Is_Null" result="Pass" time="0.0012754" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyserTests+TheAnalyseMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0020227" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyseSettingsTests+TheConstructor" time="0.005" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyseSettingsTests+TheConstructor.Should_Enable_Default_Filters_By_Default" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyseSettingsTests+TheConstructor" method="Should_Enable_Default_Filters_By_Default" result="Pass" time="0.0011107" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyseSettingsTests+TheConstructor.Should_Use_XML_Report_Type_By_Default" type="Cake.Common.Tests.Unit.Tools.DotCover.Analyse.DotCoverAnalyseSettingsTests+TheConstructor" method="Should_Use_XML_Report_Type_By_Default" result="Pass" time="0.0043182" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" time="0.080" total="15" passed="15" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Append_AttributeFilters" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Append_AttributeFilters" result="Pass" time="0.0062655" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Append_DisableDefaultFilters" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Append_DisableDefaultFilters" result="Pass" time="0.0031844" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Append_Filters" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Append_Filters" result="Pass" time="0.0049221" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Append_Scope" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Append_Scope" result="Pass" time="0.0040146" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Append_TargetWorkingDir" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Append_TargetWorkingDir" result="Pass" time="0.0043754" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Capture_NUnit" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Capture_NUnit" result="Pass" time="0.0202411" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Capture_Tool_And_Arguments_From_Action" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Capture_Tool_And_Arguments_From_Action" result="Pass" time="0.01162" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Capture_XUnit" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Capture_XUnit" result="Pass" time="0.0090098" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0056572" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: null)" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0037162" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Throw_If_Action_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0012766" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0016954" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Throw_If_No_Tool_Was_Intercepted" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Throw_If_No_Tool_Was_Intercepted" result="Pass" time="0.0015454" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Throw_If_Output_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Throw_If_Output_File_Is_Null" result="Pass" time="0.0015837" />
      <test name="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotCover.Cover.DotCoverCovererTests+TheCoverMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0013764" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetConfigurationMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0004338" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Set_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Set_Configuration" result="Pass" time="0.001691" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" time="0.001" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0004065" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Diagnostic)" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000319" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Minimal)" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000086" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Normal)" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0007314" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Quiet)" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000086" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Verbose)" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000105" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithPropertyMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Add_Property_To_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Add_Property_To_Configuration" result="Pass" time="0.0014601" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0005759" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithTargetMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Add_Target_To_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Add_Target_To_Configuration" result="Pass" time="0.0004776" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0011391" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConfigurationProperty" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConfigurationProperty.Should_Be_Empty_By_Default" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConfigurationProperty" method="Should_Be_Empty_By_Default" result="Pass" time="0.0004815" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConstructor" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConstructor.Should_Set_Default_Verbosity_To_Normal" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConstructor" method="Should_Set_Default_Verbosity_To_Normal" result="Pass" time="0.0005277" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConstructor.Should_Throw_If_Solution_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheConstructor" method="Should_Throw_If_Solution_Is_Null" result="Pass" time="0.0009146" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+ThePropertiesProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+ThePropertiesProperty.Should_Return_A_Dictionary_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+ThePropertiesProperty" method="Should_Return_A_Dictionary_That_Is_Case_Insensitive" result="Pass" time="0.0007484" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheSolutionProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheSolutionProperty.Should_Return_Passed_Constructor_Argument" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheSolutionProperty" method="Should_Return_Passed_Constructor_Argument" result="Pass" time="0.0013381" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheTargetsProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheTargetsProperty.Should_Return_A_Set_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.DotNetBuildSettingsTests+TheTargetsProperty" method="Should_Return_A_Set_That_Is_Case_Insensitive" result="Pass" time="0.0006599" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" time="0.064" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Add_Additional_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Add_Additional_Arguments" result="Pass" time="0.0052372" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Add_Build_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Add_Build_Arguments" result="Pass" time="0.0051558" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0073069" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Add_OutputPath_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Add_OutputPath_Arguments" result="Pass" time="0.00798" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Quote_Project_Path(text: &quot;./src/*&quot;, expected: &quot;build &quot;./src/*&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0049233" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Quote_Project_Path(text: &quot;./src/cake build/&quot;, expected: &quot;build &quot;./src/cake build/&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0071916" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Quote_Project_Path(text: &quot;./src/cake build/cake cli&quot;, expected: &quot;build &quot;./src/cake build/cake cli&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0068529" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0096419" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0056062" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Throw_If_Project_Is_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Throw_If_Project_Is_Null" result="Pass" time="0.0026097" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Build.DotNetCoreBuilderTests+TheBuildMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011356" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" time="0.037" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0073002" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod.Should_Add_Verbose" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" method="Should_Add_Verbose" result="Pass" time="0.0096896" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.012573" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0057622" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Execute.DotNetCoreExecutorTests+TheExecuteMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011905" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" time="0.058" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0050544" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Add_Project" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Add_Project" result="Pass" time="0.0071652" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Add_Settings" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Add_Settings" result="Pass" time="0.0053011" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Quote_Project_Path(text: &quot;./src/*&quot;, expected: &quot;pack &quot;./src/*&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Quote_Project_Path" result="Pass" time="0.010898" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Quote_Project_Path(text: &quot;./src/cake artifacts/&quot;, expected: &quot;pack &quot;./src/cake artifacts/&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Quote_Project_Path" result="Pass" time="0.004797" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Quote_Project_Path(text: &quot;./src/nuget/cake build&quot;, expected: &quot;pack &quot;./src/nuget/cake build&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Quote_Project_Path" result="Pass" time="0.007796" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0081429" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0078812" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Pack.DotNetCorePackerTests+ThePackMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001275" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" time="0.058" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0049747" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Add_Path" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Add_Path" result="Pass" time="0.0051522" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Add_Settings" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Add_Settings" result="Pass" time="0.0132488" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Quote_Project_Path(text: &quot;./src/*&quot;, expected: &quot;publish &quot;./src/*&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Quote_Project_Path" result="Pass" time="0.00737" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Quote_Project_Path(text: &quot;./src/cake artifacts/&quot;, expected: &quot;publish &quot;./src/cake artifacts/&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0051393" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Quote_Project_Path(text: &quot;./src/cake artifacts/cake binaries&quot;, expected: &quot;publish &quot;./src/cake artifacts/cake binaries&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0060574" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0066544" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0070203" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Publish.DotNetCorePublisherTests+ThePublishMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0025738" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" time="0.069" total="10" passed="10" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Quiet_Does_Not_Set_Verbosity" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Quiet_Does_Not_Set_Verbosity" result="Pass" time="0.0129878" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0057642" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Add_Path" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Add_Path" result="Pass" time="0.0081102" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Add_Settings" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Add_Settings" result="Pass" time="0.0084844" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Quote_Root_Path(text: &quot;./src/*&quot;, expected: &quot;restore &quot;./src/*&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Quote_Root_Path" result="Pass" time="0.0049758" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Quote_Root_Path(text: &quot;./src/cake build/&quot;, expected: &quot;restore &quot;./src/cake build/&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Quote_Root_Path" result="Pass" time="0.0046892" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Quote_Root_Path(text: &quot;./src/cake build/cake cli&quot;, expected: &quot;restore &quot;./src/cake build/cake cli&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Quote_Root_Path" result="Pass" time="0.0072418" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0074379" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0080676" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Restore.DotNetCoreRestorerTests+TheRestoreMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011941" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" time="0.038" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Add_Additional_Settings" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Add_Additional_Settings" result="Pass" time="0.0094263" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0062466" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Add_Path_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Add_Path_Arguments" result="Pass" time="0.0062884" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0075911" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0061913" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Run.DotNetCoreRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0023357" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" time="0.065" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Add_Additional_Settings" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Add_Additional_Settings" result="Pass" time="0.0056149" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0146766" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Add_Path" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Add_Path" result="Pass" time="0.0071924" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Quote_Project_Path(text: &quot;./test/*&quot;, expected: &quot;test &quot;./test/*&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0059248" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Quote_Project_Path(text: &quot;./test/cake unit tests/&quot;, expected: &quot;test &quot;./test/cake unit tests/&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0055889" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Quote_Project_Path(text: &quot;./test/cake unit tests/cake core tests&quot;, expected: &quot;test &quot;./test/cake unit tests/cake core tests&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Quote_Project_Path" result="Pass" time="0.0064159" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0060204" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0120404" />
      <test name="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.DotNetCore.Test.DotNetCoreTesterTests+TheTestMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001215" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunFromConfigMethod" time="0.009" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunFromConfigMethod.Should_Throw_If_Config_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunFromConfigMethod" method="Should_Throw_If_Config_File_Is_Null" result="Pass" time="0.0030194" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunFromConfigMethod.Should_Use_Provided_Config_File" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunFromConfigMethod" method="Should_Use_Provided_Config_File" result="Pass" time="0.0057061" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" time="0.127" total="22" passed="22" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Find_Inspect_Code_Runner" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Find_Inspect_Code_Runner" result="Pass" time="0.0039112" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Caches_Home" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Caches_Home" result="Pass" time="0.0162276" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Debug_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Debug_Switch" result="Pass" time="0.0032109" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Discard_Cost" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Discard_Cost" result="Pass" time="0.0040987" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Discard_Fields_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Discard_Fields_Switch" result="Pass" time="0.0072563" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Discard_Literals_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Discard_Literals_Switch" result="Pass" time="0.023272" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Discard_Local_Vars_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Discard_Local_Vars_Switch" result="Pass" time="0.0029499" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Discard_Types_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Discard_Types_Switch" result="Pass" time="0.0066433" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Exclude_By_Comment" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Exclude_By_Comment" result="Pass" time="0.0031082" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Exclude_Code_Regions" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Exclude_Code_Regions" result="Pass" time="0.0031055" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Exclude_Pattern" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Exclude_Pattern" result="Pass" time="0.0030344" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Idle_Priority_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Idle_Priority_Switch" result="Pass" time="0.0030482" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_MSBuild_Properties" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_MSBuild_Properties" result="Pass" time="0.0040434" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Normalize_Types_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Normalize_Types_Switch" result="Pass" time="0.002933" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Output_File" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Output_File" result="Pass" time="0.0120601" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Show_Stats_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Show_Stats_Switch" result="Pass" time="0.0030174" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Set_Show_Text_Switch" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Set_Show_Text_Switch" result="Pass" time="0.0059907" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Files_Are_Null" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Files_Are_Null" result="Pass" time="0.0014534" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0071241" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Throw_If_OutputFile_Contains_Duplicates_And_Set_To_Throw" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_OutputFile_Contains_Duplicates_And_Set_To_Throw" result="Pass" time="0.0037434" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034576" />
      <test name="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles.Should_Use_Provided_Files_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.DupFinder.DupFinderRunnerTests+TheRunMethodWithFiles" method="Should_Use_Provided_Files_In_Process_Arguments" result="Pass" time="0.0031264" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" time="0.061" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Find_Fixie_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Find_Fixie_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0030514" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_Custom_Options" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_Custom_Options" result="Pass" time="0.0031749" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_Multiple_Options" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_Multiple_Options" result="Pass" time="0.013653" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_NUnitXml_Output_File" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_NUnitXml_Output_File" result="Pass" time="0.0030056" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_TeamCity_Value(teamCityOutput: False, teamCityValue: &quot;off&quot;, expected: &quot;&quot;/Working/Test1.dll&quot; --TeamCity off&quot;)" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_TeamCity_Value" result="Pass" time="0.0026421" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_TeamCity_Value(teamCityOutput: True, teamCityValue: &quot;on&quot;, expected: &quot;&quot;/Working/Test1.dll&quot; --TeamCity on&quot;)" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_TeamCity_Value" result="Pass" time="0.0030092" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.004705" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Set_xUnitXml_Output_File" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Set_xUnitXml_Output_File" result="Pass" time="0.003068" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Throw_If_Assembly_Paths_Are_Null" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Paths_Are_Null" result="Pass" time="0.0009987" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Throw_If_Fixie_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Throw_If_Fixie_Runner_Was_Not_Found" result="Pass" time="0.0038883" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0056094" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0035192" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Use_Fixie_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/Fixie/Fixie.Console.exe&quot;, expected: &quot;/Working/tools/Fixie/Fixie.Console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Use_Fixie_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0003919" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Use_Fixie_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/Fixie/Fixie.Console.exe&quot;, expected: &quot;/bin/tools/Fixie/Fixie.Console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Use_Fixie_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0025801" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Use_Fixie_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/Fixie/Fixie.Console.exe&quot;, expected: &quot;C:/Fixie/Fixie.Console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Use_Fixie_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007776" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Path_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Path_In_Process_Arguments" result="Pass" time="0.0036526" />
      <test name="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Paths_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.Fixie.FixieRunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Paths_In_Process_Arguments" result="Pass" time="0.0032882" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" time="0.059" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Find_GitLink_Runner" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Find_GitLink_Runner" result="Pass" time="0.0028272" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_Branch" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_Branch" result="Pass" time="0.0047508" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_Configuration" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_Configuration" result="Pass" time="0.0028043" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_IsDebug_Switch" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_IsDebug_Switch" result="Pass" time="0.0028299" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_LogFilePath" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_LogFilePath" result="Pass" time="0.0064546" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_PdbDirectory" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_PdbDirectory" result="Pass" time="0.0028359" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_Platform" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_Platform" result="Pass" time="0.0029472" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_PowerShell_Switch" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_PowerShell_Switch" result="Pass" time="0.0103268" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_RepositoryUrl" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_RepositoryUrl" result="Pass" time="0.002828" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_ShaHash" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_ShaHash" result="Pass" time="0.0035843" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_SkipVerify_Switch" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_SkipVerify_Switch" result="Pass" time="0.0028816" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Set_SolutionFileName" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Set_SolutionFileName" result="Pass" time="0.0032449" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0036589" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0033668" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Throw_If_Repository_Root_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Throw_If_Repository_Root_Path_Is_Null" result="Pass" time="0.0010141" />
      <test name="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod.Should_Use_Provided_Repository_Root_Path_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.GitLink.GitlinkRunnerTests+TheRunMethod" method="Should_Use_Provided_Repository_Root_Path_In_Process_Arguments" result="Pass" time="0.0028584" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" time="0.044" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0029112" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0028639" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Add_TargetDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Add_TargetDirectory_To_Arguments_If_Set" result="Pass" time="0.0029069" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.002687" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Assets_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Assets_Is_Null" result="Pass" time="0.0033696" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" result="Pass" time="0.009315" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Owner_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Owner_Is_Null" result="Pass" time="0.0009674" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.0032425" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0034765" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0065245" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Repository_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Repository_Is_Null" result="Pass" time="0.0009911" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010077" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_TagName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_TagName_Is_Null" result="Pass" time="0.0011155" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Throw_If_UserName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Throw_If_UserName_Is_Null" result="Pass" time="0.0010839" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/Working/tools/GitReleaseManager/GitReleaseManager&quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003682" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.000836" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.AddAssets.GitReleaseManagerAssetsAdderTests+TheAddAssetsMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008107" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" time="0.043" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0029416" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0031307" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Add_TargetDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Add_TargetDirectory_To_Arguments_If_Set" result="Pass" time="0.0031805" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0040102" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" result="Pass" time="0.0095606" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Milestone_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Milestone_Is_Null" result="Pass" time="0.0011514" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Owner_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Owner_Is_Null" result="Pass" time="0.0009978" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.0011578" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0037343" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0053935" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Repository_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Repository_Is_Null" result="Pass" time="0.0010251" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0029448" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Throw_If_UserName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Throw_If_UserName_Is_Null" result="Pass" time="0.0009434" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/Working/tools/GitReleaseManager/GitReleaseManager&quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0004361" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0012359" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Close.GitReleaseManagerMilestoneCloserTests+TheCloseMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0010255" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" time="0.071" total="21" passed="21" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_Assets_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_Assets_To_Arguments_If_Set" result="Pass" time="0.0032065" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_InputFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_InputFilePath_To_Arguments_If_Set" result="Pass" time="0.0051701" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0029413" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0027281" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_Milestone_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_Milestone_To_Arguments_If_True" result="Pass" time="0.0028335" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_Name_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_Name_To_Arguments_If_Set" result="Pass" time="0.0028402" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_Prerelease_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_Prerelease_To_Arguments_If_True" result="Pass" time="0.0027699" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_TargetCommitish_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_TargetCommitish_To_Arguments_If_Set" result="Pass" time="0.0073215" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Add_TargetDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Add_TargetDirectory_To_Arguments_If_Set" result="Pass" time="0.0058052" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0029172" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" result="Pass" time="0.0095057" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Owner_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Owner_Is_Null" result="Pass" time="0.0009181" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.0043529" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035476" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.003578" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Repository_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Repository_Is_Null" result="Pass" time="0.000954" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0030834" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Throw_If_UserName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Throw_If_UserName_Is_Null" result="Pass" time="0.0010958" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/Working/tools/GitReleaseManager/GitReleaseManager&quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003706" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.00087" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Create.GitReleaseManagerCreatorTests+TheCreateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0042088" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" time="0.059" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0029629" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0027324" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Add_TagName_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Add_TagName_To_Arguments_If_Set" result="Pass" time="0.0031769" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Add_TargetDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Add_TargetDirectory_To_Arguments_If_Set" result="Pass" time="0.0029322" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0115004" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_FileOutputPath_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_FileOutputPath_Is_Null" result="Pass" time="0.0009351" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" result="Pass" time="0.01237" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Owner_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Owner_Is_Null" result="Pass" time="0.0010156" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.0010259" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0059312" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0052549" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Repository_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Repository_Is_Null" result="Pass" time="0.0051444" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010109" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Throw_If_UserName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Throw_If_UserName_Is_Null" result="Pass" time="0.0008877" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/Working/tools/GitReleaseManager/GitReleaseManager&quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003749" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008727" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Export.GitReleaseManagerExporterTests+TheExportMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008364" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" time="0.044" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0029282" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0028508" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Add_TargetDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Add_TargetDirectory_To_Arguments_If_Set" result="Pass" time="0.0027518" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Find_GitReleaseManager_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0026815" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_GitReleaseManager_Executable_Was_Not_Found" result="Pass" time="0.0110539" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Owner_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Owner_Is_Null" result="Pass" time="0.0010701" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.0028544" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035875" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0042527" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Repository_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Repository_Is_Null" result="Pass" time="0.0009856" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010436" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_TagName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_TagName_Is_Null" result="Pass" time="0.0029554" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Throw_If_UserName_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Throw_If_UserName_Is_Null" result="Pass" time="0.0009722" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/Working/tools/GitReleaseManager/GitReleaseManager&quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003804" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;/bin/tools/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009801" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;, expected: &quot;C:/GitReleaseManager/GitReleaseManager.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.GitReleaseManager.Publish.GitReleaseManagerPublisherTests+ThePublishMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0022188" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" time="0.103" total="27" passed="27" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_AllLabels_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_AllLabels_To_Arguments_If_Set" result="Pass" time="0.0097535" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_AllTags_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_AllTags_To_Arguments_If_Set" result="Pass" time="0.0034308" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_Categories_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_Categories_To_Arguments_If_Set" result="Pass" time="0.0028339" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTracker_To_Arguments_If_Set(issueTracker: BitBucket, expected: &quot;/OutputFile &quot;/temp/releasenotes.md&quot; /IssueTracker &quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTracker_To_Arguments_If_Set" result="Pass" time="0.0024766" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTracker_To_Arguments_If_Set(issueTracker: GitHub, expected: &quot;/OutputFile &quot;/temp/releasenotes.md&quot; /IssueTracker &quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTracker_To_Arguments_If_Set" result="Pass" time="0.0026278" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTracker_To_Arguments_If_Set(issueTracker: Jira, expected: &quot;/OutputFile &quot;/temp/releasenotes.md&quot; /IssueTracker &quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTracker_To_Arguments_If_Set" result="Pass" time="0.0038145" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTracker_To_Arguments_If_Set(issueTracker: YouTrack, expected: &quot;/OutputFile &quot;/temp/releasenotes.md&quot; /IssueTracker &quot;...)" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTracker_To_Arguments_If_Set" result="Pass" time="0.0047635" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerFilter_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerFilter_To_Arguments_If_Set" result="Pass" time="0.0029168" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerPassword_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerPassword_To_Arguments_If_Set" result="Pass" time="0.0030561" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerProjectId_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerProjectId_To_Arguments_If_Set" result="Pass" time="0.0027735" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerToken_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerToken_To_Arguments_If_Set" result="Pass" time="0.00322" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerUrl_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerUrl_To_Arguments_If_Set" result="Pass" time="0.010746" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_IssueTrackerUserName_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_IssueTrackerUserName_To_Arguments_If_Set" result="Pass" time="0.0028781" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0027455" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_RepoBranch_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_RepoBranch_To_Arguments_If_Set" result="Pass" time="0.002929" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_RepoPassword_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_RepoPassword_To_Arguments_If_Set" result="Pass" time="0.002867" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_RepoToken_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_RepoToken_To_Arguments_If_Set" result="Pass" time="0.002888" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_RepoUrl_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_RepoUrl_To_Arguments_If_Set" result="Pass" time="0.0041231" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_RepoUserName_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_RepoUserName_To_Arguments_If_Set" result="Pass" time="0.003019" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_Verbose_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_Verbose_To_Arguments_If_Set" result="Pass" time="0.0028236" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_Version_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_Version_To_Arguments_If_Set" result="Pass" time="0.0043272" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Add_WorkingDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Add_WorkingDirectory_To_Arguments_If_Set" result="Pass" time="0.0028382" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Find_GitReleaseNotes_Runner" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Find_GitReleaseNotes_Runner" result="Pass" time="0.002751" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0056994" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Throw_If_OutputFile_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Throw_If_OutputFile_Is_Null" result="Pass" time="0.0011479" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0084963" />
      <test name="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitReleaseNotes.GitReleaseNotesRunnerTests+TheExecutable" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0009438" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" time="0.105" total="15" passed="15" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_DynamicRepoSettings_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_DynamicRepoSettings_To_Arguments_If_Set" result="Pass" time="0.0031386" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_LogFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_LogFilePath_To_Arguments_If_Set" result="Pass" time="0.0107054" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_NoFetch_To_Arguments_If_Set(nofetch: False, args: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_NoFetch_To_Arguments_If_Set" result="Pass" time="0.0268229" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_NoFetch_To_Arguments_If_Set(nofetch: True, args: &quot;-nofetch&quot;)" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_NoFetch_To_Arguments_If_Set" result="Pass" time="0.0061253" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_OutputType_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_OutputType_To_Arguments_If_Set" result="Pass" time="0.0030712" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_RepositoryPath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_RepositoryPath_To_Arguments_If_Set" result="Pass" time="0.0032946" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_ShowVariable_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_ShowVariable_To_Arguments_If_Set" result="Pass" time="0.0030024" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_UpdateAssemblyInfo_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_UpdateAssemblyInfo_To_Arguments_If_Set" result="Pass" time="0.0032188" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_UpdateAssemblyInfoFilePath_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_UpdateAssemblyInfoFilePath_To_Arguments_If_Set" result="Pass" time="0.0033056" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Add_Username_And_Password_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Add_Username_And_Password_To_Arguments_If_Set" result="Pass" time="0.0032381" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Find_GitVersion_Runner" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Find_GitVersion_Runner" result="Pass" time="0.0031142" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Set_Working_Directory" result="Pass" time="0.0030119" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0283226" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0035914" />
      <test name="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.GitVersion.GitVersionRunnerTests+TheExecutable" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0010891" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" time="0.064" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Add_Provided_Assemblies_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Add_Provided_Assemblies_To_Process_Arguments" result="Pass" time="0.0029716" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Find_ILMerge_Executable_If_Tool_Path_Was_Not_Provided" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Find_ILMerge_Executable_If_Tool_Path_Was_Not_Provided" result="Pass" time="0.0045633" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Internalize_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Internalize_If_Enabled_In_Settings" result="Pass" time="0.0029937" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Not_Set_Target_Platform_If_Not_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Not_Set_Target_Platform_If_Not_Enabled_In_Settings" result="Pass" time="0.0034284" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Default, expected: &quot;/out:&quot;/Working/output.exe&quot; &quot;/Working/input.exe&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0041974" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Dll, expected: &quot;/out:&quot;/Working/output.exe&quot; /target:&quot;dll&quot; &quot;/Working&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0024482" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Exe, expected: &quot;/out:&quot;/Working/output.exe&quot; /target:&quot;exe&quot; &quot;/Working&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0028035" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: WinExe, expected: &quot;/out:&quot;/Working/output.exe&quot; /target:&quot;winexe&quot; &quot;/Work&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0067373" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Platform_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Platform_If_Enabled_In_Settings" result="Pass" time="0.0089021" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Target_Platform_Without_NETFramework_Path_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Target_Platform_Without_NETFramework_Path_If_Enabled_In_Settings" result="Pass" time="0.0037193" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0026361" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_Assembly_Paths_Are_Null" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_Assembly_Paths_Are_Null" result="Pass" time="0.0029112" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_ILMerge_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_ILMerge_Executable_Was_Not_Found" result="Pass" time="0.0033917" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_Output_Assembly_Path_Was_Null" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_Output_Assembly_Path_Was_Null" result="Pass" time="0.0009303" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_Primary_Assembly_Path_Was_Null" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_Primary_Assembly_Path_Was_Null" result="Pass" time="0.0009244" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035819" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0049904" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/ILMerge/ILMerge.exe&quot;, expected: &quot;/Working/tools/ILMerge/ILMerge.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009343" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/ILMerge/ILMerge.exe&quot;, expected: &quot;/bin/tools/ILMerge/ILMerge.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002758" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod.Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ILMerge/ILMerge.exe&quot;, expected: &quot;C:/ILMerge/ILMerge.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeRunnerTests+TheMergeMethod" method="Should_Use_ILMerge_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007424" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeSettingsTests+TheConstructor" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeSettingsTests+TheConstructor.Should_Set_Internalize_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeSettingsTests+TheConstructor" method="Should_Set_Internalize_To_False_By_Default" result="Pass" time="0.0006225" />
      <test name="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeSettingsTests+TheConstructor.Should_Set_Target_Kind_To_Default_By_Default" type="Cake.Common.Tests.Unit.Tools.ILMerge.ILMergeSettingsTests+TheConstructor" method="Should_Set_Target_Kind_To_Default_By_Default" result="Pass" time="0.0037505" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" time="0.125" total="37" passed="37" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Add_Provided_Assemblies_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Add_Provided_Assemblies_To_Process_Arguments" result="Pass" time="0.0029898" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Find_ILRepack_Executable_If_Tool_Path_Was_Not_Provided" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Find_ILRepack_Executable_If_Tool_Path_Was_Not_Provided" result="Pass" time="0.0027956" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Internalize_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Internalize_If_Enabled_In_Settings" result="Pass" time="0.0026302" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Not_Set_Target_Platform_If_Not_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Not_Set_Target_Platform_If_Not_Enabled_In_Settings" result="Pass" time="0.0051345" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_AllowDup_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_AllowDup_If_Enabled_In_Settings" result="Pass" time="0.0028288" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_AllowDuplicateResources_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_AllowDuplicateResources_If_Enabled_In_Settings" result="Pass" time="0.0028963" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_AllowMultiple_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_AllowMultiple_If_Enabled_In_Settings" result="Pass" time="0.0026128" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Attr_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Attr_If_Enabled_In_Settings" result="Pass" time="0.0056209" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_CopyAttrs_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_CopyAttrs_If_Enabled_In_Settings" result="Pass" time="0.0027837" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_DelaySign_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_DelaySign_If_Enabled_In_Settings" result="Pass" time="0.0037777" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_KeyFile_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_KeyFile_If_Enabled_In_Settings" result="Pass" time="0.0076539" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Libs_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Libs_If_Enabled_In_Settings" result="Pass" time="0.0030557" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Log_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Log_If_Enabled_In_Settings" result="Pass" time="0.0041441" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_NDebug_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_NDebug_If_Enabled_In_Settings" result="Pass" time="0.0026705" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Parallel_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Parallel_If_Enabled_In_Settings" result="Pass" time="0.0027494" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Pause_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Pause_If_Enabled_In_Settings" result="Pass" time="0.0073613" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Default, expected: &quot;/out:&quot;/Working/output.exe&quot; &quot;/Working/input.exe&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0024281" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Dll, expected: &quot;/target:&quot;library&quot; /out:&quot;/Working/output.exe&quot; &quot;/Wor&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0046798" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: Exe, expected: &quot;/target:&quot;exe&quot; /out:&quot;/Working/output.exe&quot; &quot;/Working&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0033546" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Target_Kind_If_Enabled_In_Settings(kind: WinExe, expected: &quot;/target:&quot;winexe&quot; /out:&quot;/Working/output.exe&quot; &quot;/Work&quot;...)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Target_Kind_If_Enabled_In_Settings" result="Pass" time="0.0025252" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Target_Platform_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Target_Platform_If_Enabled_In_Settings" result="Pass" time="0.0100224" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Union_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Union_If_Enabled_In_Settings" result="Pass" time="0.0029136" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Verbose_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Verbose_If_Enabled_In_Settings" result="Pass" time="0.0028698" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Version_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Version_If_Enabled_In_Settings" result="Pass" time="0.0028651" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Wildcards_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Wildcards_If_Enabled_In_Settings" result="Pass" time="0.0029278" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0028939" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_XmlDocs_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_XmlDocs_If_Enabled_In_Settings" result="Pass" time="0.0028832" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Set_ZeroPeKind_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Set_ZeroPeKind_If_Enabled_In_Settings" result="Pass" time="0.0029898" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_Assembly_Paths_Are_Null" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_Assembly_Paths_Are_Null" result="Pass" time="0.0009477" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_ILRepack_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_ILRepack_Executable_Was_Not_Found" result="Pass" time="0.0050394" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_Output_Assembly_Path_Was_Null" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_Output_Assembly_Path_Was_Null" result="Pass" time="0.0009607" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_Primary_Assembly_Path_Was_Null" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_Primary_Assembly_Path_Was_Null" result="Pass" time="0.0019698" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0033226" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0051724" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/ILRepack/ILRepack.exe&quot;, expected: &quot;/Working/tools/ILRepack/ILRepack.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0010014" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/ILRepack/ILRepack.exe&quot;, expected: &quot;/bin/tools/ILRepack/ILRepack.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002928" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod.Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/ILRepack/ILRepack.exe&quot;, expected: &quot;C:/ILRepack/ILRepack.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackRunnerTests+TheMergeMethod" method="Should_Use_ILRepack_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.000763" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackSettingsTests+TheConstructor" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackSettingsTests+TheConstructor.Should_Set_Internalize_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackSettingsTests+TheConstructor" method="Should_Set_Internalize_To_False_By_Default" result="Pass" time="0.0003299" />
      <test name="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackSettingsTests+TheConstructor.Should_Set_Target_Kind_To_Default_By_Default" type="Cake.Common.Tests.Unit.Tools.ILRepack.ILRepackSettingsTests+TheConstructor" method="Should_Set_Target_Kind_To_Default_By_Default" result="Pass" time="0.0007791" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunFromConfigMethod" time="0.009" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunFromConfigMethod.Should_Throw_If_Config_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunFromConfigMethod" method="Should_Throw_If_Config_File_Is_Null" result="Pass" time="0.0051337" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunFromConfigMethod.Should_Use_Provided_Config_File" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunFromConfigMethod" method="Should_Use_Provided_Config_File" result="Pass" time="0.0035385" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" time="0.088" total="18" passed="18" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Find_Inspect_Code_Runner" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Find_Inspect_Code_Runner" result="Pass" time="0.0030924" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Caches_Home" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Caches_Home" result="Pass" time="0.0031532" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Debug_Switch" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Debug_Switch" result="Pass" time="0.0030589" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Disabled_Settings_Layers" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Disabled_Settings_Layers" result="Pass" time="0.0092503" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_MsBuild_Properties" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_MsBuild_Properties" result="Pass" time="0.0032926" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_No_Buildin_Settings_Switch" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_No_Buildin_Settings_Switch" result="Pass" time="0.0085259" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_No_Solution_Wide_Analysis_Switch" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_No_Solution_Wide_Analysis_Switch" result="Pass" time="0.0031307" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Output" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Output" result="Pass" time="0.0065166" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Profile" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Profile" result="Pass" time="0.0031312" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Project_Filter" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Project_Filter" result="Pass" time="0.0036585" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Resharper_Plugins" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Resharper_Plugins" result="Pass" time="0.002976" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Set_Solution_Wide_Analysis_Switch" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Set_Solution_Wide_Analysis_Switch" result="Pass" time="0.0056003" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Throw_If_OutputFile_Contains_Violations_And_Set_To_Throw" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Throw_If_OutputFile_Contains_Violations_And_Set_To_Throw" result="Pass" time="0.009392" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0065375" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0037083" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Throw_If_Solution_Is_Null" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Throw_If_Solution_Is_Null" result="Pass" time="0.0010756" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Throw_If_Solution_Wide_Analysis_Is_Both_Disabled_And_Enabled" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Throw_If_Solution_Wide_Analysis_Is_Both_Disabled_And_Enabled" result="Pass" time="0.0035543" />
      <test name="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod.Should_Use_Provided_Solution_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.InspectCode.InspectCodeRunnerTests+TheRunMethod" method="Should_Use_Provided_Solution_In_Process_Arguments" result="Pass" time="0.008336" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" time="0.970" total="318" passed="318" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Configuration_As_Property_To_Process_Arguments(configuration: &quot;Custom Spaced&quot;, expected: &quot;/v:normal /p:Configuration=&quot;Custom Spaced&quot; /target&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Configuration_As_Property_To_Process_Arguments" result="Pass" time="0.0036849" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Configuration_As_Property_To_Process_Arguments(configuration: &quot;Release&quot;, expected: &quot;/v:normal /p:Configuration=&quot;Release&quot; /target:Build&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Configuration_As_Property_To_Process_Arguments" result="Pass" time="0.0020783" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Correct_Verbosity(verbosity: Diagnostic, expected: &quot;/v:diagnostic /target:Build &quot;/Working/src/Solution&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Correct_Verbosity" result="Pass" time="0.0023937" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Correct_Verbosity(verbosity: Minimal, expected: &quot;/v:minimal /target:Build &quot;/Working/src/Solution.sl&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Correct_Verbosity" result="Pass" time="0.0023325" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Correct_Verbosity(verbosity: Normal, expected: &quot;/v:normal /target:Build &quot;/Working/src/Solution.sln&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Correct_Verbosity" result="Pass" time="0.00478" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Correct_Verbosity(verbosity: Quiet, expected: &quot;/v:quiet /target:Build &quot;/Working/src/Solution.sln&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Correct_Verbosity" result="Pass" time="0.002389" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Correct_Verbosity(verbosity: Verbose, expected: &quot;/v:detailed /target:Build &quot;/Working/src/Solution.s&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Correct_Verbosity" result="Pass" time="0.0025508" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_MSIL_Platform_As_AnyCPU_For_Project" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_MSIL_Platform_As_AnyCPU_For_Project" result="Pass" time="0.0043805" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Platform_As_Property_To_Process_Arguments(platform: ARM, expected: &quot;/v:normal /p:Platform=arm /target:Build &quot;/Working/&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Platform_As_Property_To_Process_Arguments" result="Pass" time="0.0056177" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Platform_As_Property_To_Process_Arguments(platform: MSIL, expected: &quot;/v:normal /p:Platform=&quot;Any CPU&quot; /target:Build &quot;/Wo&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Platform_As_Property_To_Process_Arguments" result="Pass" time="0.0020873" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Platform_As_Property_To_Process_Arguments(platform: Win32, expected: &quot;/v:normal /p:Platform=Win32 /target:Build &quot;/Workin&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Platform_As_Property_To_Process_Arguments" result="Pass" time="0.0022314" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Platform_As_Property_To_Process_Arguments(platform: x64, expected: &quot;/v:normal /p:Platform=x64 /target:Build &quot;/Working/&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Platform_As_Property_To_Process_Arguments" result="Pass" time="0.0021596" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Platform_As_Property_To_Process_Arguments(platform: x86, expected: &quot;/v:normal /p:Platform=x86 /target:Build &quot;/Working/&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Platform_As_Property_To_Process_Arguments" result="Pass" time="0.0020846" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Property_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Property_To_Process_Arguments" result="Pass" time="0.0046407" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Property_With_Multiple_Values_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Property_With_Multiple_Values_To_Process_Arguments" result="Pass" time="0.0026329" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Append_Targets_To_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Append_Targets_To_Process_Arguments" result="Pass" time="0.0074581" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Build_Arm_With_x86_When_Specified" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Build_Arm_With_x86_When_Specified" result="Pass" time="0.0031682" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0020313" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0021028" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0021537" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0044382" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0019938" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0022299" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0023263" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0043059" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.002164" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0029796" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.004769" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0023495" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0025311" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0055119" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0020333" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0041018" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0024178" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0023744" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0094615" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0037162" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.002179" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0021261" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0036767" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.004304" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0032002" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0024751" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.004135" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0022264" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0023546" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12(version: NET451, target: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12" result="Pass" time="0.0020996" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0021004" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0022769" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0084059" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0025485" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.002492" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.00343" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0066906" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0020756" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0045088" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0021608" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0020807" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.002098" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0021071" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0060634" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0022219" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0023061" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0020673" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set(version: NET451, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/12.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_12_When_Platform_Set" result="Pass" time="0.0022181" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0020984" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0074904" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.002147" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0021067" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.002059" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0020708" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0027502" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0040545" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0021407" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0021198" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0021466" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0035476" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0034095" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0022887" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0022761" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0048021" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0021087" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.002102" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0037513" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14(version: VS2015, target: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14" result="Pass" time="0.0022409" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0021091" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0022019" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0022564" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0021525" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0045302" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0021711" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0024612" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/amd64/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0022212" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0058332" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.002053" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0171722" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set(version: VS2015, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Program86/MSBuild/14.0/Bin/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_14_When_Platform_Set" result="Pass" time="0.0020874" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021344" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021024" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021873" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0040987" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021328" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0040817" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.002132" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0037288" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0024467" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021292" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0023262" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0040177" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0027514" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021086" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.00225" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021411" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0021715" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0041563" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0040513" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0022358" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0023096" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0027024" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0054128" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0022749" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0023716" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0025141" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0036092" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0046414" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0024411" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2(version: VS2005, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2" result="Pass" time="0.0022958" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0037383" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0028062" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0029586" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0023219" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021269" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0046628" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0026945" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021316" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0026093" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x64, platformTarget: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021588" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0022583" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021829" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0040896" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021592" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0022638" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021257" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0040959" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0059272" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set(version: VS2005, buildPlatform: x86, platformTarget: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Explicitly_Set" result="Pass" time="0.0021731" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0025698" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0048254" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.002192" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0020878" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0022378" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.00313" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021202" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0028422" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.002181" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0023239" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0046707" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021521" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021032" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.005643" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021857" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0020917" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021423" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0049284" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021316" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021328" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021075" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.003987" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021158" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.006005" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0027699" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021414" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021127" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0020625" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0021332" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic(version: VS2005, buildPlatform: Automatic, platformTarget: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Build_Platform_Set_To_Automatic" result="Pass" time="0.0041441" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021521" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021186" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0037994" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021782" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021407" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0035504" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0042964" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021738" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021837" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.002113" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021478" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v2.0.50727/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021825" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0022295" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.002164" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.002149" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0041117" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0021225" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set(version: VS2005, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v2.0.50727/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_2_When_Platform_Set" result="Pass" time="0.0040959" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0020846" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0063243" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0021245" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0025157" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0021454" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0021391" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0021194" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0022007" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0022757" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0022926" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0037746" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0019883" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0047054" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0020878" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0020819" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.002136" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0020949" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.003353" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0044149" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35(version: VS2008, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35" result="Pass" time="0.0065032" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0027344" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0021375" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0024403" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0040391" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0020929" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0051697" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0021786" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v3.5/MSBuild.ex&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0021723" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0040813" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0020846" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0021233" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set(version: VS2008, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v3.5/MSBuild.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_35_When_Platform_Set" result="Pass" time="0.0020649" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0037237" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0061045" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0059801" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0020724" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0135441" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0045574" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0025651" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0020124" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021194" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: ARM, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021616" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021565" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021486" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021699" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021762" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021458" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021194" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0022275" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021869" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0048495" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: MSIL, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0025575" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0089578" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0024703" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0026981" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0037552" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0022374" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021036" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.002241" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0033881" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0022185" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: Win32, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0024632" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021225" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0020657" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021529" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021861" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0051389" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0047848" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021091" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0093947" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0030534" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0052162" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021454" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.00213" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021324" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021075" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021142" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021253" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0045771" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021738" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0037339" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4(version: NET45, target: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4" result="Pass" time="0.0021426" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020949" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.002044" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021146" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0045771" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0026124" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021316" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020669" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020965" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0042487" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: Automatic, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0024344" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021648" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021573" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020973" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0041164" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021462" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020937" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021442" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021474" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021166" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x64, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework64/v4.0.30319/MSBu&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0039795" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0051428" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021387" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021616" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0020894" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: False, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021178" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021648" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0034911" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0022469" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0037655" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set(version: NET45, platform: x86, is64BitOperativeSystem: True, expected: &quot;/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuil&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Get_Correct_Path_To_MSBuild_Version_4_When_Platform_Set" result="Pass" time="0.0021265" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Omit_Platform_Property_In_Process_Arguments_If_It_Is_Null" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Omit_Platform_Property_In_Process_Arguments_If_It_Is_Null" result="Pass" time="0.002678" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Return_The_Highest_MSBuild_Version_If_Tool_Version_Is_Set_To_Default" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Return_The_Highest_MSBuild_Version_If_Tool_Version_Is_Set_To_Default" result="Pass" time="0.0064037" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0023689" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Throw_If_MSBuild_Executable_Did_Not_Exist" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Throw_If_MSBuild_Executable_Did_Not_Exist" result="Pass" time="0.0053919" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0030044" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0030301" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Throw_If_Verbosity_Is_Unknown" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Throw_If_Verbosity_Is_Unknown" result="Pass" time="0.0032788" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Use_As_Many_Processors_As_Possible_If_MaxCpuCount_Is_Zero" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Use_As_Many_Processors_As_Possible_If_MaxCpuCount_Is_Zero" result="Pass" time="0.0044776" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Use_Correct_Default_Target_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Use_Correct_Default_Target_In_Process_Arguments" result="Pass" time="0.0049233" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Use_Node_Reuse_If_Specified" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Use_Node_Reuse_If_Specified" result="Pass" time="0.0025958" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod.Should_Use_Specified_Number_Of_Max_Processors" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildRunnerTests+TheRunMethod" method="Should_Use_Specified_Number_Of_Max_Processors" result="Pass" time="0.0025485" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0003323" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod.Should_Set_Node_Reuse(reuse: False)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod" method="Should_Set_Node_Reuse" result="Pass" time="0.0037923" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod.Should_Set_Node_Reuse(reuse: True)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheNodeReuseMethod" method="Should_Set_Node_Reuse" result="Pass" time="0.0000647" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetConfigurationMethod" time="0.007" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0065517" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Set_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Set_Configuration" result="Pass" time="0.0002478" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod" time="0.006" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0007863" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod.Should_Set_MaxCpuCount" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod" method="Should_Set_MaxCpuCount" result="Pass" time="0.0007823" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod.Should_Set_MaxCpuCount_To_Zero_If_Negative_Value" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetMaxCpuCountMethod" method="Should_Set_MaxCpuCount_To_Zero_If_Negative_Value" result="Pass" time="0.0040371" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetPlatformTargetMethod" time="0.005" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetPlatformTargetMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetPlatformTargetMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0003595" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetPlatformTargetMethod.Should_Set_Platform_Target" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetPlatformTargetMethod" method="Should_Set_Platform_Target" result="Pass" time="0.0041765" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" time="0.001" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0003054" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Diagnostic)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000042" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Minimal)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000288" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Normal)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0007606" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Quiet)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.000007" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Verbose)" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.000005" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheUseToolVersionMethod" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheUseToolVersionMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheUseToolVersionMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.000266" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheUseToolVersionMethod.Should_Set_Tool_Version" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheUseToolVersionMethod" method="Should_Set_Tool_Version" result="Pass" time="0.0039194" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithPropertyMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Add_Property_To_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Add_Property_To_Configuration" result="Pass" time="0.0004835" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0011175" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithTargetMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Add_Target_To_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Add_Target_To_Configuration" result="Pass" time="0.0011032" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0004239" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConfigurationProperty" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConfigurationProperty.Should_Be_Empty_By_Default" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConfigurationProperty" method="Should_Be_Empty_By_Default" result="Pass" time="0.0003911" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor.Should_Set_Default_Platform_Target_To_Null" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor" method="Should_Set_Default_Platform_Target_To_Null" result="Pass" time="0.0003433" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor.Should_Set_Default_Tools_Version_To_Default" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor" method="Should_Set_Default_Tools_Version_To_Default" result="Pass" time="0.0004645" />
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor.Should_Set_Default_Verbosity_To_Normal" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheConstructor" method="Should_Set_Default_Verbosity_To_Normal" result="Pass" time="0.000324" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheMaxCpuCountProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheMaxCpuCountProperty.Should_Be_Null_By_Default" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheMaxCpuCountProperty" method="Should_Be_Null_By_Default" result="Pass" time="0.0005687" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePlatformProperty" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePlatformProperty.Should_Be_Null_By_Default" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePlatformProperty" method="Should_Be_Null_By_Default" result="Pass" time="0.0004902" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePropertiesProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePropertiesProperty.Should_Return_A_Dictionary_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+ThePropertiesProperty" method="Should_Return_A_Dictionary_That_Is_Case_Insensitive" result="Pass" time="0.0007104" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheTargetsProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheTargetsProperty.Should_Return_A_Set_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.MSBuild.MSBuildSettingsTests+TheTargetsProperty" method="Should_Return_A_Set_That_Is_Case_Insensitive" result="Pass" time="0.0006516" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" time="0.044" total="25" passed="25" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Add_Testcontainer_For_Each_Assembly" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Add_Testcontainer_For_Each_Assembly" result="Pass" time="0.001097" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Not_Use_Isolation_By_Default" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Not_Use_Isolation_By_Default" result="Pass" time="0.00665" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Not_Use_TestCategoryFilter_If_Not_Provided" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Not_Use_TestCategoryFilter_If_Not_Provided" result="Pass" time="0.0009382" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Set_Working_Directory" result="Pass" time="0.0029957" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0013855" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0016792" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0045913" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011115" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Throw_If_Tool_Path_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Throw_If_Tool_Path_Was_Not_Found" result="Pass" time="0.0022113" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Environment_Tool_Path(existingToolPath: &quot;/NonStandardPath/Microsoft Visual Studio 10.0/Comm&quot;..., environmentName: &quot;VS100COMNTOOLS&quot;, environmentValue: &quot;/NonStandardPath/Microsoft Visual Studio 10.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Environment_Tool_Path" result="Pass" time="0.0032598" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Environment_Tool_Path(existingToolPath: &quot;/NonStandardPath/Microsoft Visual Studio 11.0/Comm&quot;..., environmentName: &quot;VS110COMNTOOLS&quot;, environmentValue: &quot;/NonStandardPath/Microsoft Visual Studio 11.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Environment_Tool_Path" result="Pass" time="0.0012758" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Environment_Tool_Path(existingToolPath: &quot;/NonStandardPath/Microsoft Visual Studio 12.0/Comm&quot;..., environmentName: &quot;VS120COMNTOOLS&quot;, environmentValue: &quot;/NonStandardPath/Microsoft Visual Studio 12.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Environment_Tool_Path" result="Pass" time="0.0012852" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Environment_Tool_Path(existingToolPath: &quot;/NonStandardPath/Microsoft Visual Studio 13.0/Comm&quot;..., environmentName: &quot;VS130COMNTOOLS&quot;, environmentValue: &quot;/NonStandardPath/Microsoft Visual Studio 13.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Environment_Tool_Path" result="Pass" time="0.0012904" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Environment_Tool_Path(existingToolPath: &quot;/NonStandardPath/Microsoft Visual Studio 14.0/Comm&quot;..., environmentName: &quot;VS140COMNTOOLS&quot;, environmentValue: &quot;/NonStandardPath/Microsoft Visual Studio 14.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Environment_Tool_Path" result="Pass" time="0.0018024" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 10.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0011471" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 11.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0011194" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 12.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0014317" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 14.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0009497" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Isolation_If_Disabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Isolation_If_Disabled_In_Settings" result="Pass" time="0.0009872" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_MSTest_From_Tool_Path_If_Provided(toolPath: &quot;./tools/xUnit/xunit.exe&quot;, expected: &quot;/Working/tools/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_MSTest_From_Tool_Path_If_Provided" result="Pass" time="0.0004996" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_MSTest_From_Tool_Path_If_Provided(toolPath: &quot;/bin/xUnit/xunit.exe&quot;, expected: &quot;/bin/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_MSTest_From_Tool_Path_If_Provided" result="Pass" time="0.0024131" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_MSTest_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/xUnit/xunit.exe&quot;, expected: &quot;C:/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_MSTest_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.000834" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_Test_Settings_File_If_Set" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_Test_Settings_File_If_Set" result="Pass" time="0.0010638" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_TestCategoryFilter_If_Provided" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_TestCategoryFilter_If_Provided" result="Pass" time="0.0009915" />
      <test name="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests.Should_Use_TestResultsFile_If_Provided" type="Cake.Common.Tests.Unit.Tools.MSTest.MSTestRunnerTests" method="Should_Use_TestResultsFile_If_Provided" result="Pass" time="0.0009682" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" time="0.046" total="13" passed="13" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Add_Defines_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Add_Defines_To_Arguments_If_Provided" result="Pass" time="0.0031489" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Add_NoChangeDirectory_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Add_NoChangeDirectory_To_Arguments_If_Provided" result="Pass" time="0.0028761" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Add_NoConfig_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Add_NoConfig_To_Arguments_If_Provided" result="Pass" time="0.0046731" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Find_MakeNSIS_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Find_MakeNSIS_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.005262" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.002972" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Throw_If_MakeNSIS_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Throw_If_MakeNSIS_Runner_Was_Not_Found" result="Pass" time="0.0033703" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0077743" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034118" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Throw_If_Script_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Throw_If_Script_File_Is_Null" result="Pass" time="0.0009951" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0095329" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nsis/makensis.exe&quot;, expected: &quot;/Working/tools/nsis/makensis.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002691" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nsis/makensis.exe&quot;, expected: &quot;/bin/nsis/makensis.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0007041" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod.Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nsis/makensis.exe&quot;, expected: &quot;C:/nsis/makensis.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NSIS.MakeNSISRunnerTests+TheRunMethod" method="Should_Use_MakeNSIS_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007385" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NSIS.NSISAliasesTests+TheMakeNSISMethod" time="0.010" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.NSISAliasesTests+TheMakeNSISMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.NSIS.NSISAliasesTests+TheMakeNSISMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0085792" />
      <test name="Cake.Common.Tests.Unit.Tools.NSIS.NSISAliasesTests+TheMakeNSISMethod.Should_Throw_If_Script_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NSIS.NSISAliasesTests+TheMakeNSISMethod" method="Should_Throw_If_Script_Path_Is_Null" result="Pass" time="0.0011992" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" time="0.081" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_ConfigFile_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_ConfigFile_To_Arguments_If_Set" result="Pass" time="0.0029795" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_DisableParallelProcessing_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_DisableParallelProcessing_To_Arguments_If_Set" result="Pass" time="0.0054298" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_FallbackSources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_FallbackSources_To_Arguments_If_Set" result="Pass" time="0.0121407" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0099912" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_NoCache_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_NoCache_To_Arguments_If_True" result="Pass" time="0.0027747" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_RequireConsent_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_RequireConsent_To_Arguments_If_True" result="Pass" time="0.0029112" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_SolutionDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_SolutionDirectory_To_Arguments_If_Set" result="Pass" time="0.0033155" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_Sources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Sources_To_Arguments_If_Set" result="Pass" time="0.0029077" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, name: &quot;detailed&quot;, expected: &quot;install &quot;/Working/packages.config&quot; -Verbosity deta&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0035492" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, name: &quot;normal&quot;, expected: &quot;install &quot;/Working/packages.config&quot; -Verbosity norm&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0024905" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, name: &quot;quiet&quot;, expected: &quot;install &quot;/Working/packages.config&quot; -Verbosity quie&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.003049" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.002893" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0141496" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035527" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0049411" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011471" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Throw_If_Target_Package_Config_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Throw_If_Target_Package_Config_Path_Is_Null" result="Pass" time="0.0009548" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009043" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/nuget/nuget.exe&quot;, expected: &quot;/bin/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.000294" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallFromConfigMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008257" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" time="0.064" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_ConfigFile_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_ConfigFile_To_Arguments_If_Set" result="Pass" time="0.0029381" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_DisableParallelProcessing_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_DisableParallelProcessing_To_Arguments_If_Set" result="Pass" time="0.0029168" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_FallbackSources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_FallbackSources_To_Arguments_If_Set" result="Pass" time="0.0042657" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0032669" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_NoCache_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_NoCache_To_Arguments_If_True" result="Pass" time="0.0041259" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_RequireConsent_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_RequireConsent_To_Arguments_If_True" result="Pass" time="0.0029393" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_SolutionDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_SolutionDirectory_To_Arguments_If_Set" result="Pass" time="0.0048124" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_Sources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_Sources_To_Arguments_If_Set" result="Pass" time="0.0032101" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;install &quot;Cake&quot; -Verbosity detailed -NonInteractive&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0025789" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;install &quot;Cake&quot; -Verbosity normal -NonInteractive&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0026716" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;install &quot;Cake&quot; -Verbosity quiet -NonInteractive&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.003032" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0042629" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0056359" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0062197" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034307" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010405" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Throw_If_Target_Package_Id_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Throw_If_Target_Package_Id_Is_Null" result="Pass" time="0.0013074" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0012596" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0033123" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallerTests+TheInstallMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.000791" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor" time="0.001" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor.Should_Set_ExcludeVersion_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor" method="Should_Set_ExcludeVersion_To_False_By_Default" result="Pass" time="0.0003477" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor.Should_Set_NoCache_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor" method="Should_Set_NoCache_To_False_By_Default" result="Pass" time="0.0003441" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor.Should_Set_Prerelease_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor" method="Should_Set_Prerelease_To_False_By_Default" result="Pass" time="0.0005154" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor.Should_Set_RequireConsent_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Install.NuGetInstallSettingsTests+TheConstructor" method="Should_Set_RequireConsent_To_False_By_Default" result="Pass" time="0.0002869" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" time="0.155" total="29" passed="29" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Base_Path_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Base_Path_To_Arguments_If_Not_Null" result="Pass" time="0.0062327" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_IncludeReferencedProjects_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_IncludeReferencedProjects_Flag_To_Arguments_If_Set" result="Pass" time="0.0046257" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Metadata_Element_To_Nuspec_If_Missing" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Metadata_Element_To_Nuspec_If_Missing" result="Pass" time="0.0065991" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild12, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -MSBuildVersi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0042491" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild14, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -MSBuildVersi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.003486" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild4, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -MSBuildVersi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0046506" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_No_Package_Analysis_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_No_Package_Analysis_Flag_To_Arguments_If_Set" result="Pass" time="0.0058585" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Output_Directory_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Output_Directory_To_Arguments_If_Not_Null" result="Pass" time="0.0041516" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Symbols_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Symbols_Flag_To_Arguments_If_Set" result="Pass" time="0.0033009" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -Verbosity de&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0036854" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -Verbosity no&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0034726" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;pack &quot;/Working/existing.temp.nuspec&quot; -Verbosity qu&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0178453" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0081434" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Delete_Transformed_Nuspec" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Delete_Transformed_Nuspec" result="Pass" time="0.0079756" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0037" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Replace_Template_Tokens_In_Nuspec" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Replace_Template_Tokens_In_Nuspec" result="Pass" time="0.0052403" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Replace_Template_Tokens_In_Nuspec_With_Files" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Replace_Template_Tokens_In_Nuspec_With_Files" result="Pass" time="0.0059824" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Replace_Template_Tokens_In_Nuspec_With_Files_Without_Namespaces" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Replace_Template_Tokens_In_Nuspec_With_Files_Without_Namespaces" result="Pass" time="0.0105178" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Replace_Template_Tokens_In_Nuspec_Without_Namespaces" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Replace_Template_Tokens_In_Nuspec_Without_Namespaces" result="Pass" time="0.0054882" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0081141" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Nuspec_Do_Not_Exist" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Nuspec_Do_Not_Exist" result="Pass" time="0.0012316" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Nuspec_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Nuspec_File_Path_Is_Null" result="Pass" time="0.0014558" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0046892" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0120321" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0011546" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Throw_If_Temporary_Nuspec_Already_Exist" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Throw_If_Temporary_Nuspec_Already_Exist" result="Pass" time="0.0016843" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0014088" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008115" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithNuSpec" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0070641" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" time="0.017" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Pack_If_Sufficient_Settings_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Pack_If_Sufficient_Settings_Specified" result="Pass" time="0.0046201" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_Authors_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_Authors_Setting_Not_Specified" result="Pass" time="0.0015521" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_Description_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_Description_Setting_Not_Specified" result="Pass" time="0.0015012" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_Files_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_Files_Setting_Not_Specified" result="Pass" time="0.0013847" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_Id_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_Id_Setting_Not_Specified" result="Pass" time="0.0014921" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_OutputDirectory_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_OutputDirectory_Setting_Not_Specified" result="Pass" time="0.003514" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec.Should_Throw_If_Version_Setting_Not_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithoutNuSpec" method="Should_Throw_If_Version_Setting_Not_Specified" result="Pass" time="0.0033932" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" time="0.094" total="29" passed="29" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Base_Path_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Base_Path_To_Arguments_If_Not_Null" result="Pass" time="0.0124845" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_IncludeReferencedProjects_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_IncludeReferencedProjects_Flag_To_Arguments_If_Set" result="Pass" time="0.0058925" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild12, expected: &quot;pack &quot;/Working/existing.csproj&quot; -MSBuildVersion 12&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0025489" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild14, expected: &quot;pack &quot;/Working/existing.csproj&quot; -MSBuildVersion 14&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0032622" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild4, expected: &quot;pack &quot;/Working/existing.csproj&quot; -MSBuildVersion 4&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0025441" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_No_Package_Analysis_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_No_Package_Analysis_Flag_To_Arguments_If_Set" result="Pass" time="0.0069441" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Output_Directory_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Output_Directory_To_Arguments_If_Not_Null" result="Pass" time="0.0030218" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Properties_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Properties_To_Arguments_If_Set" result="Pass" time="0.0043194" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Symbols_Flag_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Symbols_Flag_To_Arguments_If_Set" result="Pass" time="0.0035914" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;pack &quot;/Working/existing.csproj&quot; -Verbosity detaile&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0038598" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;pack &quot;/Working/existing.csproj&quot; -Verbosity normal&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0028176" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;pack &quot;/Working/existing.csproj&quot; -Verbosity quiet&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0052636" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Add_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Add_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0034552" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0030241" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Not_Create_Transformed_Nuspec" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Not_Create_Transformed_Nuspec" result="Pass" time="0.0036262" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Separate_Properties_With_Semicolon" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Separate_Properties_With_Semicolon" result="Pass" time="0.0039842" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_For_Invalid_Properties_Keys(key: &quot; &quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_For_Invalid_Properties_Keys" result="Pass" time="0.0017459" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_For_Invalid_Properties_Keys(key: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_For_Invalid_Properties_Keys" result="Pass" time="0.000431" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_For_Invalid_Properties_Values(value: &quot; &quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_For_Invalid_Properties_Values" result="Pass" time="0.0013436" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_For_Invalid_Properties_Values(value: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_For_Invalid_Properties_Values" result="Pass" time="0.0005013" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_For_Invalid_Properties_Values(value: null)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_For_Invalid_Properties_Values" result="Pass" time="0.000401" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0061842" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_If_Nuspec_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_If_Nuspec_File_Path_Is_Null" result="Pass" time="0.001226" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0040975" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0036321" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0010665" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0004424" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009501" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackerTests+ThePackMethod+WithProjectFile" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0009" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor.Should_Set_IncludeReferencedProjects_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor" method="Should_Set_IncludeReferencedProjects_To_False_By_Default" result="Pass" time="0.0003457" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor.Should_Set_NoPackageAnalysis_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor" method="Should_Set_NoPackageAnalysis_To_False_By_Default" result="Pass" time="0.0006841" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor.Should_Set_Symbols_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Pack.NuGetPackSettingsTests+TheConstructor" method="Should_Set_Symbols_To_False_By_Default" result="Pass" time="0.0003331" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" time="0.081" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Api_Key_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Api_Key_To_Arguments_If_Not_Null" result="Pass" time="0.0041677" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Configuration_File_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Configuration_File_To_Arguments_If_Not_Null" result="Pass" time="0.0031789" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_NuGet_Package_To_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_NuGet_Package_To_Arguments" result="Pass" time="0.0045838" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Source_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Source_To_Arguments_If_Not_Null" result="Pass" time="0.0054274" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Timeout_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Timeout_To_Arguments_If_Not_Null" result="Pass" time="0.0045444" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Verbosity_To_Arguments_If_Not_Null(verbosity: Detailed, expected: &quot;push &quot;/Working/existing.nupkg&quot; -NonInteractive -Ve&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Verbosity_To_Arguments_If_Not_Null" result="Pass" time="0.0025947" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Verbosity_To_Arguments_If_Not_Null(verbosity: Normal, expected: &quot;push &quot;/Working/existing.nupkg&quot; -NonInteractive -Ve&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Verbosity_To_Arguments_If_Not_Null" result="Pass" time="0.0097212" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Add_Verbosity_To_Arguments_If_Not_Null(verbosity: Quiet, expected: &quot;push &quot;/Working/existing.nupkg&quot; -NonInteractive -Ve&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Add_Verbosity_To_Arguments_If_Not_Null" result="Pass" time="0.0143" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0031122" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.015935" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Throw_If_Nuspec_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Throw_If_Nuspec_File_Path_Is_Null" result="Pass" time="0.0010571" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0037091" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0038105" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0032425" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009217" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003043" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Push.NuGetPusherTests+ThePushMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007823" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" time="0.079" total="23" passed="23" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_ConfigFile_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_ConfigFile_To_Arguments_If_Set" result="Pass" time="0.0028686" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_DisableParallelProcessing_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_DisableParallelProcessing_To_Arguments_If_Set" result="Pass" time="0.002944" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_FallbackSources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_FallbackSources_To_Arguments_If_Set" result="Pass" time="0.0057784" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0043963" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild12, expected: &quot;restore &quot;/Working/project.sln&quot; -MSBuildVersion 12 &quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0028255" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild14, expected: &quot;restore &quot;/Working/project.sln&quot; -MSBuildVersion 14 &quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0051057" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild4, expected: &quot;restore &quot;/Working/project.sln&quot; -MSBuildVersion 4 -&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0031161" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_NoCache_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_NoCache_To_Arguments_If_True" result="Pass" time="0.0055012" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_PackageDirectory_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_PackageDirectory_To_Arguments_If_Set" result="Pass" time="0.002933" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_RequireConsent_To_Arguments_If_True" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_RequireConsent_To_Arguments_If_True" result="Pass" time="0.0032231" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_Sources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_Sources_To_Arguments_If_Set" result="Pass" time="0.0031043" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;restore &quot;/Working/project.sln&quot; -Verbosity detailed&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0049241" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;restore &quot;/Working/project.sln&quot; -Verbosity normal -&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0023929" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;restore &quot;/Working/project.sln&quot; -Verbosity quiet -N&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0029961" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0029392" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0064712" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.004941" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0053639" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010982" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Throw_If_Target_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Throw_If_Target_File_Path_Is_Null" result="Pass" time="0.0009994" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0010235" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002443" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestorerTests+TheRestoreMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0040166" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestoreSettingsTests+TheConstructor" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestoreSettingsTests+TheConstructor.Should_Set_NoCache_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestoreSettingsTests+TheConstructor" method="Should_Set_NoCache_To_False_By_Default" result="Pass" time="0.000371" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestoreSettingsTests+TheConstructor.Should_Set_RequireConsent_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Restore.NuGetRestoreSettingsTests+TheConstructor" method="Should_Set_RequireConsent_To_False_By_Default" result="Pass" time="0.0005771" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" time="0.069" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Add_ConfigFile_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Add_ConfigFile_To_Arguments_If_Set" result="Pass" time="0.0073878" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.004861" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;setapikey &quot;SECRET&quot; -Source &quot;http://a.com&quot; -Verbosi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0077648" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;setapikey &quot;SECRET&quot; -Source &quot;http://a.com&quot; -Verbosi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0028094" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;setapikey &quot;SECRET&quot; -Source &quot;http://a.com&quot; -Verbosi&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0025512" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0041543" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Encounter_Unexpected_Output" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Encounter_Unexpected_Output" result="Pass" time="0.0083206" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0057475" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0034019" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0046372" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0105127" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Target_Api_Key_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Target_Api_Key_Is_Null" result="Pass" time="0.0012162" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Throw_If_Target_Source_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Throw_If_Target_Source_Is_Null" result="Pass" time="0.0010796" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0031994" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002451" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetApiKey.NuGetSetApiKeyTests+TheSetApiKeyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007507" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" time="0.050" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_ConfigFile_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_ConfigFile_To_Arguments_If_Set" result="Pass" time="0.0029417" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0050528" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_UP_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_UP_To_Arguments_If_Set" result="Pass" time="0.0030415" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;config -Set http_proxy=http://a.com -Verbosity det&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0025765" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;config -Set http_proxy=http://a.com -Verbosity nor&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0073104" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;config -Set http_proxy=http://a.com -Verbosity qui&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0027517" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0027285" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_Encounter_Unexpected_Output" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_Encounter_Unexpected_Output" result="Pass" time="0.0037205" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0074261" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0033009" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0033676" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.001044" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Throw_If_Url_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Throw_If_Url_Is_Null" result="Pass" time="0.0012288" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008921" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/nuget/nuget.exe&quot;, expected: &quot;/bin/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.00026" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.SetProxy.NuGetSetProxyTests+TheSetProxyMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0028536" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesSettingsTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesSettingsTests+TheConstructor.Should_Set_IsSensitiveSource_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesSettingsTests+TheConstructor" method="Should_Set_IsSensitiveSource_To_False_By_Default" result="Pass" time="0.00069" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" time="0.060" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0049304" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Add_StorePasswordInClearText_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Add_StorePasswordInClearText_To_Arguments_If_Set" result="Pass" time="0.005517" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Add_UserName_And_Password_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Add_UserName_And_Password_To_Arguments_If_Set" result="Pass" time="0.0043162" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Add_Verbosity_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0035393" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0062769" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Redact_Source_If_IsSensitiveSource_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Redact_Source_If_IsSensitiveSource_Set" result="Pass" time="0.0081592" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Adding_Source_That_Has_Already_Been_Added" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Adding_Source_That_Has_Already_Been_Added" result="Pass" time="0.0031406" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Name_Is_Empty(name: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0031895" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Name_Is_Empty(name: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.000435" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Name_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Name_Is_Null" result="Pass" time="0.0023388" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0058309" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0037694" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0043462" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0009122" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0002893" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0010263" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Throw_If_Source_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Throw_If_Source_Is_Null" result="Pass" time="0.0007263" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0006153" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/nuget/nuget.exe&quot;, expected: &quot;/bin/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002008" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheAddSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007496" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod" time="0.010" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0009378" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0004266" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0075895" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod.Should_Throw_If_Source_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheHasSourceMethod" method="Should_Throw_If_Source_Is_Null" result="Pass" time="0.0009773" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" time="0.065" total="18" passed="18" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0063606" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Add_Verbosity_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0058522" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0076085" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Redact_Source_If_IsSensitiveSource_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Redact_Source_If_IsSensitiveSource_Set" result="Pass" time="0.0119461" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Name_Is_Empty(name: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0032736" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Name_Is_Empty(name: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.000296" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Name_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Name_Is_Null" result="Pass" time="0.002488" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0075362" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0036755" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0043316" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Removing_Source_That_Do_Not_Exist" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Removing_Source_That_Do_Not_Exist" result="Pass" time="0.0060093" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0010547" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0003548" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Source_Is_Empty(source: &quot;\t&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Source_Is_Empty" result="Pass" time="0.0010693" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Throw_If_Source_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Throw_If_Source_Is_Null" result="Pass" time="0.0010559" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008992" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/nuget/nuget.exe&quot;, expected: &quot;/bin/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003177" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Sources.NuGetSourcesTests+TheRemoveSourceMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0008332" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" time="0.051" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Mandatory_Arguments" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Mandatory_Arguments" result="Pass" time="0.0032302" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild12, expected: &quot;update &quot;/Working/packages.config&quot; -MSBuildVersion &quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0047745" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild14, expected: &quot;update &quot;/Working/packages.config&quot; -MSBuildVersion &quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0060657" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_MSBuildVersion_To_Arguments_If_Set(msBuildVersion: MSBuild4, expected: &quot;update &quot;/Working/packages.config&quot; -MSBuildVersion &quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_MSBuildVersion_To_Arguments_If_Set" result="Pass" time="0.0026353" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Packages_If_Specified" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Packages_If_Specified" result="Pass" time="0.0027975" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Prerelease_Flag_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Prerelease_Flag_If_Set" result="Pass" time="0.0024778" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Safe_Flag_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Safe_Flag_If_Set" result="Pass" time="0.0018426" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Sources_To_Arguments_If_Set" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Sources_To_Arguments_If_Set" result="Pass" time="0.0021454" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Detailed, expected: &quot;update &quot;/Working/packages.config&quot; -Verbosity detai&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0025051" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Normal, expected: &quot;update &quot;/Working/packages.config&quot; -Verbosity norma&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0026527" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Add_Verbosity_To_Arguments_If_Set(verbosity: Quiet, expected: &quot;update &quot;/Working/packages.config&quot; -Verbosity quiet&quot;...)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Add_Verbosity_To_Arguments_If_Set" result="Pass" time="0.0025055" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Find_NuGet_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0027731" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Throw_If_NuGet_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Throw_If_NuGet_Executable_Was_Not_Found" result="Pass" time="0.0055589" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0023605" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0026685" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0007515" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Throw_If_Target_File_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Throw_If_Target_File_Path_Is_Null" result="Pass" time="0.0011569" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/nuget/nuget.exe&quot;, expected: &quot;/Working/tools/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0009106" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/nuget/nuget.exe&quot;, expected: &quot;/bin/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002356" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod.Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/nuget/nuget.exe&quot;, expected: &quot;C:/nuget/nuget.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdaterTests+TheUpdateMethod" method="Should_Use_NuGet_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0005237" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdateSettingsTests+TheConstructor" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdateSettingsTests+TheConstructor.Should_Set_Prerelease_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdateSettingsTests+TheConstructor" method="Should_Set_Prerelease_To_False_By_Default" result="Pass" time="0.0005194" />
      <test name="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdateSettingsTests+TheConstructor.Should_Set_Safe_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.NuGet.Update.NuGetUpdateSettingsTests+TheConstructor" method="Should_Set_Safe_To_False_By_Default" result="Pass" time="0.0003054" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" time="0.085" total="22" passed="22" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Find_NUnit3_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Find_NUnit3_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0040687" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Not_Allow_NoResults_And_ResultsFile" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Not_Allow_NoResults_And_ResultsFile" result="Pass" time="0.0012323" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Not_Set_Process_Switch_For_DefaultMultipleValue" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Not_Set_Process_Switch_For_DefaultMultipleValue" result="Pass" time="0.0028228" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Not_Set_Switch_For_Default_AppDomainUsage" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Not_Set_Switch_For_Default_AppDomainUsage" result="Pass" time="0.003306" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Not_Set_Switch_For_Default_Labels" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Not_Set_Switch_For_Default_Labels" result="Pass" time="0.0028994" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Set_Commandline_Switches" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Set_Commandline_Switches" result="Pass" time="0.0054563" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Set_Result_Switch" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Set_Result_Switch" result="Pass" time="0.0029428" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0027233" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0009718" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_NUnit3_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_NUnit3_Runner_Was_Not_Found" result="Pass" time="0.0041093" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -1, expectedMessage: &quot;NUnit3: Invalid argument (exit code -1).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.002708" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: 10, expectedMessage: &quot;NUnit3: 10 test(s) failed (exit code 10).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.00653" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -10, expectedMessage: &quot;NUnit3: Unrecognised error (exit code -10).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0122406" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -100, expectedMessage: &quot;NUnit3: Unexpected error (exit code -100).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035022" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -2, expectedMessage: &quot;NUnit3: Invalid assembly (exit code -2).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0027143" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -4, expectedMessage: &quot;NUnit3: Invalid test fixture (exit code -4).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0085081" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0058861" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/NUnit/nunit.exe&quot;, expected: &quot;/Working/tools/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0003141" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/NUnit/nunit.exe&quot;, expected: &quot;/bin/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0035342" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/NUnit/nunit.exe&quot;, expected: &quot;C:/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Use_NUnit3_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007045" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Path_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Path_In_Process_Arguments" result="Pass" time="0.0030163" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Paths_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3RunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Paths_In_Process_Arguments" result="Pass" time="0.0048148" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor" time="0.012" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor.Should_Not_Enable_Shadow_Copying_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor" method="Should_Not_Enable_Shadow_Copying_By_Default" result="Pass" time="0.0004937" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor.Should_Use_Default_AppDomainUsage_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor" method="Should_Use_Default_AppDomainUsage_By_Default" result="Pass" time="0.0033704" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor.Should_Use_Multiple_Processes_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor" method="Should_Use_Multiple_Processes_By_Default" result="Pass" time="0.0042732" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor.Should_Use_No_Labels_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnit3SettingsTests+TheConstructor" method="Should_Use_No_Labels_By_Default" result="Pass" time="0.0041982" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" time="0.074" total="22" passed="22" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Find_NUnit_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Find_NUnit_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0027368" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Not_Allow_NoResults_And_ResultsFile" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Not_Allow_NoResults_And_ResultsFile" result="Pass" time="0.0012442" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Not_Set_Process_Switch_For_DefaultSingleValue" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Not_Set_Process_Switch_For_DefaultSingleValue" result="Pass" time="0.0028019" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Not_Set_Switch_For_Default_AppDomainUsage" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Not_Set_Switch_For_Default_AppDomainUsage" result="Pass" time="0.0028584" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" result="Pass" time="0.0030684" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Set_Commandline_Switches" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Set_Commandline_Switches" result="Pass" time="0.0036992" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Set_Result_Switch" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Set_Result_Switch" result="Pass" time="0.0052652" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0030455" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0009469" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_NUnit_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_NUnit_Runner_Was_Not_Found" result="Pass" time="0.0049664" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -1, expectedMessage: &quot;NUnit: Invalid argument (exit code -1).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0030881" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: 10, expectedMessage: &quot;NUnit: 10 test(s) failed (exit code 10).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0044378" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -10, expectedMessage: &quot;NUnit: Unrecognised error (exit code -10).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0019453" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -100, expectedMessage: &quot;NUnit: Unexpected error (exit code -100).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0027241" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -2, expectedMessage: &quot;NUnit: File not found (exit code -2).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0102691" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code(exitCode: -3, expectedMessage: &quot;NUnit: Test fixture not found (exit code -3).&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0019895" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0037888" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Use_NUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/NUnit/nunit.exe&quot;, expected: &quot;/Working/tools/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Use_NUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0003007" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Use_NUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/NUnit/nunit.exe&quot;, expected: &quot;/bin/tools/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Use_NUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0007756" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Use_NUnit_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/NUnit/nunit.exe&quot;, expected: &quot;C:/NUnit/nunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Use_NUnit_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007369" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Path_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Path_In_Process_Arguments" result="Pass" time="0.002676" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Paths_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitRunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Paths_In_Process_Arguments" result="Pass" time="0.0104171" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor" time="0.014" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor.Should_Enable_Shadow_Copying_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor" method="Should_Enable_Shadow_Copying_By_Default" result="Pass" time="0.0003457" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor.Should_Not_Use_SingleThreadedApartment_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor" method="Should_Not_Use_SingleThreadedApartment_By_Default" result="Pass" time="0.0005845" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor.Should_Use_Default_AppDomainUsage_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor" method="Should_Use_Default_AppDomainUsage_By_Default" result="Pass" time="0.0100543" />
      <test name="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor.Should_Use_Single_Process_By_Default" type="Cake.Common.Tests.Unit.Tools.NUnit.NUnitSettingsTests+TheConstructor" method="Should_Use_Single_Process_By_Default" result="Pass" time="0.0033917" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" time="0.091" total="26" passed="26" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Configuration_File_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Configuration_File_To_Arguments_If_Not_Null" result="Pass" time="0.0030885" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Debug_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Debug_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0026219" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Default_Package_Version_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Default_Package_Version_To_Arguments_If_Not_Null" result="Pass" time="0.0080518" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Enable_Service_Messages_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Enable_Service_Messages_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0026705" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Ignore_Existing_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Ignore_Existing_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0028848" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Ignore_Ssl_Errors_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Ignore_Ssl_Errors_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0034493" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Multiple_Package_And_Step_To_Arguments_If_Specified" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Multiple_Package_And_Step_To_Arguments_If_Specified" result="Pass" time="0.0030178" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Package_And_Step_To_Arguments_If_Specified" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Package_And_Step_To_Arguments_If_Specified" result="Pass" time="0.0030735" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Packages_Folder_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Packages_Folder_To_Arguments_If_Not_Null" result="Pass" time="0.0060322" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Password_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Password_To_Arguments_If_Not_Null" result="Pass" time="0.0092341" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Project_Name_Server_And_Api_Key_To_Arguments" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Project_Name_Server_And_Api_Key_To_Arguments" result="Pass" time="0.0066492" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Release_Notes_File_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Release_Notes_File_To_Arguments_If_Not_Null" result="Pass" time="0.0048673" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Release_Notes_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Release_Notes_To_Arguments_If_Not_Null" result="Pass" time="0.002826" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Release_Number_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Release_Number_To_Arguments_If_Not_Null" result="Pass" time="0.0027881" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Add_Username_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Add_Username_To_Arguments_If_Not_Null" result="Pass" time="0.0031935" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Find_Octo_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Find_Octo_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0027423" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Api_Key_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Api_Key_Is_Null" result="Pass" time="0.0010267" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Octo_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Octo_Executable_Was_Not_Found" result="Pass" time="0.0034651" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0036992" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0087746" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Project_Name_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Project_Name_Is_Null" result="Pass" time="0.0030554" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Server_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Server_Is_Null" result="Pass" time="0.0010282" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.000971" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/octopus/octo.exe&quot;, expected: &quot;/Working/tools/octopus/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0007578" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/octopus/octo.exe&quot;, expected: &quot;/bin/tools/octopus/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002273" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/octopusDeploy/octo.exe&quot;, expected: &quot;C:/octopusDeploy/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoCreateReleaseTests+TheCreateReleaseMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.000658" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" time="0.025" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Configuration_File_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Configuration_File_To_Arguments_If_Not_Null" result="Pass" time="0.0055178" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Debug_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Debug_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.004313" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Enable_Service_Messages_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Enable_Service_Messages_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0025603" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Ignore_Ssl_Errors_Flag_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Ignore_Ssl_Errors_Flag_To_Arguments_If_Not_Null" result="Pass" time="0.0044602" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Password_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Password_To_Arguments_If_Not_Null" result="Pass" time="0.0028279" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Add_Username_To_Arguments_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Add_Username_To_Arguments_If_Not_Null" result="Pass" time="0.0028288" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Throw_If_Api_Key_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Throw_If_Api_Key_Is_Null" result="Pass" time="0.0010737" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Throw_If_Server_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Throw_If_Server_Is_Null" result="Pass" time="0.0009722" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+TheBaseArgumentBuilder" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0008747" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" time="0.050" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Add_Multiple_Arguments_For_Multiple_Packages" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Add_Multiple_Arguments_For_Multiple_Packages" result="Pass" time="0.0032369" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Add_Replace_Existing_Flag_If_Not_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Add_Replace_Existing_Flag_If_Not_Null" result="Pass" time="0.0029551" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Add_Single_Argument_For_Single_Package" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Add_Single_Argument_For_Single_Package" result="Pass" time="0.0174604" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Find_Octo_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Find_Octo_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0030257" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Throw_If_No_Packages_Provided" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Throw_If_No_Packages_Provided" result="Pass" time="0.0010748" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Throw_If_Octo_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Throw_If_Octo_Executable_Was_Not_Found" result="Pass" time="0.0069346" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Throw_If_Package_List_Is_Null" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Throw_If_Package_List_Is_Null" result="Pass" time="0.00105" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0046751" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0039502" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/octopus/octo.exe&quot;, expected: &quot;/Working/tools/octopus/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0003713" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/octopus/octo.exe&quot;, expected: &quot;/bin/tools/octopus/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0018774" />
      <test name="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod.Should_Use_Octo_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/octopusDeploy/octo.exe&quot;, expected: &quot;C:/octopusDeploy/octo.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.OctopusDeploy.OctoPushTests+ThePushPackageMethod" method="Should_Use_Octo_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.003004" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" time="0.075" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Add_ReturnTargetCode_If_ReturnTargetCodeOffset_Is_Set" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Add_ReturnTargetCode_If_ReturnTargetCodeOffset_Is_Set" result="Pass" time="0.0087556" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Append_Attribute_Filters" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Append_Attribute_Filters" result="Pass" time="0.0032898" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Append_File_Filters" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Append_File_Filters" result="Pass" time="0.0052691" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Append_Filters" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Append_Filters" result="Pass" time="0.0033996" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Append_OldStyle" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Append_OldStyle" result="Pass" time="0.0055032" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Append_SkipAutoProps" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Append_SkipAutoProps" result="Pass" time="0.0038993" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Capture_NUnit" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Capture_NUnit" result="Pass" time="0.0084651" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Capture_Tool_And_Arguments_From_Action" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Capture_Tool_And_Arguments_From_Action" result="Pass" time="0.0030806" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Capture_XUnit" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Capture_XUnit" result="Pass" time="0.01237" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: &quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0029831" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Not_Capture_Arguments_From_Action_If_Excluded(arguments: null)" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Not_Capture_Arguments_From_Action_If_Excluded" result="Pass" time="0.0046462" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Throw_If_Action_Is_Null" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0046217" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0012943" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Throw_If_No_Tool_Was_Intercepted" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Throw_If_No_Tool_Was_Intercepted" result="Pass" time="0.0018107" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Throw_If_Output_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Throw_If_Output_File_Is_Null" result="Pass" time="0.0012706" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0011581" />
      <test name="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod.Should_Use_Specified_Register" type="Cake.Common.Tests.Unit.Tools.OpenCover.OpenCoverTests+TheRunMethod" method="Should_Use_Specified_Register" result="Pass" time="0.0035271" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" time="0.076" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Find_Report_Generator" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Find_Report_Generator" result="Pass" time="0.0029886" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Assembly_Filters" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Assembly_Filters" result="Pass" time="0.0029266" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Class_Filters" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Class_Filters" result="Pass" time="0.002963" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_History_Directory" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_History_Directory" result="Pass" time="0.0028682" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Report_And_Target_Directory" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Report_And_Target_Directory" result="Pass" time="0.0029953" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Report_Types" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Report_Types" result="Pass" time="0.0108806" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Reports_And_Target_Directory" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Reports_And_Target_Directory" result="Pass" time="0.0047931" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Source_Directories" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Source_Directories" result="Pass" time="0.013666" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Set_Verbosity" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Set_Verbosity" result="Pass" time="0.0034548" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035985" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0074632" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_Reports_Are_Empty" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_Reports_Are_Empty" result="Pass" time="0.0015734" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_Reports_Are_Null" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_Reports_Are_Null" result="Pass" time="0.0009955" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0044571" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Throw_If_TargetDir_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Throw_If_TargetDir_Is_Null" result="Pass" time="0.0091555" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod.Should_Use_Tool_Path_If_Present" type="Cake.Common.Tests.Unit.Tools.ReportGenerator.ReportGeneratorRunnerTests+TheRunMethod" method="Should_Use_Tool_Path_If_Present" result="Pass" time="0.0011573" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" time="0.023" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Find_ReportUnit_Runner" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Find_ReportUnit_Runner" result="Pass" time="0.0052087" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0055696" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Throw_If_InputFolder_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Throw_If_InputFolder_Is_Null" result="Pass" time="0.0010128" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0037248" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0010693" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories.Should_Use_Provided_Directories_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithDirectories" method="Should_Use_Provided_Directories_In_Process_Arguments" result="Pass" time="0.0067929" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" time="0.021" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Find_ReportUnit_Runner" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Find_ReportUnit_Runner" result="Pass" time="0.0033609" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0034189" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Throw_If_InputFile_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_InputFile_Is_Null" result="Pass" time="0.0023298" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Throw_If_OutputFile_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_OutputFile_Is_Null" result="Pass" time="0.0009465" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.007445" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.00087" />
      <test name="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles.Should_Use_Provided_Files_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.ReportUnit.ReportUnitRunnerTests+TheRunMethodWithFiles" method="Should_Use_Provided_Files_In_Process_Arguments" result="Pass" time="0.0029251" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" time="0.049" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Execute_Process_With_Custom_Folder_Names" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Execute_Process_With_Custom_Folder_Names" result="Pass" time="0.0085342" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Execute_Process_With_Database_Settings" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Execute_Process_With_Database_Settings" result="Pass" time="0.009167" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Execute_Process_With_Flags" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Execute_Process_With_Flags" result="Pass" time="0.0032302" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Execute_Process_With_Roundhouse_Settings" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Execute_Process_With_Roundhouse_Settings" result="Pass" time="0.0031773" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Find_Roundhouse_Executable_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Find_Roundhouse_Executable_If_Tool_Path_Not_Provided" result="Pass" time="0.0034493" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0028647" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0099872" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034675" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Throw_if_Roundhouse_Executable_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Throw_if_Roundhouse_Executable_Was_Not_Found" result="Pass" time="0.0034979" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided(toolPath: &quot;./tools/rh/rh.exe&quot;, expected: &quot;/Working/tools/rh/rh.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0008096" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/rh/rh.exe&quot;, expected: &quot;/bin/tools/rh/rh.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided" result="Pass" time="0.0002091" />
      <test name="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod.Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/rh/rh.exe&quot;, expected: &quot;C:/rh/rh.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.Roundhouse.RoundhouseRunnerTests+TheRunMethod" method="Should_Use_Roundhouse_Executable_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007768" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor" time="0.019" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0011202" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.016918" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor.Should_Throw_If_Registry_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheConstructor" method="Should_Throw_If_Registry_Is_Null" result="Pass" time="0.0009659" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" time="0.055" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod.Should_Return_From_Disc_If_Found(is64Bit: False)" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" method="Should_Return_From_Disc_If_Found" result="Pass" time="0.0009616" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod.Should_Return_From_Disc_If_Found(is64Bit: True)" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" method="Should_Return_From_Disc_If_Found" result="Pass" time="0.0280751" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod.Should_Return_From_Registry_If_Found" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" method="Should_Return_From_Registry_If_Found" result="Pass" time="0.0055542" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod.Should_Throw_If_Not_Found_On_Disc_And_SDK_Registry_Path_Cannot_Be_Resolved" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" method="Should_Throw_If_Not_Found_On_Disc_And_SDK_Registry_Path_Cannot_Be_Resolved" result="Pass" time="0.0180628" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod.Should_Throw_If_SignTool_Cannot_Be_Resolved" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolResolverTests+TheResolveMethod" method="Should_Throw_If_SignTool_Cannot_Be_Resolved" result="Pass" time="0.0025248" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor" time="0.011" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0088184" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0012888" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor.Should_Throw_If_Process_Runner_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheConstructor" method="Should_Throw_If_Process_Runner_Is_Null" result="Pass" time="0.00117" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" time="0.040" total="15" passed="15" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Call_Sign_Tool_With_Correct_Parameters" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Call_Sign_Tool_With_Correct_Parameters" result="Pass" time="0.0029132" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Call_Sign_Tool_With_Correct_Parameters_With_Description" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Call_Sign_Tool_With_Correct_Parameters_With_Description" result="Pass" time="0.002974" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Call_Sign_Tool_With_Correct_Parameters_With_DescriptionUri" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Call_Sign_Tool_With_Correct_Parameters_With_DescriptionUri" result="Pass" time="0.0059864" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Call_Sign_Tool_With_Correct_Parameters_With_Thumbprint" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Call_Sign_Tool_With_Correct_Parameters_With_Thumbprint" result="Pass" time="0.003128" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Assembly_Do_Not_Exist" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Do_Not_Exist" result="Pass" time="0.0013054" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0010618" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Certificate_File_Do_Not_Exist" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Certificate_File_Do_Not_Exist" result="Pass" time="0.0014258" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Certificate_Path_And_Thumbprint_Are_Both_Specified" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Certificate_Path_And_Thumbprint_Are_Both_Specified" result="Pass" time="0.00129" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Certificate_Path_And_Thumbprint_Are_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Certificate_Path_And_Thumbprint_Are_Null" result="Pass" time="0.0012927" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Certificate_Thumbprint_And_Password_Are_Both_Specified" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Certificate_Thumbprint_And_Password_Are_Both_Specified" result="Pass" time="0.0012963" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_No_Timestamp_Server_URL_Has_Been_Specified" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_No_Timestamp_Server_URL_Has_Been_Specified" result="Pass" time="0.0011044" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Password_Is_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Password_Is_Null" result="Pass" time="0.009214" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0009915" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Use_Default_Tool_Path_If_None_Is_Specified" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Use_Default_Tool_Path_If_None_Is_Specified" result="Pass" time="0.0040158" />
      <test name="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod.Should_Use_Provided_Tool_Path_If_Specified" type="Cake.Common.Tests.Unit.Tools.SignTool.SignToolSignRunnerTests+TheRunMethod" method="Should_Use_Provided_Tool_Path_If_Specified" result="Pass" time="0.002267" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" time="0.013" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod.Should_Append_BinFolder" type="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" method="Should_Append_BinFolder" result="Pass" time="0.0027549" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod.Should_Append_Out" type="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" method="Should_Append_Out" result="Pass" time="0.0033593" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod.Should_Append_XsltFile" type="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" method="Should_Append_XsltFile" result="Pass" time="0.0051274" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod.Should_Throw_If_Project_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" method="Should_Throw_If_Project_File_Is_Null" result="Pass" time="0.0009363" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.StepDefinitionReport.SpecFlowStepDefinitionReporterTests+TheRunMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0012983" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" time="0.139" total="19" passed="19" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Append_Out" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Append_Out" result="Pass" time="0.0056773" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Append_XsltFile" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Append_XsltFile" result="Pass" time="0.0035989" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_MSTest" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_MSTest" result="Pass" time="0.0081193" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_MSTest_And_Throw_If_ResultsFile_Is_Missing" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_MSTest_And_Throw_If_ResultsFile_Is_Missing" result="Pass" time="0.0067483" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_NUnit3" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_NUnit3" result="Pass" time="0.0157085" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_NUnit3_And_Throw_If_Labels_Is_Missing" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_NUnit3_And_Throw_If_Labels_Is_Missing" result="Pass" time="0.00466" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_NUnit3_And_Throw_If_Output_Is_Missing" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_NUnit3_And_Throw_If_Output_Is_Missing" result="Pass" time="0.0159967" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_NUnit3_And_Throw_If_Result_Is_Missing" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_NUnit3_And_Throw_If_Result_Is_Missing" result="Pass" time="0.0080103" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_Tool_And_Arguments_From_Action" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_Tool_And_Arguments_From_Action" result="Pass" time="0.0035334" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_XUnit2" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_XUnit2" result="Pass" time="0.0280818" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Capture_XUnit2_And_Throw_If_NUnit_Is_Missing" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Capture_XUnit2_And_Throw_If_NUnit_Is_Missing" result="Pass" time="0.0049309" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Action_Does_Not_Contain_Arguments(arguments: &quot; &quot;)" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Action_Does_Not_Contain_Arguments" result="Pass" time="0.0068825" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Action_Does_Not_Contain_Arguments(arguments: null)" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Action_Does_Not_Contain_Arguments" result="Pass" time="0.0009122" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Action_Is_Not_Supported" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Action_Is_Not_Supported" result="Pass" time="0.00198" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Action_Is_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0012572" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0013788" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_No_Tool_Was_Intercepted" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_No_Tool_Was_Intercepted" result="Pass" time="0.0185298" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Project_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Project_File_Is_Null" result="Pass" time="0.0015829" />
      <test name="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.SpecFlow.TestExecutionReport.SpecFlowTestExecutionReporterTests+TheRunMethod" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0013997" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformAliasTests+TheTransformTemplateMethod" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformAliasTests+TheTransformTemplateMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformAliasTests+TheTransformTemplateMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009442" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformAliasTests+TheTransformTemplateMethod.Should_Throw_If_Source_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformAliasTests+TheTransformTemplateMethod" method="Should_Throw_If_Source_File_Is_Null" result="Pass" time="0.001738" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" time="0.118" total="15" passed="15" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Add_Assembly_To_Argument_If_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Add_Assembly_To_Argument_If_Provided" result="Pass" time="0.0046482" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Add_Include_Directory_If_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Add_Include_Directory_If_Provided" result="Pass" time="0.0029393" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Add_Namespace_If_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Add_Namespace_If_Provided" result="Pass" time="0.0029294" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Add_OutputFile_If_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Add_OutputFile_If_Provided" result="Pass" time="0.0029409" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Add_Refernce_Path_If_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Add_Refernce_Path_If_Provided" result="Pass" time="0.0036613" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Find_Text_Transform_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Find_Text_Transform_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0029172" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0079815" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0041638" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.069746" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0011183" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Throw_If_Source_File_Is_Null" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Throw_If_Source_File_Is_Null" result="Pass" time="0.0009466" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Throw_If_Text_Transform_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Throw_If_Text_Transform_Runner_Was_Not_Found" result="Pass" time="0.0083376" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Use_Provided_Source_File_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Use_Provided_Source_File_In_Process_Arguments" result="Pass" time="0.00439" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Use_Text_Transform_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/TextTransform/TextTransform.exe&quot;, expected: &quot;/Working/tools/TextTransform/TextTransform.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Use_Text_Transform_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.000836" />
      <test name="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod.Should_Use_Text_Transform_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/TextTransform/TextTransform.exe&quot;, expected: &quot;/bin/tools/TextTransform/TextTransform.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.TextTransform.TextTransformRunnerTests+TheRunMethod" method="Should_Use_Text_Transform_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002534" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0011747" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" time="0.075" total="23" passed="23" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Architecture_To_Arguments_If_Provided(arch: IA64, expected: &quot;-arch ia64 &quot;/Working/Test.wxs&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Architecture_To_Arguments_If_Provided" result="Pass" time="0.0069934" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Architecture_To_Arguments_If_Provided(arch: X64, expected: &quot;-arch x64 &quot;/Working/Test.wxs&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Architecture_To_Arguments_If_Provided" result="Pass" time="0.0024869" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Architecture_To_Arguments_If_Provided(arch: X86, expected: &quot;-arch x86 &quot;/Working/Test.wxs&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Architecture_To_Arguments_If_Provided" result="Pass" time="0.0023685" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Defines_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Defines_To_Arguments_If_Provided" result="Pass" time="0.0034501" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Extensions_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Extensions_To_Arguments_If_Provided" result="Pass" time="0.0099509" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_FIPS_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_FIPS_To_Arguments_If_Provided" result="Pass" time="0.0028051" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_NoLogo_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_NoLogo_To_Arguments_If_Provided" result="Pass" time="0.0031524" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Output_Directory_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Output_Directory_To_Arguments_If_Provided" result="Pass" time="0.006196" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Pedantic_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Pedantic_To_Arguments_If_Provided" result="Pass" time="0.0027964" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Show_Source_Trace_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Show_Source_Trace_To_Arguments_If_Provided" result="Pass" time="0.0028706" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Add_Verbose_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Add_Verbose_To_Arguments_If_Provided" result="Pass" time="0.0029136" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Find_Candle_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Find_Candle_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0028489" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0027522" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Candle_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Candle_Runner_Was_Not_Found" result="Pass" time="0.0055261" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0036715" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0038488" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0010022" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Source_Files_Is_Empty" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Source_Files_Is_Empty" result="Pass" time="0.0012244" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Throw_If_Source_Files_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Throw_If_Source_Files_Is_Null" result="Pass" time="0.0037892" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Use_Candle_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/WiX/candle.exe&quot;, expected: &quot;/Working/tools/WiX/candle.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Use_Candle_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002814" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Use_Candle_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/WiX/candle.exe&quot;, expected: &quot;/bin/tools/WiX/candle.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Use_Candle_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0007357" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Use_Candle_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/WiX/candle.exe&quot;, expected: &quot;C:/WiX/candle.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Use_Candle_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007326" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod.Should_Use_Provided_Source_Files_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.WiX.CandleRunnerTests+TheRunMethod" method="Should_Use_Provided_Source_Files_In_Process_Arguments" result="Pass" time="0.0030948" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheConstructor" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0042692" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" time="0.186" total="48" passed="48" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Auto_Generate_Guid_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Auto_Generate_Guid_To_Arguments_If_Provided" result="Pass" time="0.0028674" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Binaries_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Binaries_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.0029815" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Component_Group_Name_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Component_Group_Name_To_Arguments_If_Provided" result="Pass" time="0.0098953" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Configuration_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Configuration_To_Arguments_If_Provided" result="Pass" time="0.0060062" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Content_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Content_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.002914" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Directory_Id_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Directory_Id_To_Arguments_If_Provided" result="Pass" time="0.003291" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Directory_Reference_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Directory_Reference_To_Arguments_If_Provided" result="Pass" time="0.0028824" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Documents_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Documents_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.0030399" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Extension_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Extension_To_Arguments_If_Provided" result="Pass" time="0.0031528" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_File_Harvest_Type_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_File_Harvest_Type_If_Provided" result="Pass" time="0.0101633" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Generate_Binder_Variables_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Generate_Binder_Variables_To_Arguments_If_Provided" result="Pass" time="0.0157507" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Generate_Guid_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Generate_Guid_To_Arguments_If_Provided" result="Pass" time="0.0039084" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Generate_Guid_Without_Braces_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Generate_Guid_Without_Braces_To_Arguments_If_Provided" result="Pass" time="0.0048503" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Generate_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Generate_To_Arguments_If_Provided" result="Pass" time="0.0054882" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Indent_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Indent_To_Arguments_If_Provided" result="Pass" time="0.0029345" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Keep_Empty_Directories_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Keep_Empty_Directories_To_Arguments_If_Provided" result="Pass" time="0.0034" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_NoLogo_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_NoLogo_To_Arguments_If_Provided" result="Pass" time="0.0035531" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Performance_Harvest_Type_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Performance_Harvest_Type_If_Provided" result="Pass" time="0.0029653" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Platform_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Platform_To_Arguments_If_Provided" result="Pass" time="0.0028702" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Project_Name_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Project_Name_To_Arguments_If_Provided" result="Pass" time="0.0052" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Satallites_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Satallites_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.0035847" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Sources_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Sources_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.0033234" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Com_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Com_To_Arguments_If_Provided" result="Pass" time="0.0028051" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Fragments_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Fragments_To_Arguments_If_Provided" result="Pass" time="0.0027762" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Registry_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Registry_To_Arguments_If_Provided" result="Pass" time="0.0044472" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Root_Directory_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Root_Directory_To_Arguments_If_Provided" result="Pass" time="0.0059639" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Specific_Warnings_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Specific_Warnings_To_Arguments_If_Provided" result="Pass" time="0.0055735" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Unique_Ids_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Unique_Ids_To_Arguments_If_Provided" result="Pass" time="0.0029353" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Suppress_Vb6_Com_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Suppress_Vb6_Com_To_Arguments_If_Provided" result="Pass" time="0.0030147" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Symbols_Output_Group_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Symbols_Output_Group_To_Arguments_If_Provided" result="Pass" time="0.0028718" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Template_Type_Fragment_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Template_Type_Fragment_To_Arguments_If_Provided" result="Pass" time="0.0030111" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Template_Type_Module_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Template_Type_Module_To_Arguments_If_Provided" result="Pass" time="0.0030119" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Template_Type_Product_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Template_Type_Product_To_Arguments_If_Provided" result="Pass" time="0.003308" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Transform_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Transform_To_Arguments_If_Provided" result="Pass" time="0.0054582" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Treat_Specific_Warnings_As_Errors_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Treat_Specific_Warnings_As_Errors_To_Arguments_If_Provided" result="Pass" time="0.0033838" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Website_Harvest_Type_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Website_Harvest_Type_If_Provided" result="Pass" time="0.0045444" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Add_Verbose_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Add_Verbose_To_Arguments_If_Provided" result="Pass" time="0.0028967" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Find_Heat_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Find_Heat_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0029724" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Not_Add_Generate_To_Arguments_If_Default_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Not_Add_Generate_To_Arguments_If_Default_Provided" result="Pass" time="0.0028967" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0029697" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Throw_If_Directory_Path_Empty" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Throw_If_Directory_Path_Empty" result="Pass" time="0.0011116" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Throw_If_Heat_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Throw_If_Heat_Runner_Was_Not_Found" result="Pass" time="0.0034805" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Throw_If_Output_File_Empty" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Throw_If_Output_File_Empty" result="Pass" time="0.0010831" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035405" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0034631" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Use_Heat_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/WiX/heat.exe&quot;, excepted: &quot;/Working/tools/WiX/heat.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Use_Heat_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0008329" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Use_Heat_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/WiX/heat.exe&quot;, excepted: &quot;/bin/tools/WiX/heat.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Use_Heat_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002553" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod.Should_Use_Heat_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/WiX/heat.exe&quot;, expected: &quot;C:/WiX/heat.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.HeatRunnerTests+TheRunMethod" method="Should_Use_Heat_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0023606" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" time="0.054" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Add_Defines_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Add_Defines_To_Arguments_If_Provided" result="Pass" time="0.0056042" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Add_Extensions_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Add_Extensions_To_Arguments_If_Provided" result="Pass" time="0.0083787" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Add_NoLogo_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Add_NoLogo_To_Arguments_If_Provided" result="Pass" time="0.0027719" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Add_Output_Directory_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Add_Output_Directory_To_Arguments_If_Provided" result="Pass" time="0.0028552" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Add_RawArguments_To_Arguments_If_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Add_RawArguments_To_Arguments_If_Provided" result="Pass" time="0.0036198" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Find_Light_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Find_Light_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0027569" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0030115" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Light_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Light_Runner_Was_Not_Found" result="Pass" time="0.0042732" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Object_Files_Is_Empty" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Object_Files_Is_Empty" result="Pass" time="0.001408" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Object_Files_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Object_Files_Is_Null" result="Pass" time="0.0009726" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0034686" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0031509" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Throw_If_Settings_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Throw_If_Settings_Is_Null" result="Pass" time="0.0009896" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Use_Light_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/WiX/light.exe&quot;, expected: &quot;/Working/tools/WiX/light.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Use_Light_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0010504" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Use_Light_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/WiX/light.exe&quot;, expected: &quot;/bin/tools/WiX/light.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Use_Light_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002865" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Use_Light_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/WiX/light.exe&quot;, expected: &quot;C:/WiX/light.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Use_Light_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.000701" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod.Should_Use_Provided_Object_Files_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.WiX.LightRunnerTests+TheRunMethod" method="Should_Use_Provided_Object_Files_In_Process_Arguments" result="Pass" time="0.0089396" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.WiX.WiXAliasTests+TheWiXHeatMethod" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.WiX.WiXAliasTests+TheWiXHeatMethod.Should_Throw_If_Context_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.WiXAliasTests+TheWiXHeatMethod" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0009252" />
      <test name="Cake.Common.Tests.Unit.Tools.WiX.WiXAliasTests+TheWiXHeatMethod.Should_Throw_If_Directory_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.WiX.WiXAliasTests+TheWiXHeatMethod" method="Should_Throw_If_Directory_Path_Is_Null" result="Pass" time="0.001903" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" time="0.059" total="20" passed="20" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Add_FilePath_For_Each_Assembly" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Add_FilePath_For_Each_Assembly" result="Pass" time="0.0018482" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Not_Use_Isolation_By_Default" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Not_Use_Isolation_By_Default" result="Pass" time="0.0017088" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Set_Working_Directory" result="Pass" time="0.001708" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0014732" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035642" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.002464" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Throw_If_Settings_Are_Null" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Throw_If_Settings_Are_Null" result="Pass" time="0.0016161" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Throw_If_Tool_Path_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Throw_If_Tool_Path_Was_Not_Found" result="Pass" time="0.0023369" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 11.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0028402" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 12.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0028512" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 14.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0038093" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Available_Tool_Path(existingToolPath: &quot;/ProgramFilesX86/Microsoft Visual Studio 15.0/Comm&quot;...)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Available_Tool_Path" result="Pass" time="0.0024083" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_FrameworkVersion_If_Provided" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_FrameworkVersion_If_Provided" result="Pass" time="0.0021691" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Isolation_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Isolation_If_Enabled_In_Settings" result="Pass" time="0.0017582" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_Logger_If_Provided" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_Logger_If_Provided" result="Pass" time="0.0182148" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_PlatformArchitecture_If_Provided" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_PlatformArchitecture_If_Provided" result="Pass" time="0.0018885" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_SettingsFile_If_Provided" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_SettingsFile_If_Provided" result="Pass" time="0.0037928" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_VSTest_From_Tool_Path_If_Provided(toolPath: &quot;./tools/VSTest/vstest.console.exe&quot;, expected: &quot;/Working/tools/VSTest/vstest.console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_VSTest_From_Tool_Path_If_Provided" result="Pass" time="0.0006931" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_VSTest_From_Tool_Path_If_Provided(toolPath: &quot;/bin/VSTest/vstest.console.exe&quot;, expected: &quot;/bin/VSTest/vstest.console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_VSTest_From_Tool_Path_If_Provided" result="Pass" time="0.0010235" />
      <test name="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests.Should_Use_VSTest_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/VSTest/vstest.console.exe&quot;, expected: &quot;C:/VSTest/vstest.console.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.VSTest.VSTestRunnerTests" method="Should_Use_VSTest_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0011435" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetConfigurationMethod" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.000678" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetConfigurationMethod.Should_Set_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetConfigurationMethod" method="Should_Set_Configuration" result="Pass" time="0.0002723" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" time="0.002" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0010681" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Diagnostic)" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000046" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Minimal)" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.000011" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Normal)" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000062" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Quiet)" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0004803" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod.Should_Set_Verbosity(verbosity: Verbose)" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheSetVerbosityMethod" method="Should_Set_Verbosity" result="Pass" time="0.0000046" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheUseToolVersionMethod" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheUseToolVersionMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheUseToolVersionMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.000326" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheUseToolVersionMethod.Should_Set_Tool_Version" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheUseToolVersionMethod" method="Should_Set_Tool_Version" result="Pass" time="0.0008336" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithPropertyMethod" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Add_Property_To_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Add_Property_To_Configuration" result="Pass" time="0.0005187" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithPropertyMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithPropertyMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0022054" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithTargetMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Add_Target_To_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Add_Target_To_Configuration" result="Pass" time="0.0009746" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithTargetMethod.Should_Return_The_Same_Configuration" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsExtensionsTests+TheWithTargetMethod" method="Should_Return_The_Same_Configuration" result="Pass" time="0.0006086" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConfigurationProperty" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConfigurationProperty.Should_Be_Empty_By_Default" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConfigurationProperty" method="Should_Be_Empty_By_Default" result="Pass" time="0.0004046" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConstructor" time="0.008" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConstructor.Should_Set_Default_Tools_Version_To_Default" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConstructor" method="Should_Set_Default_Tools_Version_To_Default" result="Pass" time="0.0044113" />
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConstructor.Should_Set_Default_Verbosity_To_Normal" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheConstructor" method="Should_Set_Default_Verbosity_To_Normal" result="Pass" time="0.0032579" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+ThePropertiesProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+ThePropertiesProperty.Should_Return_A_Dictionary_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+ThePropertiesProperty" method="Should_Return_A_Dictionary_That_Is_Case_Insensitive" result="Pass" time="0.0007121" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheTargetsProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheTargetsProperty.Should_Return_A_Set_That_Is_Case_Insensitive" type="Cake.Common.Tests.Unit.Tools.XBuild.XBuildSettingsTests+TheTargetsProperty" method="Should_Return_A_Set_That_Is_Case_Insensitive" result="Pass" time="0.0006217" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" time="0.115" total="34" passed="34" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Find_XUnit_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Find_XUnit_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0065276" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Html_Report_With_Correct_Name_For_Multiple_Assemblies" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Html_Report_With_Correct_Name_For_Multiple_Assemblies" result="Pass" time="0.007445" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Html_Report_With_Correct_Name_For_Single_Assembly" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Html_Report_With_Correct_Name_For_Single_Assembly" result="Pass" time="0.0030688" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Legacy_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Legacy_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" result="Pass" time="0.0040087" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Legacy_Xml_Report_With_Correct_Name_For_Single_Assembly" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Legacy_Xml_Report_With_Correct_Name_For_Single_Assembly" result="Pass" time="0.0031816" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_NUnit_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_NUnit_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" result="Pass" time="0.0030388" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_NUnit_Xml_Report_With_Correct_Name_For_Single_Assembly" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_NUnit_Xml_Report_With_Correct_Name_For_Single_Assembly" result="Pass" time="0.0032626" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Xml_Report_With_Correct_Name_For_Multiple_Assemblies" result="Pass" time="0.0035523" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Generate_Xml_Report_With_Correct_Name_For_Single_Assembly" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Generate_Xml_Report_With_Correct_Name_For_Single_Assembly" result="Pass" time="0.0031142" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Not_Use_App_Domains_If_Disabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Not_Use_App_Domains_If_Disabled_In_Settings" result="Pass" time="0.0041473" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" result="Pass" time="0.0031741" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Set_Switches_For_TraitsToExclude_Defined_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Set_Switches_For_TraitsToExclude_Defined_In_Settings" result="Pass" time="0.0055802" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Set_Switches_For_TraitsToInclude_Defined_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Set_Switches_For_TraitsToInclude_Defined_In_Settings" result="Pass" time="0.0080521" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0048902" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0010488" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_HtmlReport_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_HtmlReport_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0011183" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_NUnitReport_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_NUnitReport_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0039431" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.0035725" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.0035646" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_XmlReport_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_XmlReport_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0010993" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_XmlReportV1_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_XmlReportV1_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0011395" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Throw_If_XUnit_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Throw_If_XUnit_Runner_Was_Not_Found" result="Pass" time="0.0033376" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null(option: 0, expected: &quot;&quot;/Working/Test1.dll&quot; -maxthreads unlimited&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null" result="Pass" time="0.0026522" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null(option: 3, expected: &quot;&quot;/Working/Test1.dll&quot; -maxthreads 3&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null" result="Pass" time="0.0055352" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null(option: null, expected: &quot;&quot;/Working/Test1.dll&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_MaxThreads_Switch_If_Settings_Value_Is_Not_Null" result="Pass" time="0.0023381" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None(option: All, expected: &quot;&quot;/Working/Test1.dll&quot; -parallel all&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None" result="Pass" time="0.0027032" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None(option: Assemblies, expected: &quot;&quot;/Working/Test1.dll&quot; -parallel assemblies&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None" result="Pass" time="0.0030593" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None(option: Collections, expected: &quot;&quot;/Working/Test1.dll&quot; -parallel collections&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None" result="Pass" time="0.0031229" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None(option: None, expected: &quot;&quot;/Working/Test1.dll&quot;&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Parallel_Switch_If_Settings_Value_Is_Not_None" result="Pass" time="0.0027158" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Path_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Path_In_Process_Arguments" result="Pass" time="0.0055482" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Paths_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Paths_In_Process_Arguments" result="Pass" time="0.0034836" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/xUnit/xunit.exe&quot;, expected: &quot;/Working/tools/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002881" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/xUnit/xunit.exe&quot;, expected: &quot;/bin/tools/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0007492" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/xUnit/xunit.exe&quot;, expected: &quot;C:/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2RunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007117" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" time="0.008" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.MaxThreads_Must_Not_Be_Negative" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="MaxThreads_Must_Not_Be_Negative" result="Pass" time="0.0010125" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Disable_HTML_Report_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Disable_HTML_Report_By_Default" result="Pass" time="0.0003351" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Disable_NUnit_Report_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Disable_NUnit_Report_By_Default" result="Pass" time="0.0003564" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Disable_XML_Report_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Disable_XML_Report_By_Default" result="Pass" time="0.0003714" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Enable_Shadow_Copying_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Enable_Shadow_Copying_By_Default" result="Pass" time="0.0003572" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_MaxThreads_Option_To_Null_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_MaxThreads_Option_To_Null_By_Default" result="Pass" time="0.0003576" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_NoAppDomain_To_False_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_NoAppDomain_To_False_By_Default" result="Pass" time="0.0005147" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_Output_Directory_To_Null_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_Output_Directory_To_Null_By_Default" result="Pass" time="0.0002691" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_Parallelism_Option_To_None_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_Parallelism_Option_To_None_By_Default" result="Pass" time="0.0038346" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_TraitsToExclude_To_Empty_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_TraitsToExclude_To_Empty_By_Default" result="Pass" time="0.0002458" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor.Should_Set_TraitsToInclude_To_Empty_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnit2SettingsTests+TheConstructor" method="Should_Set_TraitsToInclude_To_Empty_By_Default" result="Pass" time="0.0002529" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" time="0.048" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Find_XUnit_Runner_If_Tool_Path_Not_Provided" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Find_XUnit_Runner_If_Tool_Path_Not_Provided" result="Pass" time="0.0029057" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Generate_Html_Report_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Generate_Html_Report_If_Enabled_In_Settings" result="Pass" time="0.0030644" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Generate_Xml_Report_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Generate_Xml_Report_If_Enabled_In_Settings" result="Pass" time="0.0030601" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Not_Use_Shadow_Copying_If_Disabled_In_Settings" result="Pass" time="0.0029373" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Set_Silent_Mode_If_Enabled_In_Settings" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Set_Silent_Mode_If_Enabled_In_Settings" result="Pass" time="0.0067195" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Set_Working_Directory" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Set_Working_Directory" result="Pass" time="0.0045704" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_Assembly_Path_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Assembly_Path_Is_Null" result="Pass" time="0.0009359" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_HtmlReport_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_HtmlReport_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0011589" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Has_A_Non_Zero_Exit_Code" result="Pass" time="0.003591" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_Process_Was_Not_Started" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_Process_Was_Not_Started" result="Pass" time="0.009302" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_XmlReport_Is_Set_But_OutputDirectory_Is_Null" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_XmlReport_Is_Set_But_OutputDirectory_Is_Null" result="Pass" time="0.0013574" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Throw_If_XUnit_Runner_Was_Not_Found" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Throw_If_XUnit_Runner_Was_Not_Found" result="Pass" time="0.0034849" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Use_Provided_Assembly_Paths_In_Process_Arguments" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Use_Provided_Assembly_Paths_In_Process_Arguments" result="Pass" time="0.0030814" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;./tools/xUnit/xunit.exe&quot;, expected: &quot;/Working/tools/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0007871" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided(toolPath: &quot;/bin/tools/xUnit/xunit.exe&quot;, expected: &quot;/bin/tools/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided" result="Pass" time="0.0002486" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod.Should_Use_XUnit_Runner_From_Tool_Path_If_Provided_On_Windows(toolPath: &quot;C:/xUnit/xunit.exe&quot;, expected: &quot;C:/xUnit/xunit.exe&quot;)" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitRunnerTests+TheRunMethod" method="Should_Use_XUnit_Runner_From_Tool_Path_If_Provided_On_Windows" result="Pass" time="0.0007662" />
    </class>
    <class name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" time="0.004" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor.Should_Disable_HTML_Report_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" method="Should_Disable_HTML_Report_By_Default" result="Pass" time="0.0003169" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor.Should_Disable_Silent_Mode_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" method="Should_Disable_Silent_Mode_By_Default" result="Pass" time="0.0003627" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor.Should_Disable_XML_Report_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" method="Should_Disable_XML_Report_By_Default" result="Pass" time="0.0005656" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor.Should_Enable_Shadow_Copying_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" method="Should_Enable_Shadow_Copying_By_Default" result="Pass" time="0.0003374" />
      <test name="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor.Should_Set_Output_Directory_To_Null_By_Default" type="Cake.Common.Tests.Unit.Tools.XUnit.XUnitSettingsTests+TheConstructor" method="Should_Set_Output_Directory_To_Null_By_Default" result="Pass" time="0.0019579" />
    </class>
    <class name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" time="0.153" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Get_Attribute_Value" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Get_Attribute_Value" result="Pass" time="0.0518276" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Get_Node_Value" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Get_Node_Value" result="Pass" time="0.0005818" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Get_Node_Value_From_File_With_Dtd" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Get_Node_Value_From_File_With_Dtd" result="Pass" time="0.0844433" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Throw_If_File_Does_Not_Exists" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Throw_If_File_Does_Not_Exists" result="Pass" time="0.0013318" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Throw_If_File_Has_Dtd" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Throw_If_File_Has_Dtd" result="Pass" time="0.001742" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Throw_If_FilePath_Is_Null" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Throw_If_FilePath_Is_Null" result="Pass" time="0.0010196" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod.Should_Throw_If_No_Xpath" type="Cake.Common.Tests.Unit.XML.XmlPeekAliasesTests+TheXmlPeekMethod" method="Should_Throw_If_No_Xpath" result="Pass" time="0.0116003" />
    </class>
    <class name="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform" time="0.029" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform.Should_Change_Attribute" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform" method="Should_Change_Attribute" result="Pass" time="0.0057475" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform.Should_Change_Attribute_From_Xml_File_With_Dtd" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform" method="Should_Change_Attribute_From_Xml_File_With_Dtd" result="Pass" time="0.0201341" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform.Should_Remove_Attribute" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+Transform" method="Should_Remove_Attribute" result="Pass" time="0.0029136" />
    </class>
    <class name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" time="0.013" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters.Should_Throw_If_File_Does_Not_Exists" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" method="Should_Throw_If_File_Does_Not_Exists" result="Pass" time="0.0041851" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters.Should_Throw_If_FilePath_Is_Null" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" method="Should_Throw_If_FilePath_Is_Null" result="Pass" time="0.0010464" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters.Should_Throw_If_No_Xpath" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" method="Should_Throw_If_No_Xpath" result="Pass" time="0.0013891" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters.Should_Throw_If_Xml_File_Has_Dtd" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" method="Should_Throw_If_Xml_File_Has_Dtd" result="Pass" time="0.0042242" />
      <test name="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters.Should_Throw_If_Xml_String_Has_Dtd" type="Cake.Common.Tests.Unit.XML.XmlPokeTests+ValidateParameters" method="Should_Throw_If_Xml_String_Has_Dtd" result="Pass" time="0.0023365" />
    </class>
    <class name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" time="0.073" total="14" passed="14" failed="0" skipped="0">
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Result_Exists_And_Overwrite_False" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Result_Exists_And_Overwrite_False" result="Pass" time="0.0011068" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Result_Path_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Result_Path_Was_Null" result="Pass" time="0.0009675" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Settings_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Settings_Was_Null" result="Pass" time="0.0010456" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_String_Settings_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_String_Settings_Was_Null" result="Pass" time="0.0007638" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xml_Not_Exists" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xml_Not_Exists" result="Pass" time="0.0012777" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xml_Path_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xml_Path_Was_Null" result="Pass" time="0.0022173" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xml_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xml_Was_Null" result="Pass" time="0.0015754" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xsl_Not_Exists" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xsl_Not_Exists" result="Pass" time="0.0012632" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xsl_Path_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xsl_Path_Was_Null" result="Pass" time="0.0011557" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Throw_If_Xsl_Was_Null" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Throw_If_Xsl_Was_Null" result="Pass" time="0.0008163" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Transform_Xml_File_And_Xsl_File_To_Result_File" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Transform_Xml_File_And_Xsl_File_To_Result_File" result="Pass" time="0.0138974" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Transform_Xml_String_And_Xsl_String_To_Result_String" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Transform_Xml_String_And_Xsl_String_To_Result_String" result="Pass" time="0.0077182" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Transform_Xml_String_And_Xsl_String_To_Result_String_With_Utf32Xml_Declaration" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Transform_Xml_String_And_Xsl_String_To_Result_String_With_Utf32Xml_Declaration" result="Pass" time="0.0123677" />
      <test name="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod.Should_Transform_Xml_String_And_Xsl_String_To_Result_String_With_Xml_Declaration" type="Cake.Common.Tests.Unit.XML.XmlTransformationTests+TheTransformMethod" method="Should_Transform_Xml_String_And_Xsl_String_To_Result_String_With_Xml_Declaration" result="Pass" time="0.0267408" />
    </class>
  </assembly>
  <assembly name="C:\temp\dev\gh\cake-build-bot\cake\src\Cake.Core.Tests\bin\Release\Cake.Core.Tests.dll" configFile="C:\temp\dev\gh\cake-build-bot\cake\tools\xunit.runner.console\tools\xunit.console.exe.Config" run-date="2016-07-27" run-time="22:07:34" time="0.538" total="796" passed="796" failed="0" skipped="0" environment="64-bit .NET 4.0.30319.42000 [collection-per-class, parallel (4 threads)]" test-framework="xUnit.net 2.1.0.3179">
    <class name="Cake.Core.Tests.Unit.ActionTaskTests+TheAddActionMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.ActionTaskTests+TheAddActionMethod.Should_Add_Action_To_Task" type="Cake.Core.Tests.Unit.ActionTaskTests+TheAddActionMethod" method="Should_Add_Action_To_Task" result="Pass" time="0.001063" />
      <test name="Cake.Core.Tests.Unit.ActionTaskTests+TheAddActionMethod.Should_Throw_If_Action_Is_Null" type="Cake.Core.Tests.Unit.ActionTaskTests+TheAddActionMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0010835" />
    </class>
    <class name="Cake.Core.Tests.Unit.Annotations.CakeAliasCategoryAttributeTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Annotations.CakeAliasCategoryAttributeTests+TheConstructor.Should_Throw_If_Category_Name_Is_Null" type="Cake.Core.Tests.Unit.Annotations.CakeAliasCategoryAttributeTests+TheConstructor" method="Should_Throw_If_Category_Name_Is_Null" result="Pass" time="0.0011167" />
    </class>
    <class name="Cake.Core.Tests.Unit.Annotations.CakeModuleAttributeTests" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Annotations.CakeModuleAttributeTests.Should_Throw_If_Module_Type_Is_Null" type="Cake.Core.Tests.Unit.Annotations.CakeModuleAttributeTests" method="Should_Throw_If_Module_Type_Is_Null" result="Pass" time="0.0010958" />
    </class>
    <class name="Cake.Core.Tests.Unit.Annotations.CakeNamespaceImportAttributeTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Annotations.CakeNamespaceImportAttributeTests+TheConstructor.Should_Throw_If_Namespace_Is_Null" type="Cake.Core.Tests.Unit.Annotations.CakeNamespaceImportAttributeTests+TheConstructor" method="Should_Throw_If_Namespace_Is_Null" result="Pass" time="0.0010685" />
    </class>
    <class name="Cake.Core.Tests.Unit.Annotations.CakePropertyAliasAttributeTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Annotations.CakePropertyAliasAttributeTests+TheConstructor.Should_Default_Cache_Property_To_False" type="Cake.Core.Tests.Unit.Annotations.CakePropertyAliasAttributeTests+TheConstructor" method="Should_Default_Cache_Property_To_False" result="Pass" time="0.0006134" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" time="0.008" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Arguments_Are_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Arguments_Are_Null" result="Pass" time="0.0008443" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0008483" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0030273" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Globber_Is_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Globber_Is_Null" result="Pass" time="0.0009935" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0008865" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Process_Runner_Is_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Process_Runner_Is_Null" result="Pass" time="0.0008403" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor.Should_Throw_If_Tools_Are_Null" type="Cake.Core.Tests.Unit.CakeContextTests+TheConstructor" method="Should_Throw_If_Tools_Are_Null" result="Pass" time="0.0009304" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" time="0.003" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_Arguments" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_Arguments" result="Pass" time="0.0004152" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_Environment" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_Environment" result="Pass" time="0.0003911" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_File_System" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_File_System" result="Pass" time="0.0004779" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_Globber" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_Globber" result="Pass" time="0.000401" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_Log" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_Log" result="Pass" time="0.0003974" />
      <test name="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty.Should_Return_Provided_Process_Runner" type="Cake.Core.Tests.Unit.CakeContextTests+TheFileSystemProperty" method="Should_Return_Provided_Process_Runner" result="Pass" time="0.0005921" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeEngineTests+TheConstructor" time="0.010" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Core.Tests.Unit.CakeEngineTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0100022" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod" time="0.004" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod.Should_Register_Created_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod" method="Should_Register_Created_Task" result="Pass" time="0.0009998" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod.Should_Return_A_New_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod" method="Should_Return_A_New_Task" result="Pass" time="0.0008715" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod.Should_Throw_If_Another_Task_With_The_Same_Name_Already_Been_Added" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod" method="Should_Throw_If_Another_Task_With_The_Same_Name_Already_Been_Added" result="Pass" time="0.0014783" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod.Should_Throw_If_Another_Task_With_The_Same_Name_Already_Been_Added_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRegisterTaskMethod" method="Should_Throw_If_Another_Task_With_The_Same_Name_Already_Been_Added_Regardless_Of_Casing" result="Pass" time="0.001149" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" time="0.211" total="43" passed="43" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Exception_Thrown_From_Task_If_Both_Task_And_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Exception_Thrown_From_Task_If_Both_Task_And_Teardown_Actions_Throw" result="Pass" time="0.0032061" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Error_Handler_Even_If_Exception_Was_Thrown_In_Error_Reporter" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Error_Handler_Even_If_Exception_Was_Thrown_In_Error_Reporter" result="Pass" time="0.0032172" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Error_Reporter_Before_Error_Handler_If_Task_Succeeds" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Error_Reporter_Before_Error_Handler_If_Task_Succeeds" result="Pass" time="0.0031666" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Finally_Handler_After_Error_Handler_If_Task_Succeeds" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Finally_Handler_After_Error_Handler_If_Task_Succeeds" result="Pass" time="0.0126708" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Finally_Handler_If_Task_Succeeds" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Finally_Handler_If_Task_Succeeds" result="Pass" time="0.0014127" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Finally_Handler_If_Task_Throws" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Finally_Handler_If_Task_Throws" result="Pass" time="0.0037785" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Execute_Tasks_In_Order" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Execute_Tasks_In_Order" result="Pass" time="0.0035029" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Invoke_Task_Error_Handler_If_Exception_Is_Thrown" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Invoke_Task_Error_Handler_If_Exception_Is_Thrown" result="Pass" time="0.003227" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Exception_Handled_By_Error_Handler" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Exception_Handled_By_Error_Handler" result="Pass" time="0.0057579" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Exception_Thrown_From_Task_If_Both_Task_And_Task_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Exception_Thrown_From_Task_If_Both_Task_And_Task_Teardown_Actions_Throw" result="Pass" time="0.0032085" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Task_Teardown_Exception_If_Both_Task_And_Task_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Task_Teardown_Exception_If_Both_Task_And_Task_Teardown_Actions_Throw" result="Pass" time="0.0056331" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Task_Teardown_Exception_If_Both_Task_Setup_And_Task_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Task_Teardown_Exception_If_Both_Task_Setup_And_Task_Teardown_Actions_Throw" result="Pass" time="0.0038085" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Teardown_Exception_If_Both_Setup_And_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Teardown_Exception_If_Both_Setup_And_Teardown_Actions_Throw" result="Pass" time="0.0034552" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Log_Teardown_Exception_If_Both_Task_And_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Log_Teardown_Exception_If_Both_Task_And_Teardown_Actions_Throw" result="Pass" time="0.0038085" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Not_Catch_Exceptions_From_Task_If_ContinueOnError_Is_Not_Set" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Not_Catch_Exceptions_From_Task_If_ContinueOnError_Is_Not_Set" result="Pass" time="0.002599" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Not_Run_Task_If_Task_Setup_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Not_Run_Task_If_Task_Setup_Failed" result="Pass" time="0.0128327" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Not_Run_Tasks_If_Setup_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Not_Run_Tasks_If_Setup_Failed" result="Pass" time="0.0165773" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Not_Skip_Tasks_Where_Boolean_Criterias_Are_Fulfilled" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Not_Skip_Tasks_Where_Boolean_Criterias_Are_Fulfilled" result="Pass" time="0.0040375" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Not_Skip_Tasks_Where_CakeContext_Criterias_Are_Fulfilled" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Not_Skip_Tasks_Where_CakeContext_Criterias_Are_Fulfilled" result="Pass" time="0.0028734" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Propagate_Exception_From_Error_Handler" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Propagate_Exception_From_Error_Handler" result="Pass" time="0.003293" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Return_Report_That_Contains_Executed_Tasks_In_Order" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Return_Report_That_Contains_Executed_Tasks_In_Order" result="Pass" time="0.001337" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Return_Report_That_Marks_Delegated_Tasks_As_Delegated" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Return_Report_That_Marks_Delegated_Tasks_As_Delegated" result="Pass" time="0.0024312" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Return_Report_That_Marks_Executed_Tasks_As_Executed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Return_Report_That_Marks_Executed_Tasks_As_Executed" result="Pass" time="0.005834" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Return_Report_That_Marks_Skipped_Tasks_As_Skipped" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Return_Report_That_Marks_Skipped_Tasks_As_Skipped" result="Pass" time="0.0077202" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Setup_Before_First_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Setup_Before_First_Task" result="Pass" time="0.0074202" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Task_Setup_Before_Each_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Task_Setup_Before_Each_Task" result="Pass" time="0.0024332" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Task_Teardown_After_Each_Running_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Task_Teardown_After_Each_Running_Task" result="Pass" time="0.0027671" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Task_Teardown_After_Each_Running_Task_Even_If_Task_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Task_Teardown_After_Each_Running_Task_Even_If_Task_Failed" result="Pass" time="0.0063421" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Task_Teardown_After_Each_Running_Task_Even_If_Task_Is_Skipped" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Task_Teardown_After_Each_Running_Task_Even_If_Task_Is_Skipped" result="Pass" time="0.0034437" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Task_Teardown_If_Task_Setup_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Task_Teardown_If_Task_Setup_Failed" result="Pass" time="0.0040328" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Teardown_After_Last_Running_Task" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Teardown_After_Last_Running_Task" result="Pass" time="0.0020554" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Teardown_After_Last_Running_Task_Even_If_Task_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Teardown_After_Last_Running_Task_Even_If_Task_Failed" result="Pass" time="0.0036901" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Run_Teardown_If_Setup_Failed" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Run_Teardown_If_Setup_Failed" result="Pass" time="0.003801" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Skip_Tasks_Where_Boolean_Criterias_Are_Not_Fulfilled" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Skip_Tasks_Where_Boolean_Criterias_Are_Not_Fulfilled" result="Pass" time="0.0066681" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Skip_Tasks_Where_CakeContext_Criterias_Are_Not_Fulfilled" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Skip_Tasks_Where_CakeContext_Criterias_Are_Not_Fulfilled" result="Pass" time="0.0052154" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Swallow_Exceptions_If_ContinueOnError_Is_Set" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Swallow_Exceptions_If_ContinueOnError_Is_Set" result="Pass" time="0.001485" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Swallow_Exceptions_Thrown_In_Error_Reporter" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Swallow_Exceptions_Thrown_In_Error_Reporter" result="Pass" time="0.0031639" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_Exception_Occuring_In_Task_Teardown_If_No_Previous_Exception_Was_Thrown" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_Exception_Occuring_In_Task_Teardown_If_No_Previous_Exception_Was_Thrown" result="Pass" time="0.0025382" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_Exception_Occuring_In_Teardown_If_No_Previous_Exception_Was_Thrown" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_Exception_Occuring_In_Teardown_If_No_Previous_Exception_Was_Thrown" result="Pass" time="0.009692" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_Exception_Thrown_From_Setup_Action_If_Both_Setup_And_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_Exception_Thrown_From_Setup_Action_If_Both_Setup_And_Teardown_Actions_Throw" result="Pass" time="0.0202162" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_Exception_Thrown_From_Task_Setup_Action_If_Both_Task_Setup_And_Task_Teardown_Actions_Throw" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_Exception_Thrown_From_Task_Setup_Action_If_Both_Task_Setup_And_Task_Teardown_Actions_Throw" result="Pass" time="0.003274" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_If_Target_Cannot_Be_Reached_Due_To_Constraint" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_If_Target_Cannot_Be_Reached_Due_To_Constraint" result="Pass" time="0.0023566" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod.Should_Throw_If_Target_Was_Not_Found" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod" method="Should_Throw_If_Target_Was_Not_Found" result="Pass" time="0.0014605" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithExecutionStrategy" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithExecutionStrategy.Should_Throw_If_Execution_Strategy_Is_Null" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithExecutionStrategy" method="Should_Throw_If_Execution_Strategy_Is_Null" result="Pass" time="0.0015154" />
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithExecutionStrategy.Should_Throw_If_Target_Is_Null" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithExecutionStrategy" method="Should_Throw_If_Target_Is_Null" result="Pass" time="0.0016286" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithTarget" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithTarget.Should_Throw_If_Target_Is_Null" type="Cake.Core.Tests.Unit.CakeEngineTests+TheRunTargetMethod+WithTarget" method="Should_Throw_If_Target_Is_Null" result="Pass" time="0.0015434" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeReportTests+TheAddDelegatedMethod" time="0.005" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddDelegatedMethod.Should_Add_A_New_Task" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddDelegatedMethod" method="Should_Add_A_New_Task" result="Pass" time="0.001168" />
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddDelegatedMethod.Should_Add_To_End_Of_Sequence" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddDelegatedMethod" method="Should_Add_To_End_Of_Sequence" result="Pass" time="0.0041074" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeReportTests+TheAddMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddMethod.Should_Add_A_New_Task" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddMethod" method="Should_Add_A_New_Task" result="Pass" time="0.0010125" />
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddMethod.Should_Add_To_End_Of_Sequence" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddMethod" method="Should_Add_To_End_Of_Sequence" result="Pass" time="0.0013922" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeReportTests+TheAddSkippedMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddSkippedMethod.Should_Add_A_New_Task" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddSkippedMethod" method="Should_Add_A_New_Task" result="Pass" time="0.0009043" />
      <test name="Cake.Core.Tests.Unit.CakeReportTests+TheAddSkippedMethod.Should_Add_To_End_Of_Sequence" type="Cake.Core.Tests.Unit.CakeReportTests+TheAddSkippedMethod" method="Should_Add_To_End_Of_Sequence" result="Pass" time="0.0008735" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheContinueOnErrorMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheContinueOnErrorMethod.Should_Set_The_Error_Handler" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheContinueOnErrorMethod" method="Should_Set_The_Error_Handler" result="Pass" time="0.0019314" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithContext" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithContext.Should_Add_Action_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithContext" method="Should_Add_Action_To_Task" result="Pass" time="0.0013164" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithoutContext" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithoutContext.Should_Add_Action_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithoutContext" method="Should_Add_Action_To_Task" result="Pass" time="0.0009595" />
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithoutContext.Should_Throw_If_Action_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheDoesMethod+WithoutContext" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0009576" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod" time="0.005" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod.Should_Set_The_Finally_Handler" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod" method="Should_Set_The_Finally_Handler" result="Pass" time="0.00075" />
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod.Should_Throw_If_Action_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.003441" />
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod.Should_Throw_If_Builder_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheFinallyMethod" method="Should_Throw_If_Builder_Is_Null" result="Pass" time="0.0008372" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheIsDependentOnMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheIsDependentOnMethod.Should_Add_Dependency_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheIsDependentOnMethod" method="Should_Add_Dependency_To_Task" result="Pass" time="0.0013693" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheOnErrorMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheOnErrorMethod.Should_Set_The_Error_Handler" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheOnErrorMethod" method="Should_Set_The_Error_Handler" result="Pass" time="0.0009477" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod.Should_Set_The_Finally_Handler" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod" method="Should_Set_The_Finally_Handler" result="Pass" time="0.0006363" />
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod.Should_Throw_If_Action_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod" method="Should_Throw_If_Action_Is_Null" result="Pass" time="0.0012746" />
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod.Should_Throw_If_Builder_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheReportErrorMethod" method="Should_Throw_If_Builder_Is_Null" result="Pass" time="0.0014972" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBoolean" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBoolean.Should_Add_Criteria_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBoolean" method="Should_Add_Criteria_To_Task" result="Pass" time="0.0017277" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBooleanLambda" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBooleanLambda.Should_Add_Criteria_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsBooleanLambda" method="Should_Add_Criteria_To_Task" result="Pass" time="0.0009595" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsCakeContextToBooleanLambda" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsCakeContextToBooleanLambda.Should_Add_Criteria_To_Task" type="Cake.Core.Tests.Unit.CakeTaskBuilderExtensionsTests+TheWithCriteriaMethod+ThatAcceptsCakeContextToBooleanLambda" method="Should_Add_Criteria_To_Task" result="Pass" time="0.0008171" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheConstructor.Should_Throw_Is_Provided_Task_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheConstructor" method="Should_Throw_Is_Provided_Task_Is_Null" result="Pass" time="0.0007756" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheTaskProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheTaskProperty.Should_Return_The_Task_Provided_To_The_Constructor" type="Cake.Core.Tests.Unit.CakeTaskBuilderTests+TheTaskProperty" method="Should_Return_The_Task_Provided_To_The_Constructor" result="Pass" time="0.0010413" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskExtensionsTests+TheAddCriteriaMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskExtensionsTests+TheAddCriteriaMethod.Should_Add_Criteria" type="Cake.Core.Tests.Unit.CakeTaskExtensionsTests+TheAddCriteriaMethod" method="Should_Add_Criteria" result="Pass" time="0.0008016" />
      <test name="Cake.Core.Tests.Unit.CakeTaskExtensionsTests+TheAddCriteriaMethod.Should_Throw_If_Criteria_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskExtensionsTests+TheAddCriteriaMethod" method="Should_Throw_If_Criteria_Is_Null" result="Pass" time="0.0015699" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests.Should_Implement_ICakeTaskInfo" type="Cake.Core.Tests.Unit.CakeTaskTests" method="Should_Implement_ICakeTaskInfo" result="Pass" time="0.0041283" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddCriteriaMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddCriteriaMethod.Should_Add_Criteria" type="Cake.Core.Tests.Unit.CakeTaskTests+TheAddCriteriaMethod" method="Should_Add_Criteria" result="Pass" time="0.000847" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddCriteriaMethod.Should_Throw_If_Criteria_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskTests+TheAddCriteriaMethod" method="Should_Throw_If_Criteria_Is_Null" result="Pass" time="0.0009809" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddDependencyMethod" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddDependencyMethod.Should_Add_Dependency_If_Not_Already_Present" type="Cake.Core.Tests.Unit.CakeTaskTests+TheAddDependencyMethod" method="Should_Add_Dependency_If_Not_Already_Present" result="Pass" time="0.0006887" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheAddDependencyMethod.Should_Throw_If_Dependency_Already_Exist" type="Cake.Core.Tests.Unit.CakeTaskTests+TheAddDependencyMethod" method="Should_Throw_If_Dependency_Already_Exist" result="Pass" time="0.0009454" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" time="0.002" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor.Should_Throw_If_Name_Is_Empty(name: &quot;  &quot;)" type="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0001278" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor.Should_Throw_If_Name_Is_Empty(name: &quot; \n&quot;)" type="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0001586" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor.Should_Throw_If_Name_Is_Empty(name: &quot;&quot;)" type="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0001337" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor.Should_Throw_If_Name_Is_Empty(name: &quot;\t&quot;)" type="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" method="Should_Throw_If_Name_Is_Empty" result="Pass" time="0.0010586" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor.Should_Throw_If_Name_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskTests+TheConstructor" method="Should_Throw_If_Name_Is_Null" result="Pass" time="0.0008139" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod.Should_Set_Error_Handler" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod" method="Should_Set_Error_Handler" result="Pass" time="0.0006335" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod.Should_Throw_If_Error_Handler_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod" method="Should_Throw_If_Error_Handler_Is_Null" result="Pass" time="0.0014649" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod.Should_Throw_If_Setting_More_Than_One_Error_Handler" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorHandlerMethod" method="Should_Throw_If_Setting_More_Than_One_Error_Handler" result="Pass" time="0.001277" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod" time="0.007" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod.Should_Set_Error_Reporter" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod" method="Should_Set_Error_Reporter" result="Pass" time="0.0006489" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod.Should_Throw_If_Error_Reporter_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod" method="Should_Throw_If_Error_Reporter_Is_Null" result="Pass" time="0.0048144" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod.Should_Throw_If_Setting_More_Than_One_Error_Reporter" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetErrorReportHandlerMethod" method="Should_Throw_If_Setting_More_Than_One_Error_Reporter" result="Pass" time="0.0013721" />
    </class>
    <class name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod.Should_Set_Finally_Handler" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod" method="Should_Set_Finally_Handler" result="Pass" time="0.0005395" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod.Should_Throw_If_Finally_Handler_Is_Null" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod" method="Should_Throw_If_Finally_Handler_Is_Null" result="Pass" time="0.0008617" />
      <test name="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod.Should_Throw_If_Setting_More_Than_One_Finally_Handler" type="Cake.Core.Tests.Unit.CakeTaskTests+TheSetFinallyHandlerMethod" method="Should_Throw_If_Setting_More_Than_One_Finally_Handler" result="Pass" time="0.0015761" />
    </class>
    <class name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheConstructor" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.002188" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0011427" />
    </class>
    <class name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" time="0.024" total="13" passed="13" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Add_Arguments" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Add_Arguments" result="Pass" time="0.0007515" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Add_Configuration_File_Variables" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Add_Configuration_File_Variables" result="Pass" time="0.0005368" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Add_Configuration_File_Variables_With_Section" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Add_Configuration_File_Variables_With_Section" result="Pass" time="0.0155423" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Add_Prefixed_Environment_Variables" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Add_Prefixed_Environment_Variables" result="Pass" time="0.0004649" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Not_Add_Non_Prefixed_Environment_Variables" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Not_Add_Non_Prefixed_Environment_Variables" result="Pass" time="0.0005688" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Retrieve_Arguments_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Retrieve_Arguments_Regardless_Of_Casing" result="Pass" time="0.0006213" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Retrieve_Configuration_File_Variables_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Retrieve_Configuration_File_Variables_Regardless_Of_Casing" result="Pass" time="0.000553" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Retrieve_Configuration_File_Variables_With_Section_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Retrieve_Configuration_File_Variables_With_Section_Regardless_Of_Casing" result="Pass" time="0.0006683" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Retrieve_Prefixed_Environment_Variables_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Retrieve_Prefixed_Environment_Variables_Regardless_Of_Casing" result="Pass" time="0.0009268" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Throw_If_Arguments_Are_Null" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Throw_If_Arguments_Are_Null" result="Pass" time="0.0009612" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0011277" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Use_Value_From_Argument_Over_Environment_Variable_And_Configuration_File" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Use_Value_From_Argument_Over_Environment_Variable_And_Configuration_File" result="Pass" time="0.0007749" />
      <test name="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod.Should_Use_Value_From_Configuration_File_Over_Environment_Variable" type="Cake.Core.Tests.Unit.Configuration.CakeConfigurationProviderTests+TheCreateMethod" method="Should_Use_Value_From_Configuration_File_Over_Environment_Variable" result="Pass" time="0.0007069" />
    </class>
    <class name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" time="0.011" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Parse_Ini_With_Sections_Correctly" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Parse_Ini_With_Sections_Correctly" result="Pass" time="0.0040189" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Throw_If_Equals_Sign_Is_Missing_From_Key_And_Value_Pair" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Throw_If_Equals_Sign_Is_Missing_From_Key_And_Value_Pair" result="Pass" time="0.001489" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Throw_If_File_Do_Not_Exist" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Throw_If_File_Do_Not_Exist" result="Pass" time="0.0014423" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Throw_If_Key_Contains_WhiteSpace" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Throw_If_Key_Contains_WhiteSpace" result="Pass" time="0.0013444" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Throw_If_KeyValue_Pair_Is_Not_Followed_By_Section_Or_Another_KeyValue_Pair" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Throw_If_KeyValue_Pair_Is_Not_Followed_By_Section_Or_Another_KeyValue_Pair" result="Pass" time="0.0013492" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod.Should_Throw_If_Section_Contains_Whitespace" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationParserTests+TheParseMethod" method="Should_Throw_If_Section_Contains_Whitespace" result="Pass" time="0.0016303" />
    </class>
    <class name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" time="0.012" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Set_Missing_Value_As_Empty_String" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Set_Missing_Value_As_Empty_String" result="Pass" time="0.0010377" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Throw_If_Section_Is_Malformed(section: &quot;[TheSection&quot;)" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Throw_If_Section_Is_Malformed" result="Pass" time="0.0007859" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Throw_If_Section_Is_Malformed(section: &quot;[TheSection\nHello=World&quot;)" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Throw_If_Section_Is_Malformed" result="Pass" time="0.0001444" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Tokenize_Comment" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Tokenize_Comment" result="Pass" time="0.0024403" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Tokenize_Ini_File" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Tokenize_Ini_File" result="Pass" time="0.0027213" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Tokenize_Key_And_Value_Pair" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Tokenize_Key_And_Value_Pair" result="Pass" time="0.0010369" />
      <test name="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod.Should_Tokenize_Section" type="Cake.Core.Tests.Unit.Configuration.Parser.ConfigurationTokenizerTests+TheTokenizeMethod" method="Should_Tokenize_Section" result="Pass" time="0.0040032" />
    </class>
    <class name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod.Can_Write_Debug_Message_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod" method="Can_Write_Debug_Message_With_Custom_Verbosity" result="Pass" time="0.0007168" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod.Can_Write_Debug_Message_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod" method="Can_Write_Debug_Message_With_Default_Verbosity" result="Pass" time="0.0006572" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" result="Pass" time="0.0005387" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheDebugMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" result="Pass" time="0.0008498" />
    </class>
    <class name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod" time="0.007" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod.Can_Write_Error_Message_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod" method="Can_Write_Error_Message_With_Custom_Verbosity" result="Pass" time="0.0006868" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod.Can_Write_Error_Message_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod" method="Can_Write_Error_Message_With_Default_Verbosity" result="Pass" time="0.0047219" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" result="Pass" time="0.0008431" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheErrorMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" result="Pass" time="0.000598" />
    </class>
    <class name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod.Can_Write_Informative_Message_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod" method="Can_Write_Informative_Message_With_Custom_Verbosity" result="Pass" time="0.0006221" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod.Can_Write_Informative_Message_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod" method="Can_Write_Informative_Message_With_Default_Verbosity" result="Pass" time="0.0008491" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" result="Pass" time="0.0005534" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheInformationMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" result="Pass" time="0.0005932" />
    </class>
    <class name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod" time="0.002" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod.Can_Write_Warning_Message_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod" method="Can_Write_Warning_Message_With_Custom_Verbosity" result="Pass" time="0.0007204" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod.Can_Write_Warning_Message_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod" method="Can_Write_Warning_Message_With_Default_Verbosity" result="Pass" time="0.0006043" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" result="Pass" time="0.0005281" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheWarningMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" result="Pass" time="0.0006015" />
    </class>
    <class name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod" time="0.004" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod.Can_Write_Verbose_Message_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod" method="Can_Write_Verbose_Message_With_Custom_Verbosity" result="Pass" time="0.0011048" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod.Can_Write_Verbose_Message_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod" method="Can_Write_Verbose_Message_With_Default_Verbosity" result="Pass" time="0.0008242" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Custom_Verbosity" result="Pass" time="0.0005459" />
      <test name="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod.Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" type="Cake.Core.Tests.Unit.Diagnostics.LogExtensionsTests+TheVerboseMethod" method="Should_Not_Throw_If_Log_Is_Null_When_Logging_With_Default_Verbosity" result="Pass" time="0.0013421" />
    </class>
    <class name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendMethods" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendMethods.ShouldAppendFormattedTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendMethods" method="ShouldAppendFormattedTextArgument" result="Pass" time="0.0015071" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendMethods.ShouldAppendTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendMethods" method="ShouldAppendTextArgument" result="Pass" time="0.000427" />
    </class>
    <class name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods.ShouldAppendFormattedTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods" method="ShouldAppendFormattedTextArgument" result="Pass" time="0.000397" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods.ShouldAppendProcessArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods" method="ShouldAppendProcessArgument" result="Pass" time="0.0003966" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods.ShouldAppendTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedMethods" method="ShouldAppendTextArgument" result="Pass" time="0.0005088" />
    </class>
    <class name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods.ShouldAppendFormattedTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods" method="ShouldAppendFormattedTextArgument" result="Pass" time="0.0004381" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods.ShouldAppendProcessArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods" method="ShouldAppendProcessArgument" result="Pass" time="0.00063" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods.ShouldAppendTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendQuotedSecretMethods" method="ShouldAppendTextArgument" result="Pass" time="0.0005154" />
    </class>
    <class name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods.ShouldAppendFormattedTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods" method="ShouldAppendFormattedTextArgument" result="Pass" time="0.0006766" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods.ShouldAppendProcessArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods" method="ShouldAppendProcessArgument" result="Pass" time="0.0008103" />
      <test name="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods.ShouldAppendTextArgument" type="Cake.Core.Tests.Unit.Extensions.ProcessArgumentListExtensionsTests+TheAppendSecretMethods" method="ShouldAppendTextArgument" result="Pass" time="0.0003765" />
    </class>
    <class name="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod.Should_Add_All_Tasks_As_Nodes_In_Graph" type="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod" method="Should_Add_All_Tasks_As_Nodes_In_Graph" result="Pass" time="0.0008901" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod.Should_Create_Edges_Between_Dependencies" type="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod" method="Should_Create_Edges_Between_Dependencies" result="Pass" time="0.0014159" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod.Should_Throw_Exception_When_Depending_On_Task_That_Does_Not_Exist" type="Cake.Core.Tests.Unit.Graph.CakeGraphBuilderTests+TheBuildMethod" method="Should_Throw_Exception_When_Depending_On_Task_That_Does_Not_Exist" result="Pass" time="0.0013626" />
    </class>
    <class name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod.Should_Add_Node_To_Graph" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod" method="Should_Add_Node_To_Graph" result="Pass" time="0.0004002" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod.Should_Throw_If_Node_Already_Is_Present_In_Graph" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod" method="Should_Throw_If_Node_Already_Is_Present_In_Graph" result="Pass" time="0.001076" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod.Should_Throw_If_Provided_Node_Is_Null" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheAddMethod" method="Should_Throw_If_Provided_Node_Is_Null" result="Pass" time="0.0021631" />
    </class>
    <class name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" time="0.005" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Add_End_Node_If_Missing_To_Node_Collection" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Add_End_Node_If_Missing_To_Node_Collection" result="Pass" time="0.0004649" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Add_Start_Node_If_Missing_To_Node_Collection" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Add_Start_Node_If_Missing_To_Node_Collection" result="Pass" time="0.0003994" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Create_Edge_Between_Connected_Nodes" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Create_Edge_Between_Connected_Nodes" result="Pass" time="0.0004152" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Not_Create_Edge_Between_Connected_Nodes_If_An_Edge_Already_Exist" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Not_Create_Edge_Between_Connected_Nodes_If_An_Edge_Already_Exist" result="Pass" time="0.0004255" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Not_Create_Edge_Between_Connected_Nodes_If_An_Edge_Already_Exist_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Not_Create_Edge_Between_Connected_Nodes_If_An_Edge_Already_Exist_Regardless_Of_Casing" result="Pass" time="0.0003947" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Throw_If_Edge_Is_Reflexive" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Throw_If_Edge_Is_Reflexive" result="Pass" time="0.0008194" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Throw_If_Edge_Is_Unidirectional" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Throw_If_Edge_Is_Unidirectional" result="Pass" time="0.0008076" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod.Should_Throw_If_Edge_Is_Unidirectional_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheConnectMethod" method="Should_Throw_If_Edge_Is_Unidirectional_Regardless_Of_Casing" result="Pass" time="0.0010843" />
    </class>
    <class name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod" time="0.007" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod.Should_Find_Node_In_Graph" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod" method="Should_Find_Node_In_Graph" result="Pass" time="0.0004985" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod.Should_Find_Node_In_Graph_Regardless_Of_Casing" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod" method="Should_Find_Node_In_Graph_Regardless_Of_Casing" result="Pass" time="0.0005351" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod.Should_Not_Find_Non_Existing_Node_In_Graph" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheExistMethod" method="Should_Not_Find_Non_Existing_Node_In_Graph" result="Pass" time="0.0056647" />
    </class>
    <class name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" time="0.015" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod.Should_Return_Empty_Collection_Of_Nodes_If_Target_Was_Not_Found" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" method="Should_Return_Empty_Collection_Of_Nodes_If_Target_Was_Not_Found" result="Pass" time="0.0034236" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod.Should_Skip_Nodes_That_Are_Not_On_The_Way_To_The_Target" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" method="Should_Skip_Nodes_That_Are_Not_On_The_Way_To_The_Target" result="Pass" time="0.0007938" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod.Should_Throw_If_Encountering_Circular_Reference" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" method="Should_Throw_If_Encountering_Circular_Reference" result="Pass" time="0.0086715" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod.Should_Traverse_Graph_In_Correct_Order" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" method="Should_Traverse_Graph_In_Correct_Order" result="Pass" time="0.0008352" />
      <test name="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod.Should_Traverse_Graph_In_Correct_Order_Regardless_Of_Casing_Of_Root" type="Cake.Core.Tests.Unit.Graph.CakeGraphTests+TheTraverseMethod" method="Should_Traverse_Graph_In_Correct_Order_Regardless_Of_Casing_Of_Root" result="Pass" time="0.0012481" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" time="0.001" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod.Should_Call_Child_Arguments_RenderSafe_Method" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" method="Should_Call_Child_Arguments_RenderSafe_Method" result="Pass" time="0.0006374" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot; \t &quot;, expected: &quot;&quot; \t &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000046" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;&quot;, expected: &quot;&quot;&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000082" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;Hello World&quot;, expected: &quot;&quot;Hello World&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0003729" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: null, expected: &quot;&quot;&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000038" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" time="0.008" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod.Should_Call_Child_Arguments_RenderSafe_Method" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" method="Should_Call_Child_Arguments_RenderSafe_Method" result="Pass" time="0.0077324" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot; \t &quot;, expected: &quot;&quot; \t &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0003848" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;&quot;, expected: &quot;&quot;&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000038" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;Hello World&quot;, expected: &quot;&quot;Hello World&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000082" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: null, expected: &quot;&quot;&quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.QuotedArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000038" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" time="0.001" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod.Should_Call_Child_Arguments_Render_Method" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" method="Should_Call_Child_Arguments_Render_Method" result="Pass" time="0.0005482" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot; \t &quot;, expected: &quot; \t &quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0004499" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;&quot;, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000078" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;Hello World&quot;, expected: &quot;Hello World&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.000024" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: null, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.000007" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" time="0.004" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod.Should_Not_Call_Child_Arguments_RenderSafe_Method" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" method="Should_Not_Call_Child_Arguments_RenderSafe_Method" result="Pass" time="0.0004768" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot; \t &quot;, expected: &quot;[REDACTED]&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000054" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;&quot;, expected: &quot;[REDACTED]&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000236" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;Hello World&quot;, expected: &quot;[REDACTED]&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0030356" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: null, expected: &quot;[REDACTED]&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.SecretArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000058" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod" time="0.000" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot; \t &quot;, expected: &quot; \t &quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000046" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;&quot;, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0004673" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: &quot;Hello World&quot;, expected: &quot;Hello World&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000228" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod.Should_Render_The_Provided_Text(text: null, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderMethod" method="Should_Render_The_Provided_Text" result="Pass" time="0.0000034" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod" time="0.000" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot; \t &quot;, expected: &quot; \t &quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.000005" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;&quot;, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.0000263" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: &quot;Hello World&quot;, expected: &quot;Hello World&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.000444" />
      <test name="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod.Should_Render_The_Provided_Text_As_Normal(text: null, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.Arguments.TextArgumentTests+TheRenderSafeMethod" method="Should_Render_The_Provided_Text_As_Normal" result="Pass" time="0.000003" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths" time="0.005" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Add_Paths_That_Are_Not_Present" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Add_Paths_That_Are_Not_Present" result="Pass" time="0.0035728" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths(caseSensitive: False, expectedCount: 3)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.000911" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths(caseSensitive: True, expectedCount: 5)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.0000201" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath.Should_Add_Path_If_Not_Already_Present" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Add_Path_If_Not_Already_Present" result="Pass" time="0.0010334" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.0008625" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.0000149" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheConstructor.Should_Throw_If_Comparer_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheConstructor" method="Should_Throw_If_Comparer_Is_Null" result="Pass" time="0.0008956" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheCountProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheCountProperty.Should_Return_The_Number_Of_Paths_In_The_Collection" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheCountProperty" method="Should_Return_The_Number_Of_Paths_In_The_Collection" result="Pass" time="0.0007681" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0000264" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 3)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.001048" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Return_New_Collection" result="Pass" time="0.0015536" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0010535" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0000165" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Return_New_Collection" result="Pass" time="0.0014088" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithMultiplePaths" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.0008068" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithMultiplePaths.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithMultiplePaths" method="Should_Return_New_Collection" result="Pass" time="0.0016133" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithSinglePath" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.001284" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithSinglePath.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+ThePlusOperator+WithSinglePath" method="Should_Return_New_Collection" result="Pass" time="0.0005735" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithMultiplePaths" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 0)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0000446" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0016334" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithSinglePath" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Path(caseSensitive: False, expectedCount: 0)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Path" result="Pass" time="0.0030715" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Path(caseSensitive: True, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.DirectoryPathCollectionTests+TheRemoveMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Path" result="Pass" time="0.0000666" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" time="0.002" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Can_Not_Combine_Directory_Path_With_Absolute_Directory_Path" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Can_Not_Combine_Directory_Path_With_Absolute_Directory_Path" result="Pass" time="0.0008786" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Combine_Paths(first: &quot;/assets/shaders/&quot;, second: &quot;simple&quot;, expected: &quot;/assets/shaders/simple&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Combine_Paths" result="Pass" time="0.0004866" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Combine_Paths(first: &quot;assets/shaders&quot;, second: &quot;simple&quot;, expected: &quot;assets/shaders/simple&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000169" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Combine_Paths(first: &quot;assets/shaders/&quot;, second: &quot;simple&quot;, expected: &quot;assets/shaders/simple&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000362" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Combine_Paths(first: &quot;c:/&quot;, second: &quot;simple&quot;, expected: &quot;c:/simple&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000141" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Combine_Paths(first: &quot;c:/assets/shaders/&quot;, second: &quot;simple&quot;, expected: &quot;c:/assets/shaders/simple&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000184" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithDirectoryPathMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007862" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" time="0.002" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Can_Not_Combine_Directory_Path_With_Absolute_File_Path" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Can_Not_Combine_Directory_Path_With_Absolute_File_Path" result="Pass" time="0.0008739" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;/assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0004617" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;/assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;/assets/shaders/test/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000216" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders&quot;, second: &quot;simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000184" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;assets/shaders/test/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000457" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000204" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;assets/shaders/test/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.000024" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;c:/&quot;, second: &quot;simple.frag&quot;, expected: &quot;c:/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000145" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;c:/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;c:/test/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000184" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;c:/assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;c:/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000422" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Combine_Paths(first: &quot;c:/assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;c:/assets/shaders/test/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000236" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheCombineWithFilePathMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007104" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod.Should_Return_Directory_Name(directoryPath: &quot;C:/Data&quot;, name: &quot;Data&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod" method="Should_Return_Directory_Name" result="Pass" time="0.0000105" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod.Should_Return_Directory_Name(directoryPath: &quot;C:/Data/Work&quot;, name: &quot;Work&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod" method="Should_Return_Directory_Name" result="Pass" time="0.0005419" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod.Should_Return_Directory_Name(directoryPath: &quot;C:/Data/Work/file.txt&quot;, name: &quot;file.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetDirectoryNameMethod" method="Should_Return_Directory_Name" result="Pass" time="0.0000331" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" time="0.001" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;/assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000248" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;/assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000263" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders&quot;, second: &quot;simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000496" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000236" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000232" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000259" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;c:/&quot;, second: &quot;simple.frag&quot;, expected: &quot;c:/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000192" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;c:/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;c:/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000208" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;c:/assets/shaders/&quot;, second: &quot;simple.frag&quot;, expected: &quot;c:/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0004539" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Combine_Paths(first: &quot;c:/assets/shaders/&quot;, second: &quot;test/simple.frag&quot;, expected: &quot;c:/assets/shaders/simple.frag&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Combine_Paths" result="Pass" time="0.0000267" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetFilePathMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0007914" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" time="0.006" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/&quot;, to: &quot;/C/&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000125" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000161" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/B/C&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000125" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/B/C/D/E/F&quot;, expected: &quot;D/E/F&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000287" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/D/E&quot;, expected: &quot;../../D/E&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.00002" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/D/E/F&quot;, to: &quot;/C/A/B/C&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0003915" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/&quot;, to: &quot;/B/&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.000142" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B&quot;, to: &quot;/D/E/&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0015876" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/C&quot;, to: &quot;/D/A/B/C&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0002147" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0015079" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Target_DirectoryPath_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Null" result="Pass" time="0.0010507" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Target_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Relative" result="Pass" time="0.0011262" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" time="0.005" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/&quot;, to: &quot;C:/&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000098" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0003836" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/B/C&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000129" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/B/C/D/E/F&quot;, expected: &quot;D/E/F&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000342" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/D/E&quot;, expected: &quot;../../D/E&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000188" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/D/E/F&quot;, to: &quot;C:/A/B/C&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000216" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/&quot;, to: &quot;B:/&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001436" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B&quot;, to: &quot;D:/E/&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0009777" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/C&quot;, to: &quot;D:/A/B/C&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001531" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.000853" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Target_DirectoryPath_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Null" result="Pass" time="0.0010468" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Target_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Relative" result="Pass" time="0.000924" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" time="0.005" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/&quot;, to: &quot;/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000323" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/B/C/D/E/F/hello.txt&quot;, expected: &quot;D/E/F/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000445" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/B/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0004646" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/A/D/E/hello.txt&quot;, expected: &quot;../../D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000485" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C&quot;, to: &quot;/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000429" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/D/E/F&quot;, to: &quot;/C/A/B/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000421" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/&quot;, to: &quot;/B/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001606" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B&quot;, to: &quot;/D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001629" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/C&quot;, to: &quot;/D/A/B/C/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0011408" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0011289" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Target_FilePath_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Target_FilePath_Is_Null" result="Pass" time="0.0007133" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Target_FilePath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Target_FilePath_Is_Relative" result="Pass" time="0.0011111" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" time="0.005" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/&quot;, to: &quot;C:/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0005194" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/B/C/D/E/F/hello.txt&quot;, expected: &quot;D/E/F/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.000039" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/B/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000682" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/A/D/E/hello.txt&quot;, expected: &quot;../../D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000599" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C&quot;, to: &quot;C:/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000417" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/D/E/F&quot;, to: &quot;C:/A/B/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000414" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/&quot;, to: &quot;B:/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001511" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B&quot;, to: &quot;D:/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001503" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/C&quot;, to: &quot;D:/A/B/C/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0010969" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0009911" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Target_FilePath_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Target_FilePath_Is_Null" result="Pass" time="0.0012174" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Target_FilePath_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Target_FilePath_Is_Relative" result="Pass" time="0.0009844" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment.Should_Create_New_Absolute_Path_Identical_To_The_Path" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment" method="Should_Create_New_Absolute_Path_Identical_To_The_Path" result="Pass" time="0.0005344" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment.Should_Create_New_Absolute_Path_When_Path_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment" method="Should_Create_New_Absolute_Path_When_Path_Is_Relative" result="Pass" time="0.0006359" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment.Should_Throw_If_Provided_Environment_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnEnvironment" method="Should_Throw_If_Provided_Environment_Is_Null" result="Pass" time="0.0008269" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath.Should_Create_New_Absolute_Path_Identical_To_The_Path" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath" method="Should_Create_New_Absolute_Path_Identical_To_The_Path" result="Pass" time="0.0003228" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath.Should_Create_New_Absolute_Path_When_Path_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath" method="Should_Create_New_Absolute_Path_When_Path_Is_Relative" result="Pass" time="0.000958" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath.Should_Throw_If_Provided_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath" method="Should_Throw_If_Provided_Path_Is_Null" result="Pass" time="0.0007345" />
      <test name="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath.Should_Throw_If_Provided_Path_Is_Relative" type="Cake.Core.Tests.Unit.IO.DirectoryPathTests+TheMakeAbsoluteMethod+ThatTakesAnotherDirectoryPath" method="Should_Throw_If_Provided_Path_Is_Relative" result="Pass" time="0.0009245" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" time="0.003" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Append, access: Write)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000899" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Create, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000792" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: CreateNew, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000804" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Open, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000796" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: OpenOrCreate, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0007654" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Truncate, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000702" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode.Should_Throw_If_File_Is_Null" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileMode" method="Should_Throw_If_File_Is_Null" result="Pass" time="0.0014541" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" time="0.008" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Append, access: Write)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000646" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Create, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000619" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: CreateNew, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000642" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Open, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0005324" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: OpenOrCreate, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000623" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Open_With_Specified_File_Mode_And_Infer_File_Access(mode: Truncate, access: ReadWrite)" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Open_With_Specified_File_Mode_And_Infer_File_Access" result="Pass" time="0.0000646" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess.Should_Throw_If_File_Is_Null" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenMethod+WithFileModeAndFileAccess" method="Should_Throw_If_File_Is_Null" result="Pass" time="0.0069773" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenReadMethod" time="0.003" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenReadMethod.Should_Open_Stream_With_Expected_FileMode_And_FileAccess" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenReadMethod" method="Should_Open_Stream_With_Expected_FileMode_And_FileAccess" result="Pass" time="0.0020159" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenReadMethod.Should_Throw_If_File_Is_Null" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenReadMethod" method="Should_Throw_If_File_Is_Null" result="Pass" time="0.0009118" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenWriteMethod" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenWriteMethod.Should_Open_Stream_With_Expected_FileMode_And_FileAccess" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenWriteMethod" method="Should_Open_Stream_With_Expected_FileMode_And_FileAccess" result="Pass" time="0.000455" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenWriteMethod.Should_Throw_If_File_Is_Null" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheOpenWriteMethod" method="Should_Throw_If_File_Is_Null" result="Pass" time="0.0007524" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod" time="0.004" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod.Should_Read_File_With_Multiple_Lines_Correctly" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod" method="Should_Read_File_With_Multiple_Lines_Correctly" result="Pass" time="0.0017266" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod.Should_Read_File_With_Single_Line_Correctly" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod" method="Should_Read_File_With_Single_Line_Correctly" result="Pass" time="0.0006903" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod.Should_Return_Empty_List_If_File_Contains_No_Lines" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod" method="Should_Return_Empty_List_If_File_Contains_No_Lines" result="Pass" time="0.000658" />
      <test name="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod.Should_Throw_If_File_Is_Null" type="Cake.Core.Tests.Unit.IO.FileExtensionsTests+TheReadLinesMethod" method="Should_Throw_If_File_Is_Null" result="Pass" time="0.0008135" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Add_Paths_That_Are_Not_Present" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Add_Paths_That_Are_Not_Present" result="Pass" time="0.0009994" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths(caseSensitive: False, expectedCount: 3)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.0010819" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths(caseSensitive: True, expectedCount: 5)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.0000445" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath.Should_Add_Path_If_Not_Already_Present" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Add_Path_If_Not_Already_Present" result="Pass" time="0.0008944" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.0007539" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheAddMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.0000173" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheConstructor.Should_Throw_If_Comparer_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheConstructor" method="Should_Throw_If_Comparer_Is_Null" result="Pass" time="0.0009631" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheCountProperty" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheCountProperty.Should_Return_The_Number_Of_Paths_In_The_Collection" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheCountProperty" method="Should_Return_The_Number_Of_Paths_In_The_Collection" result="Pass" time="0.0007105" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0022058" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 3)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0000476" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithMultiplePaths" method="Should_Return_New_Collection" result="Pass" time="0.0011625" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath" time="0.002" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.000056" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0012999" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheMinusOperator+WithSinglePath" method="Should_Return_New_Collection" result="Pass" time="0.0008352" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithMultiplePaths" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Paths" result="Pass" time="0.0007507" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithMultiplePaths.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithMultiplePaths" method="Should_Return_New_Collection" result="Pass" time="0.0016934" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithSinglePath" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Adding_Path" result="Pass" time="0.000731" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithSinglePath.Should_Return_New_Collection" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+ThePlusOperator+WithSinglePath" method="Should_Return_New_Collection" result="Pass" time="0.0011179" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithMultiplePaths" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: False, expectedCount: 0)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0000642" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithMultiplePaths.Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths(caseSensitive: True, expectedCount: 2)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithMultiplePaths" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Paths" result="Pass" time="0.0015414" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithSinglePath" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Path(caseSensitive: False, expectedCount: 0)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Path" result="Pass" time="0.0010373" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithSinglePath.Should_Respect_File_System_Case_Sensitivity_When_Removing_Path(caseSensitive: True, expectedCount: 1)" type="Cake.Core.Tests.Unit.IO.FilePathCollectionTests+TheRemoveMethod+WithSinglePath" method="Should_Respect_File_System_Case_Sensitivity_When_Removing_Path" result="Pass" time="0.0000323" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod.Can_Append_Extension_To_Path(extension: &quot;.dat&quot;, expected: &quot;temp/hello.txt.dat&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod" method="Can_Append_Extension_To_Path" result="Pass" time="0.0000335" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod.Can_Append_Extension_To_Path(extension: &quot;dat&quot;, expected: &quot;temp/hello.txt.dat&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod" method="Can_Append_Extension_To_Path" result="Pass" time="0.0005198" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod.Should_Throw_If_Extension_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheAppendExtensionMethod" method="Should_Throw_If_Extension_Is_Null" result="Pass" time="0.0007965" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheChangeExtensionMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheChangeExtensionMethod.Can_Change_Extension_Of_Path" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheChangeExtensionMethod" method="Can_Change_Extension_Of_Path" result="Pass" time="0.0005005" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetDirectoryMethod" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetDirectoryMethod.Can_Get_Directory_For_File_Path" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetDirectoryMethod" method="Can_Get_Directory_For_File_Path" result="Pass" time="0.0004492" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetDirectoryMethod.Can_Get_Directory_For_File_Path_In_Root" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetDirectoryMethod" method="Can_Get_Directory_For_File_Path_In_Root" result="Pass" time="0.0006023" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod" time="0.000" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod.Can_Get_Extension(fullPath: &quot;assets/shaders/basic&quot;, expected: null)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod" method="Can_Get_Extension" result="Pass" time="0.0000121" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod.Can_Get_Extension(fullPath: &quot;assets/shaders/basic.frag&quot;, expected: &quot;.frag&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod" method="Can_Get_Extension" result="Pass" time="0.0004377" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod.Can_Get_Extension(fullPath: &quot;assets/shaders/basic.frag/test&quot;, expected: null)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod" method="Can_Get_Extension" result="Pass" time="0.0000121" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod.Can_Get_Extension(fullPath: &quot;assets/shaders/basic.frag/test.vert&quot;, expected: &quot;.vert&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetExtensionMethod" method="Can_Get_Extension" result="Pass" time="0.0000354" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameMethod" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameMethod.Can_Get_Filename_From_Path" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameMethod" method="Can_Get_Filename_From_Path" result="Pass" time="0.0003887" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameWithoutExtensionMethod" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameWithoutExtensionMethod.Should_Return_Filename_Without_Extension_From_Path(fullPath: &quot;/input/test&quot;, expected: &quot;test&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameWithoutExtensionMethod" method="Should_Return_Filename_Without_Extension_From_Path" result="Pass" time="0.0000343" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameWithoutExtensionMethod.Should_Return_Filename_Without_Extension_From_Path(fullPath: &quot;/input/test.txt&quot;, expected: &quot;test&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetFilenameWithoutExtensionMethod" method="Should_Return_Filename_Without_Extension_From_Path" result="Pass" time="0.0007397" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" time="0.005" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/D/E/F/hello.txt&quot;, to: &quot;/C/A/B/C&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0004183" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.000022" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/B/C&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000216" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/B/C/D/E/F&quot;, expected: &quot;D/E/F&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.000035" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/D/E&quot;, expected: &quot;../../D/E&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000263" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/hello.txt&quot;, to: &quot;/C/&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000153" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/D/A/B/C&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001728" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/hello.txt&quot;, to: &quot;/D/E/&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0004132" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/hello.txt&quot;, to: &quot;/B/&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.001153" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0009959" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Target_DirectoryPath_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Null" result="Pass" time="0.0007752" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat.Should_Throw_If_Target_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InUnixFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Relative" result="Pass" time="0.0009122" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" time="0.005" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/D/E/F/hello.txt&quot;, to: &quot;C:/A/B/C&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0004294" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/&quot;, expected: &quot;../../..&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000248" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/B/C&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000196" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/B/C/D/E/F&quot;, expected: &quot;D/E/F&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.000033" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/D/E&quot;, expected: &quot;../../D/E&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000267" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/hello.txt&quot;, to: &quot;C:/&quot;, expected: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000204" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;D:/A/B/C&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001558" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/hello.txt&quot;, to: &quot;D:/E/&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001677" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/hello.txt&quot;, to: &quot;B:/&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0011727" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0010247" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Target_DirectoryPath_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Null" result="Pass" time="0.0008115" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat.Should_Throw_If_Target_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithDirectoryPath+InWindowsFormat" method="Should_Throw_If_Target_DirectoryPath_Is_Relative" result="Pass" time="0.0010196" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" time="0.015" total="13" passed="13" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/D/E/F/hello.txt&quot;, to: &quot;/C/A/B/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000449" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/B/C/D/E/F/hello.txt&quot;, expected: &quot;D/E/F/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0002513" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/B/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000418" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/A/D/E/hello.txt&quot;, expected: &quot;../../D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000579" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000421" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/hello.txt&quot;, to: &quot;/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.002284" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;/C/hello.txt&quot;, to: &quot;/C/world.txt&quot;, expected: &quot;world.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000335" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/C/hello.txt&quot;, to: &quot;/D/A/B/C/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0010922" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/A/B/hello.txt&quot;, to: &quot;/D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001614" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;/C/hello.txt&quot;, to: &quot;/B/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001748" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.0009963" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Target_FilePath_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Target_FilePath_Is_Null" result="Pass" time="0.0007997" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat.Should_Throw_If_Target_FilePath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InUnixFormat" method="Should_Throw_If_Target_FilePath_Is_Relative" result="Pass" time="0.0088061" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" time="0.005" total="13" passed="13" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/D/E/F/hello.txt&quot;, to: &quot;C:/A/B/C/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0004448" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/B/C/D/E/F/hello.txt&quot;, expected: &quot;D/E/F/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.000052" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/B/C/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000457" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/A/D/E/hello.txt&quot;, expected: &quot;../../D/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000476" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;C:/hello.txt&quot;, expected: &quot;../../../hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000425" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/hello.txt&quot;, to: &quot;C:/hello.txt&quot;, expected: &quot;hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000315" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Returns_Relative_Path_Between_Paths(from: &quot;C:/hello.txt&quot;, to: &quot;C:/world.txt&quot;, expected: &quot;world.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Returns_Relative_Path_Between_Paths" result="Pass" time="0.0000311" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/C/hello.txt&quot;, to: &quot;D:/A/B/C/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001653" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/A/B/hello.txt&quot;, to: &quot;D:/E/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0001539" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_No_Relative_Path_Can_Be_Found(from: &quot;C:/hello.txt&quot;, to: &quot;B:/hello.txt&quot;)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_No_Relative_Path_Can_Be_Found" result="Pass" time="0.0010685" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Source_DirectoryPath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Source_DirectoryPath_Is_Relative" result="Pass" time="0.001307" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Target_FilePath_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Target_FilePath_Is_Null" result="Pass" time="0.0008332" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat.Should_Throw_If_Target_FilePath_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheGetRelativePathMethod+WithFilePath+InWindowsFormat" method="Should_Throw_If_Target_FilePath_Is_Relative" result="Pass" time="0.0012174" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty.Can_See_If_A_Path_Has_An_Extension(fullPath: &quot;assets/shaders/basic&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty" method="Can_See_If_A_Path_Has_An_Extension" result="Pass" time="0.0006161" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty.Can_See_If_A_Path_Has_An_Extension(fullPath: &quot;assets/shaders/basic.txt&quot;, expected: True)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty" method="Can_See_If_A_Path_Has_An_Extension" result="Pass" time="0.0000145" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty.Can_See_If_A_Path_Has_An_Extension(fullPath: &quot;assets/shaders/basic/&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheHasExtensionProperty" method="Can_See_If_A_Path_Has_An_Extension" result="Pass" time="0.0000295" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath.Should_Return_A_Absolute_File_Path_If_File_Path_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath" method="Should_Return_A_Absolute_File_Path_If_File_Path_Is_Relative" result="Pass" time="0.0003682" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath.Should_Return_Same_File_Path_If_File_Path_Is_Absolute" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath" method="Should_Return_Same_File_Path_If_File_Path_Is_Absolute" result="Pass" time="0.0004867" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath.Should_Throw_If_Provided_Directory_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath" method="Should_Throw_If_Provided_Directory_Is_Null" result="Pass" time="0.0008025" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath.Should_Throw_If_Provided_Directory_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithDirectoryPath" method="Should_Throw_If_Provided_Directory_Is_Relative" result="Pass" time="0.0008771" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment" time="0.019" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment.Should_Return_A_Absolute_File_Path_If_File_Path_Is_Relative" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment" method="Should_Return_A_Absolute_File_Path_If_File_Path_Is_Relative" result="Pass" time="0.018019" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment.Should_Return_Same_File_Path_If_File_Path_Is_Absolute" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment" method="Should_Return_Same_File_Path_If_File_Path_Is_Absolute" result="Pass" time="0.0005664" />
      <test name="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.IO.FilePathTests+TheMakeAbsoluteMethod+WithEnvironment" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0008135" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath" time="0.003" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath.Should_Return_False_If_Directory_Do_Not_Exist" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath" method="Should_Return_False_If_Directory_Do_Not_Exist" result="Pass" time="0.0010121" />
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath.Should_Return_False_If_File_System_Returned_Null" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath" method="Should_Return_False_If_File_System_Returned_Null" result="Pass" time="0.0009643" />
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath.Should_Return_True_If_Directory_Exist" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithDirectoryPath" method="Should_Return_True_If_Directory_Exist" result="Pass" time="0.0008952" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath.Should_Return_False_If_File_Do_Not_Exist" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath" method="Should_Return_False_If_File_Do_Not_Exist" result="Pass" time="0.0012442" />
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath.Should_Return_False_If_File_System_Returned_Null" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath" method="Should_Return_False_If_File_System_Returned_Null" result="Pass" time="0.0006461" />
      <test name="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath.Should_Return_True_If_File_Exist" type="Cake.Core.Tests.Unit.IO.FileSystemExtensionsTest+TheExistMethod+WithFilePath" method="Should_Return_True_If_File_Exist" result="Pass" time="0.0022674" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.GlobberTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0008309" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0009781" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" time="0.207" total="21" passed="21" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Can_Traverse_Recursively" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Can_Traverse_Recursively" result="Pass" time="0.0205403" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Be_Able_To_Visit_Parent_Using_Double_Dots" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Be_Able_To_Visit_Parent_Using_Double_Dots" result="Pass" time="0.0045617" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Include_Files_In_Root_Folder_When_Using_Recursive_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Include_Files_In_Root_Folder_When_Using_Recursive_Wildcard" result="Pass" time="0.0070475" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Include_Folder_In_Root_Folder_When_Using_Recursive_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Include_Folder_In_Root_Folder_When_Using_Recursive_Wildcard" result="Pass" time="0.0082772" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Parse_Glob_Expressions_With_Parenthesis_In_Them" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Parse_Glob_Expressions_With_Parenthesis_In_Them" result="Pass" time="0.0077392" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Empty_Result_If_Pattern_Is_Empty" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Empty_Result_If_Pattern_Is_Empty" result="Pass" time="0.0090781" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_File_For_Recursive_Wildcard_Pattern_Ending_With_Wildcard_Regex" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_File_For_Recursive_Wildcard_Pattern_Ending_With_Wildcard_Regex" result="Pass" time="0.0291859" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_And_Folders_For_Pattern_Containing_Character_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_And_Folders_For_Pattern_Containing_Character_Wildcard" result="Pass" time="0.0098179" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_And_Folders_For_Pattern_Containing_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_And_Folders_For_Pattern_Containing_Wildcard" result="Pass" time="0.0169295" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_And_Folders_For_Pattern_Ending_With_Character_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_And_Folders_For_Pattern_Ending_With_Character_Wildcard" result="Pass" time="0.0090252" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_And_Folders_For_Pattern_Ending_With_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_And_Folders_For_Pattern_Ending_With_Wildcard" result="Pass" time="0.0208183" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_For_Pattern_Ending_With_Character_Wildcard_And_Dot" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_For_Pattern_Ending_With_Character_Wildcard_And_Dot" result="Pass" time="0.0132993" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Files_For_Pattern_Ending_With_Character_Wildcard_And_Dot_On_Windows" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Files_For_Pattern_Ending_With_Character_Wildcard_And_Dot_On_Windows" result="Pass" time="0.0126657" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Only_Folders_For_Pattern_Ending_With_Recursive_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Only_Folders_For_Pattern_Ending_With_Recursive_Wildcard" result="Pass" time="0.0060803" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Single_Path_For_Absolute_Directory_Path_Without_Glob_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Single_Path_For_Absolute_Directory_Path_Without_Glob_Pattern" result="Pass" time="0.0075603" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Single_Path_For_Absolute_File_Path_Without_Glob_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Single_Path_For_Absolute_File_Path_Without_Glob_Pattern" result="Pass" time="0.0042712" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Single_Path_For_Relative_Directory_Path_Without_Glob_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Single_Path_For_Relative_Directory_Path_Without_Glob_Pattern" result="Pass" time="0.0063176" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Return_Single_Path_For_Relative_File_Path_Without_Glob_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Return_Single_Path_For_Relative_File_Path_Without_Glob_Pattern" result="Pass" time="0.0038429" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Throw_If_Pattern_Is_Null" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Throw_If_Pattern_Is_Null" result="Pass" time="0.0016165" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Should_Throw_If_Visiting_Parent_That_Is_Recursive_Wildcard" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Should_Throw_If_Visiting_Parent_That_Is_Recursive_Wildcard" result="Pass" time="0.0041618" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod.Will_Append_Relative_Root_With_Implicit_Working_Directory" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod" method="Will_Append_Relative_Root_With_Implicit_Working_Directory" result="Pass" time="0.0041011" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" time="0.048" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Should_Ignore_Case_Sensitivity_On_Case_Insensitive_Operative_System" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Should_Ignore_Case_Sensitivity_On_Case_Insensitive_Operative_System" result="Pass" time="0.0096644" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Should_Parse_Glob_Expressions_With_Ampersand_In_Them" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Should_Parse_Glob_Expressions_With_Ampersand_In_Them" result="Pass" time="0.0079685" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Should_Parse_Glob_Expressions_With_Parenthesis_In_Them" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Should_Parse_Glob_Expressions_With_Parenthesis_In_Them" result="Pass" time="0.0111056" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Should_Parse_Glob_Expressions_With_Plus_In_Them" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Should_Parse_Glob_Expressions_With_Plus_In_Them" result="Pass" time="0.0120061" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Should_Throw_If_Unc_Root_Was_Encountered" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Should_Throw_If_Unc_Root_Was_Encountered" result="Pass" time="0.00349" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific.Will_Fix_Root_If_Drive_Is_Missing_By_Using_The_Drive_From_The_Working_Directory" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WindowsSpecific" method="Will_Fix_Root_If_Drive_Is_Missing_By_Using_The_Drive_From_The_Working_Directory" result="Pass" time="0.0040805" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate" time="0.027" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate.Should_Not_Return_Path_If_Walker_Hint_Exactly_Match_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate" method="Should_Not_Return_Path_If_Walker_Hint_Exactly_Match_Pattern" result="Pass" time="0.0058779" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate.Should_Not_Return_Path_If_Walker_Hint_Matches_Part_Of_Pattern" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate" method="Should_Not_Return_Path_If_Walker_Hint_Matches_Part_Of_Pattern" result="Pass" time="0.0051917" />
      <test name="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate.Should_Return_Paths_Not_Affected_By_Walker_Hints" type="Cake.Core.Tests.Unit.IO.GlobberTests+TheMatchMethod+WithPredicate" method="Should_Return_Paths_Not_Affected_By_Walker_Hints" result="Pass" time="0.0159327" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0008964" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0008873" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" time="0.024" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_From_The_Tools_Directory" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_From_The_Tools_Directory" result="Pass" time="0.0059789" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_Via_Environment_Path_Variable_On_Unix" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_Via_Environment_Path_Variable_On_Unix" result="Pass" time="0.0029452" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_Via_Environment_Path_Variable_On_Windows" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_Via_Environment_Path_Variable_On_Windows" result="Pass" time="0.0034829" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_Via_NuGet_Environment_Variable" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_Via_NuGet_Environment_Variable" result="Pass" time="0.0032341" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_Via_Special_Unix_Paths(path: &quot;/usr/bin/nuget&quot;)" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_Via_Special_Unix_Paths" result="Pass" time="0.0023238" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Be_Able_To_Resolve_Path_Via_Special_Unix_Paths(path: &quot;/usr/local/bin/nuget&quot;)" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Be_Able_To_Resolve_Path_Via_Special_Unix_Paths" result="Pass" time="0.0031434" />
      <test name="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod.Should_Throw_If_NuGet_Exe_Could_Not_Be_Found" type="Cake.Core.Tests.Unit.IO.NuGet.NuGetToolResolverTests+TheResolveToolPathMethod" method="Should_Throw_If_NuGet_Exe_Could_Not_Be_Found" result="Pass" time="0.0030944" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" time="0.004" total="17" passed="17" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Path_With_Non_Windows_Root" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Path_With_Non_Windows_Root" result="Pass" time="0.0002762" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Path_With_Separated_Ellipsis" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Path_With_Separated_Ellipsis" result="Pass" time="0.0002932" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Path_With_Windows_Root" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Path_With_Windows_Root" result="Pass" time="0.0002735" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Relative_Path" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Relative_Path" result="Pass" time="0.0003307" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;./a&quot;, collapsedPath: &quot;a&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0002912" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;/./a/b&quot;, collapsedPath: &quot;/a/b&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0000105" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;/a/./b&quot;, collapsedPath: &quot;/a/b&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0000141" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;/a/b/.&quot;, collapsedPath: &quot;/a/b&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0000212" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;a/./b&quot;, collapsedPath: &quot;a/b&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0000101" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot(uncollapsedPath: &quot;a/b/.&quot;, collapsedPath: &quot;a/b&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot" result="Pass" time="0.0000094" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot_To_Single_Dot(uncollapsedPath: &quot;.&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot_To_Single_Dot" result="Pass" time="0.0002368" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot_To_Single_Dot(uncollapsedPath: &quot;./&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot_To_Single_Dot" result="Pass" time="0.0000192" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot_To_Single_Dot(uncollapsedPath: &quot;/.&quot;)" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot_To_Single_Dot" result="Pass" time="0.0000141" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Collapse_Single_Dot_With_Ellipsis" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Collapse_Single_Dot_With_Ellipsis" result="Pass" time="0.0005376" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Stop_Collapsing_When_Root_Is_Reached" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Stop_Collapsing_When_Root_Is_Reached" result="Pass" time="0.000305" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Stop_Collapsing_When_Windows_Root_Is_Reached" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Stop_Collapsing_When_Windows_Root_Is_Reached" result="Pass" time="0.0002837" />
      <test name="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.PathCollapserTests+TheCollapseMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0006485" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheDefaultProperty" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheDefaultProperty.Should_Return_Correct_Comparer_Depending_On_Operative_System" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheDefaultProperty" method="Should_Return_Correct_Comparer_Depending_On_Operative_System" result="Pass" time="0.0015509" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" time="0.007" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Different_Paths_Are_Not_Considered_Equal(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Different_Paths_Are_Not_Considered_Equal" result="Pass" time="0.0000213" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Different_Paths_Are_Not_Considered_Equal(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Different_Paths_Are_Not_Considered_Equal" result="Pass" time="0.0033759" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Paths_Are_Considered_Inequal_If_Any_Is_Null(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Paths_Are_Considered_Inequal_If_Any_Is_Null" result="Pass" time="0.0000153" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Paths_Are_Considered_Inequal_If_Any_Is_Null(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Paths_Are_Considered_Inequal_If_Any_Is_Null" result="Pass" time="0.000564" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Asset_Instances_Is_Considered_Equal(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Asset_Instances_Is_Considered_Equal" result="Pass" time="0.0005534" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Asset_Instances_Is_Considered_Equal(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Asset_Instances_Is_Considered_Equal" result="Pass" time="0.0000828" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Paths_Are_Considered_Equal(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Paths_Are_Considered_Equal" result="Pass" time="0.0009454" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Paths_Are_Considered_Equal(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Paths_Are_Considered_Equal" result="Pass" time="0.0000429" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Paths_But_Different_Casing_Are_Considered_Equal_Depending_On_Case_Sensitivity(isCaseSensitive: False, expected: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Paths_But_Different_Casing_Are_Considered_Equal_Depending_On_Case_Sensitivity" result="Pass" time="0.0000331" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Same_Paths_But_Different_Casing_Are_Considered_Equal_Depending_On_Case_Sensitivity(isCaseSensitive: True, expected: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Same_Paths_But_Different_Casing_Are_Considered_Equal_Depending_On_Case_Sensitivity" result="Pass" time="0.0009509" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Two_Null_Paths_Are_Considered_Equal(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Two_Null_Paths_Are_Considered_Equal" result="Pass" time="0.0004503" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod.Two_Null_Paths_Are_Considered_Equal(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheEqualsMethod" method="Two_Null_Paths_Are_Considered_Equal" result="Pass" time="0.0000102" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" time="0.003" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Different_Paths_Get_Different_Hash_Codes(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Different_Paths_Get_Different_Hash_Codes" result="Pass" time="0.0013393" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Different_Paths_Get_Different_Hash_Codes(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Different_Paths_Get_Different_Hash_Codes" result="Pass" time="0.000043" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Same_Paths_But_Different_Casing_Get_Same_Hash_Code_Depending_On_Case_Sensitivity(isCaseSensitive: False, expected: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Same_Paths_But_Different_Casing_Get_Same_Hash_Code_Depending_On_Case_Sensitivity" result="Pass" time="0.0005368" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Same_Paths_But_Different_Casing_Get_Same_Hash_Code_Depending_On_Case_Sensitivity(isCaseSensitive: True, expected: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Same_Paths_But_Different_Casing_Get_Same_Hash_Code_Depending_On_Case_Sensitivity" result="Pass" time="0.00002" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Same_Paths_Get_Same_Hash_Code(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Same_Paths_Get_Same_Hash_Code" result="Pass" time="0.0000216" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Same_Paths_Get_Same_Hash_Code(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Same_Paths_Get_Same_Hash_Code" result="Pass" time="0.0004472" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod.Should_Throw_If_Other_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheGetHashCodeMethod" method="Should_Throw_If_Other_Path_Is_Null" result="Pass" time="0.0008293" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheIsCaseSensitiveProperty" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheIsCaseSensitiveProperty.Should_Return_Whether_Or_Not_The_Comparer_Is_Case_Sensitive(isCaseSensitive: False)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheIsCaseSensitiveProperty" method="Should_Return_Whether_Or_Not_The_Comparer_Is_Case_Sensitive" result="Pass" time="0.000024" />
      <test name="Cake.Core.Tests.Unit.IO.PathComparerTests+TheIsCaseSensitiveProperty.Should_Return_Whether_Or_Not_The_Comparer_Is_Case_Sensitive(isCaseSensitive: True)" type="Cake.Core.Tests.Unit.IO.PathComparerTests+TheIsCaseSensitiveProperty" method="Should_Return_Whether_Or_Not_The_Comparer_Is_Case_Sensitive" result="Pass" time="0.0005964" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" time="0.008" total="14" passed="14" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Current_Directory_Returns_Empty_Path" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Current_Directory_Returns_Empty_Path" result="Pass" time="0.0029172" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;/Hello/World/&quot;, expected: &quot;/Hello/World&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.000009" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;\Hello\World\&quot;, expected: &quot;/Hello/World&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.0002999" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;file.txt/&quot;, expected: &quot;file.txt&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.0000078" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;file.txt\&quot;, expected: &quot;file.txt&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.0000106" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;Temp/file.txt/&quot;, expected: &quot;Temp/file.txt&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.0000086" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Remove_Trailing_Slashes(value: &quot;Temp\file.txt\&quot;, expected: &quot;Temp/file.txt&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Remove_Trailing_Slashes" result="Pass" time="0.0000098" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Throw_If_Path_Contains_Illegal_Characters" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Throw_If_Path_Contains_Illegal_Characters" result="Pass" time="0.0011644" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Throw_If_Path_Is_Empty(fullPath: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Throw_If_Path_Is_Empty" result="Pass" time="0.0018296" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Throw_If_Path_Is_Empty(fullPath: &quot;\t &quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Throw_If_Path_Is_Empty" result="Pass" time="0.0001657" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Should_Throw_If_Path_Is_Null" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0008873" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Will_Normalize_Path_Separators" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Will_Normalize_Path_Separators" result="Pass" time="0.0004128" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Will_Not_Remove_WhiteSpace_Within_Path" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Will_Not_Remove_WhiteSpace_Within_Path" result="Pass" time="0.0002865" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor.Will_Trim_WhiteSpace_From_Path" type="Cake.Core.Tests.Unit.IO.PathTests+TheConstructor" method="Will_Trim_WhiteSpace_From_Path" result="Pass" time="0.0004677" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathTests+TheFullPathProperty" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheFullPathProperty.Should_Return_Full_Path" type="Cake.Core.Tests.Unit.IO.PathTests+TheFullPathProperty" method="Should_Return_Full_Path" result="Pass" time="0.0004341" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" time="0.001" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative(fullPath: &quot;/assets/shaders&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative" result="Pass" time="0.0000113" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative(fullPath: &quot;/assets/shaders/basic.frag&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative" result="Pass" time="0.0000153" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative(fullPath: &quot;assets/shaders&quot;, expected: True)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative" result="Pass" time="0.0004053" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative(fullPath: &quot;assets/shaders/basic.frag&quot;, expected: True)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative" result="Pass" time="0.0000121" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows(fullPath: &quot;c:&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows" result="Pass" time="0.0000074" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows(fullPath: &quot;c:/&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows" result="Pass" time="0.0005321" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows(fullPath: &quot;c:/assets/shaders&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows" result="Pass" time="0.0000283" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty.Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows(fullPath: &quot;c:/assets/shaders/basic.frag&quot;, expected: False)" type="Cake.Core.Tests.Unit.IO.PathTests+TheIsRelativeProperty" method="Should_Return_Whether_Or_Not_A_Path_Is_Relative_On_Windows" result="Pass" time="0.0000133" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty" time="0.001" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty.Should_Return_Segments_Of_Path(pathName: &quot;./Hello/World/&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty" method="Should_Return_Segments_Of_Path" result="Pass" time="0.0007633" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty.Should_Return_Segments_Of_Path(pathName: &quot;Hello/World&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty" method="Should_Return_Segments_Of_Path" result="Pass" time="0.0000311" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty.Should_Return_Segments_Of_Path_And_Leave_Absolute_Directory_Separator_Intact(pathName: &quot;/Hello/World&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty" method="Should_Return_Segments_Of_Path_And_Leave_Absolute_Directory_Separator_Intact" result="Pass" time="0.0000157" />
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty.Should_Return_Segments_Of_Path_And_Leave_Absolute_Directory_Separator_Intact(pathName: &quot;/Hello/World/&quot;)" type="Cake.Core.Tests.Unit.IO.PathTests+TheSegmentsProperty" method="Should_Return_Segments_Of_Path_And_Leave_Absolute_Directory_Separator_Intact" result="Pass" time="0.0005802" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.PathTests+TheToStringMethod" time="0.000" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.PathTests+TheToStringMethod.Should_Return_The_Full_Path" type="Cake.Core.Tests.Unit.IO.PathTests+TheToStringMethod" method="Should_Return_The_Full_Path" result="Pass" time="0.0004128" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString" time="0.000" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString.Should_Return_Builder_With_Correct_Content(value: &quot; \t &quot;, expected: &quot; \t &quot;)" type="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString" method="Should_Return_Builder_With_Correct_Content" result="Pass" time="0.0000046" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString.Should_Return_Builder_With_Correct_Content(value: &quot;&quot;, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString" method="Should_Return_Builder_With_Correct_Content" result="Pass" time="0.0000264" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString.Should_Return_Builder_With_Correct_Content(value: &quot;Hello World&quot;, expected: &quot;Hello World&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString" method="Should_Return_Builder_With_Correct_Content" result="Pass" time="0.000386" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString.Should_Return_Builder_With_Correct_Content(value: null, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+ImplicitConversion+FromString" method="Should_Return_Builder_With_Correct_Content" result="Pass" time="0.0000058" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+TheClearMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+TheClearMethod.Should_Remove_All_Arguments" type="Cake.Core.Tests.Unit.IO.ProcessArgumentBuilderTests+TheClearMethod" method="Should_Remove_All_Arguments" result="Pass" time="0.0008214" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheConstructor" time="0.014" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0128572" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0014833" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheStartMethod" time="0.005" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheStartMethod.Should_Throw_If_Filename_Is_Null" type="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheStartMethod" method="Should_Throw_If_Filename_Is_Null" result="Pass" time="0.0010144" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheStartMethod.Should_Throw_If_Process_Settings_Are_Null" type="Cake.Core.Tests.Unit.IO.ProcessRunnerTests+TheStartMethod" method="Should_Throw_If_Process_Settings_Are_Null" result="Pass" time="0.0036716" />
    </class>
    <class name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" time="0.004" total="11" passed="11" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Arguments(value: &quot; \t &quot;, expected: &quot; \t &quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Arguments" result="Pass" time="0.0000244" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Arguments(value: &quot;&quot;, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Arguments" result="Pass" time="0.0000256" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Arguments(value: &quot;Hello World&quot;, expected: &quot;Hello World&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Arguments" result="Pass" time="0.0014048" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Arguments(value: null, expected: &quot;&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Arguments" result="Pass" time="0.0000307" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Directory(value: &quot;../Test.zip&quot;, expected: &quot;../Test.zip&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Directory" result="Pass" time="0.0000205" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Directory(value: &quot;C:/Test.zip&quot;, expected: &quot;C:/Test.zip&quot;)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Directory" result="Pass" time="0.0006319" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Output(value: False, expected: False)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Output" result="Pass" time="0.0008202" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Output(value: True, expected: True)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Output" result="Pass" time="0.0000264" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Timeout(value: 0, expected: 0)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Timeout" result="Pass" time="0.0009568" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Timeout(value: 15000, expected: 15000)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Timeout" result="Pass" time="0.000009" />
      <test name="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods.Should_Return_Settings_With_Correct_Timeout(value: 5000, expected: 5000)" type="Cake.Core.Tests.Unit.IO.ProcessSettingsTests+ExtensionMethods" method="Should_Return_Settings_With_Correct_Timeout" result="Pass" time="0.0000173" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty.Should_Return_Correct_Address(uri: &quot;nuget:https://nuget.org/?package=Cake.Foo&amp;version=&quot;..., expected: &quot;https://nuget.org/&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty" method="Should_Return_Correct_Address" result="Pass" time="0.0004965" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty.Should_Return_Correct_Address(uri: &quot;nuget:https://user:pass@myget.org/f/Cake?package=C&quot;..., expected: &quot;https://user:pass@myget.org/f/Cake&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty" method="Should_Return_Correct_Address" result="Pass" time="0.000041" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty.Should_Return_Null_Address_If_None_Is_Specified" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheAddressProperty" method="Should_Return_Null_Address_If_None_Is_Specified" result="Pass" time="0.0004069" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheConstructor.Should_Throw_If_Package_Not_Provided_In_Uri" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheConstructor" method="Should_Throw_If_Package_Not_Provided_In_Uri" result="Pass" time="0.0009086" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheOriginalStringProperty" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheOriginalStringProperty.Should_Return_Uri_Provided_To_Constructor(uri: &quot;nuget:?package=Cake.Foo&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheOriginalStringProperty" method="Should_Return_Uri_Provided_To_Constructor" result="Pass" time="0.0004629" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheOriginalStringProperty.Should_Return_Uri_Provided_To_Constructor(uri: &quot;nuget:https://foo.com/?package=Cake.Foo&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheOriginalStringProperty" method="Should_Return_Uri_Provided_To_Constructor" result="Pass" time="0.0000397" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+ThePackageProperty" time="0.001" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+ThePackageProperty.Should_Return_Package_From_Query_String(uri: &quot;nuget:?package=Cake.Foo&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+ThePackageProperty" method="Should_Return_Package_From_Query_String" result="Pass" time="0.0000296" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+ThePackageProperty.Should_Return_Package_From_Query_String(uri: &quot;nuget:https://foo.com/?package=Cake.Foo&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+ThePackageProperty" method="Should_Return_Package_From_Query_String" result="Pass" time="0.0005423" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty" time="0.001" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty.Should_Return_Correct_Address(uri: &quot;nuget:?package=Cake.Foo&amp;version=1.2.3&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty" method="Should_Return_Correct_Address" result="Pass" time="0.0000117" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty.Should_Return_Correct_Address(uri: &quot;nuget:https://nuget.org/?package=Cake.Foo&amp;version=&quot;...)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty" method="Should_Return_Correct_Address" result="Pass" time="0.0008766" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty.Should_Return_Correct_Address(uri: &quot;nuget:https://user:pass@myget.org/f/Cake?package=C&quot;...)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheParametersProperty" method="Should_Return_Correct_Address" result="Pass" time="0.0000409" />
    </class>
    <class name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty" time="0.000" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty.Should_Return_Correct_Scheme(uri: &quot;https://cake.com/?package=Cake.Foo&amp;version=1.2.3&quot;, expected: &quot;https&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty" method="Should_Return_Correct_Scheme" result="Pass" time="0.0004519" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty.Should_Return_Correct_Scheme(uri: &quot;nuget:?package=Cake.Foo&amp;version=1.2.3&quot;, expected: &quot;nuget&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty" method="Should_Return_Correct_Scheme" result="Pass" time="0.0000295" />
      <test name="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty.Should_Return_Correct_Scheme(uri: &quot;nuget:https://nuget.org/?package=Cake.Foo&amp;version=&quot;..., expected: &quot;nuget&quot;)" type="Cake.Core.Tests.Unit.Packaging.PackageReferenceTests+TheSchemeProperty" method="Should_Return_Correct_Scheme" result="Pass" time="0.0000149" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" time="0.007" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor.Should_Populate_Addins_From_Provided_Script" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" method="Should_Populate_Addins_From_Provided_Script" result="Pass" time="0.0017468" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor.Should_Populate_Namespaces_From_Provided_Script" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" method="Should_Populate_Namespaces_From_Provided_Script" result="Pass" time="0.0014696" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor.Should_Populate_References_From_Provided_Script" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" method="Should_Populate_References_From_Provided_Script" result="Pass" time="0.0009438" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor.Should_Populate_Tools_From_Provided_Script" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" method="Should_Populate_Tools_From_Provided_Script" result="Pass" time="0.0019607" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor.Should_Populate_Using_Aliases_From_Provided_Script" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerResultTests+TheConstructor" method="Should_Populate_Using_Aliases_From_Provided_Script" result="Pass" time="0.0009774" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor" time="0.039" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0068655" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0258376" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0060243" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" time="0.050" total="23" passed="23" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Comment_Out_Shebang" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Comment_Out_Shebang" result="Pass" time="0.0010535" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Insert_Line_Directives_When_Processing_Load_Directives" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Insert_Line_Directives_When_Processing_Load_Directives" result="Pass" time="0.0123207" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Keep_Using_Block" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Keep_Using_Block" result="Pass" time="0.0013074" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Addin_Directive_Using_Uri" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Addin_Directive_Using_Uri" result="Pass" time="0.0009232" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Addin_Directive_With_Source" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Addin_Directive_With_Source" result="Pass" time="0.0010413" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Addin_Directive_Without_Source" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Addin_Directive_Without_Source" result="Pass" time="0.0027928" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Break_Directive" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Break_Directive" result="Pass" time="0.0009781" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Multiple_Script_References_Found_In_Source(source: &quot;#l &quot;utils.cake&quot;\n#l &quot;other.cake&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Multiple_Script_References_Found_In_Source" result="Pass" time="0.0003805" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Multiple_Script_References_Found_In_Source(source: &quot;#load &quot;utils.cake&quot;\n#load &quot;other.cake&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Multiple_Script_References_Found_In_Source" result="Pass" time="0.0014656" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Single_Script_Reference_Found_In_Source(source: &quot;#l &quot;utils.cake&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Single_Script_Reference_Found_In_Source" result="Pass" time="0.0003272" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Single_Script_Reference_Found_In_Source(source: &quot;#load &quot;utils.cake&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Single_Script_Reference_Found_In_Source" result="Pass" time="0.0141796" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Tool_Directive_Using_Uri" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Tool_Directive_Using_Uri" result="Pass" time="0.0009209" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Tool_Directive_With_Source" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Tool_Directive_With_Source" result="Pass" time="0.0008471" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Tool_Directive_Without_Source" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Tool_Directive_Without_Source" result="Pass" time="0.0020665" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Using_Alias_Directives" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Using_Alias_Directives" result="Pass" time="0.0010101" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Process_Using_Directives" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Process_Using_Directives" result="Pass" time="0.0017582" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Return_Code_Read_From_File" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Return_Code_Read_From_File" result="Pass" time="0.0008463" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Return_Multiple_Assembly_References_Found_In_Source(source: &quot;#r &quot;hello.dll&quot;\n#r &quot;world.dll&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Return_Multiple_Assembly_References_Found_In_Source" result="Pass" time="0.0002395" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Return_Multiple_Assembly_References_Found_In_Source(source: &quot;#r &quot;hello.dll&quot;\nConsole.WriteLine();\n#r &quot;world.dll&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Return_Multiple_Assembly_References_Found_In_Source" result="Pass" time="0.0010515" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Return_Single_Assembly_Reference_Found_In_Source(source: &quot;#r &quot;hello.dll&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Return_Single_Assembly_Reference_Found_In_Source" result="Pass" time="0.001273" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Return_Single_Assembly_Reference_Found_In_Source(source: &quot;#reference &quot;hello.dll&quot;&quot;)" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Return_Single_Assembly_Reference_Found_In_Source" result="Pass" time="0.0002952" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.001736" />
      <test name="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod.Should_Throw_If_Script_Was_Not_Found" type="Cake.Core.Tests.Unit.Scripting.Analysis.ScriptAnalyzerTests+TheProcessMethod" method="Should_Throw_If_Script_Was_Not_Found" result="Pass" time="0.0010338" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" time="0.016" total="16" passed="16" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Generic_Methods(name: &quot;Generic_ExtensionMethod&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Generic_Methods" result="Pass" time="0.0000595" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Generic_Methods(name: &quot;Generic_ExtensionMethodWithGenericReturnValue&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Generic_Methods" result="Pass" time="0.0008565" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Generic_Methods(name: &quot;Generic_ExtensionMethodWithParameter&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Generic_Methods" result="Pass" time="0.0000548" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithGenericExpressionArr&quot;...)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0000615" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithGenericExpressionPar&quot;...)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0013448" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithGenericExpressionPar&quot;...)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0000958" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithGenericParameter&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0000753" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithNoParameters&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0120096" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithParameter&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0001515" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithParameterArray&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0000504" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Non_Generic_Methods(name: &quot;NonGeneric_ExtensionMethodWithReturnValue&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Non_Generic_Methods" result="Pass" time="0.0000406" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Obsolete_Methods(name: &quot;Obsolete_ExplicitError_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Obsolete_Methods" result="Pass" time="0.0007231" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Obsolete_Methods(name: &quot;Obsolete_ExplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Obsolete_Methods" result="Pass" time="0.0000816" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Obsolete_Methods(name: &quot;Obsolete_ImplicitWarning_NoMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Obsolete_Methods" result="Pass" time="0.0000575" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Return_Correct_Generated_Code_For_Obsolete_Methods(name: &quot;Obsolete_ImplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Return_Correct_Generated_Code_For_Obsolete_Methods" result="Pass" time="0.0000548" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod.Should_Throw_If_Method_Is_Null" type="Cake.Core.Tests.Unit.Scripting.CodeGen.MethodAliasGeneratorTests+TheGeneratorMethod" method="Should_Throw_If_Method_Is_Null" result="Pass" time="0.0006828" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" time="0.024" total="19" passed="19" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties(name: &quot;Cached_Obsolete_ExplicitError_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties" result="Pass" time="0.0015213" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties(name: &quot;Cached_Obsolete_ExplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties" result="Pass" time="0.0001511" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties(name: &quot;Cached_Obsolete_ImplicitWarning_NoMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties" result="Pass" time="0.0001152" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties(name: &quot;Cached_Obsolete_ImplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Obsolete_Properties" result="Pass" time="0.0072453" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Properties(name: &quot;Cached_Reference_Type&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Properties" result="Pass" time="0.0000793" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Cached_Properties(name: &quot;Cached_Value_Type&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Cached_Properties" result="Pass" time="0.0003177" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties(name: &quot;NonCached_Obsolete_ExplicitError_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties" result="Pass" time="0.0003923" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties(name: &quot;NonCached_Obsolete_ExplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties" result="Pass" time="0.000082" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties(name: &quot;NonCached_Obsolete_ImplicitWarning_NoMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties" result="Pass" time="0.0001523" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties(name: &quot;NonCached_Obsolete_ImplicitWarning_WithMessage&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Non_Cached_Obsolete_Properties" result="Pass" time="0.0000915" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Return_Correct_Generated_Code_For_Non_Cached_Properties(name: &quot;NonCached_Value_Type&quot;)" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Return_Correct_Generated_Code_For_Non_Cached_Properties" result="Pass" time="0.0003599" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Declaring_Type_Is_Not_Static" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Declaring_Type_Is_Not_Static" result="Pass" time="0.0008542" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Method_Is_Generic" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Method_Is_Generic" result="Pass" time="0.0007504" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Method_Is_Not_An_Cake_Property_Alias" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Method_Is_Not_An_Cake_Property_Alias" result="Pass" time="0.0007504" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Method_Is_Not_An_Extension_Method" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Method_Is_Not_An_Extension_Method" result="Pass" time="0.0008506" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Method_Is_Null" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Method_Is_Null" result="Pass" time="0.0006742" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Property_Alias_Do_Not_Have_A_Cake_Context_As_First_Parameter" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Property_Alias_Do_Not_Have_A_Cake_Context_As_First_Parameter" result="Pass" time="0.0083261" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Property_Alias_Have_More_Than_One_Argument" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Property_Alias_Have_More_Than_One_Argument" result="Pass" time="0.0006682" />
      <test name="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod.Should_Throw_If_Property_Alias_Returns_Void" type="Cake.Core.Tests.Unit.Scripting.CodeGen.PropertyAliasGeneratorTests+TheGenerateMethod" method="Should_Throw_If_Property_Alias_Returns_Void" result="Pass" time="0.0006884" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptAliasTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptAliasTests+TheConstructor.Should_Not_Throw_If_Method_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptAliasTests+TheConstructor" method="Should_Not_Throw_If_Method_Is_Null" result="Pass" time="0.0013922" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptAliasTests+TheConstructor.Should_Throw_If_Method_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptAliasTests+TheConstructor" method="Should_Throw_If_Method_Is_Null" result="Pass" time="0.000847" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheConstructor" time="0.011" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheConstructor.Should_Throw_If_Engine_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheConstructor" method="Should_Throw_If_Engine_Is_Null" result="Pass" time="0.0105605" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheContextProperty" time="0.024" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheContextProperty.Should_Proxy_Call_To_Engine" type="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheContextProperty" method="Should_Proxy_Call_To_Engine" result="Pass" time="0.0241484" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskMethod" time="0.007" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskMethod.Should_Proxy_Call_To_Engine" type="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskMethod" method="Should_Proxy_Call_To_Engine" result="Pass" time="0.0067941" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskSetupMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskSetupMethod.Should_Proxy_Call_To_Engine" type="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskSetupMethod" method="Should_Proxy_Call_To_Engine" result="Pass" time="0.0017277" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskTeardownMethod" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskTeardownMethod.Should_Proxy_Call_To_Engine" type="Cake.Core.Tests.Unit.Scripting.ScriptHostTests+TheTaskTeardownMethod" method="Should_Proxy_Call_To_Engine" result="Pass" time="0.0034722" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor" time="0.021" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0090948" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0009339" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0112027" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" time="0.011" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod.Should_Install_Addins_Referenced_By_Scripts" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" method="Should_Install_Addins_Referenced_By_Scripts" result="Pass" time="0.0034323" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod.Should_Throw_If_Addins_Could_Not_Be_Found" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" method="Should_Throw_If_Addins_Could_Not_Be_Found" result="Pass" time="0.0014649" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod.Should_Throw_If_Analyzer_Result_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" method="Should_Throw_If_Analyzer_Result_Is_Null" result="Pass" time="0.0009295" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod.Should_Throw_If_Install_Path_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" method="Should_Throw_If_Install_Path_Is_Null" result="Pass" time="0.0036818" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod.Should_Throw_If_Installer_Could_Not_Be_Resolved" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallAddinsMethod" method="Should_Throw_If_Installer_Could_Not_Be_Resolved" result="Pass" time="0.0013567" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" time="0.045" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Install_Tools_Referenced_By_Scripts" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Install_Tools_Referenced_By_Scripts" result="Pass" time="0.0383652" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Register_Installed_Tools_With_The_Tool_Service" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Register_Installed_Tools_With_The_Tool_Service" result="Pass" time="0.0019718" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Throw_If_Analyzer_Result_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Throw_If_Analyzer_Result_Is_Null" result="Pass" time="0.0010267" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Throw_If_Install_Path_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Throw_If_Install_Path_Is_Null" result="Pass" time="0.0010906" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Throw_If_Installer_Could_Not_Be_Resolved" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Throw_If_Installer_Could_Not_Be_Resolved" result="Pass" time="0.0011033" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod.Should_Throw_If_Tools_Could_Not_Be_Found" type="Cake.Core.Tests.Unit.Scripting.ScriptProcessorTests+TheInstallToolsMethod" method="Should_Throw_If_Tools_Could_Not_Be_Found" result="Pass" time="0.0018257" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" time="0.067" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.004467" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor.Should_Throw_If_Script_Alias_Finder_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" method="Should_Throw_If_Script_Alias_Finder_Is_Null" result="Pass" time="0.001549" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor.Should_Throw_If_Script_Analyzer_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" method="Should_Throw_If_Script_Analyzer_Is_Null" result="Pass" time="0.0012505" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor.Should_Throw_If_Script_Conventions_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" method="Should_Throw_If_Script_Conventions_Is_Null" result="Pass" time="0.0581173" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor.Should_Throw_If_Script_Engine_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheConstructor" method="Should_Throw_If_Script_Engine_Is_Null" result="Pass" time="0.0012327" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" time="0.154" total="31" passed="31" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;Cake.Core&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0012912" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;Cake.Core.Diagnostics&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0013239" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;Cake.Core.IO&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0014104" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;Cake.Core.Scripting&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0012556" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0012158" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System.Collections.Generic&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0618848" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System.IO&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0020408" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System.Linq&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0012971" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System.Text&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0014609" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_Namespaces_To_Session(namespace: &quot;System.Threading.Tasks&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_Namespaces_To_Session" result="Pass" time="0.0014573" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;mscorlib&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0077344" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;System&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0036637" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;System.Core&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0026926" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;System.Data&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0039574" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;System.Xml&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0027976" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Add_References_To_Session(assemblyName: &quot;System.Xml.Linq&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Add_References_To_Session" result="Pass" time="0.0044236" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Create_Session_Via_Session_Factory" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Create_Session_Via_Session_Factory" result="Pass" time="0.0047915" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Execute_Script_Code" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Execute_Script_Code" result="Pass" time="0.0020156" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Generate_Script_Aliases" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Generate_Script_Aliases" result="Pass" time="0.0021304" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Install_Addins_At_Default_Location_If_No_Configuration_Is_Present" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Install_Addins_At_Default_Location_If_No_Configuration_Is_Present" result="Pass" time="0.0062801" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Install_Addins_At_Location_In_Configuration" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Install_Addins_At_Location_In_Configuration" result="Pass" time="0.0105435" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Install_Tools_At_Default_Location_If_No_Configuration_Is_Present" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Install_Tools_At_Default_Location_If_No_Configuration_Is_Present" result="Pass" time="0.0019638" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Install_Tools_At_Location_In_Configuration" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Install_Tools_At_Location_In_Configuration" result="Pass" time="0.0027305" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Remove_Directory_From_Script_Path(path: &quot;./test/build.cake&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Remove_Directory_From_Script_Path" result="Pass" time="0.0019619" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Remove_Directory_From_Script_Path(path: &quot;/test/build.cake&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Remove_Directory_From_Script_Path" result="Pass" time="0.0080759" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Remove_Directory_From_Script_Path(path: &quot;test/build.cake&quot;)" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Remove_Directory_From_Script_Path" result="Pass" time="0.0019591" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Send_Absolute_Install_Path_To_Script_Processor_When_Installing_Tools" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Send_Absolute_Install_Path_To_Script_Processor_When_Installing_Tools" result="Pass" time="0.005525" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Set_Working_Directory_To_Script_Directory" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Set_Working_Directory_To_Script_Directory" result="Pass" time="0.0018221" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Throw_If_Arguments_Are_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Throw_If_Arguments_Are_Null" result="Pass" time="0.0013429" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Throw_If_Script_Host_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Throw_If_Script_Host_Is_Null" result="Pass" time="0.0013934" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod.Should_Throw_If_Script_Is_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptRunnerTests+TheRunMethod" method="Should_Throw_If_Script_Is_Null" result="Pass" time="0.0016121" />
    </class>
    <class name="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor" time="0.003" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor.Should_Not_Throw_If_Aliases_Are_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor" method="Should_Not_Throw_If_Aliases_Are_Null" result="Pass" time="0.0017992" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor.Should_Not_Throw_If_Lines_Are_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor" method="Should_Not_Throw_If_Lines_Are_Null" result="Pass" time="0.0004377" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor.Should_Not_Throw_If_Namespaces_Are_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor" method="Should_Not_Throw_If_Namespaces_Are_Null" result="Pass" time="0.000448" />
      <test name="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor.Should_Not_Throw_If_Using_Alias_Directives_Are_Null" type="Cake.Core.Tests.Unit.Scripting.ScriptTests+TheConstructor" method="Should_Not_Throw_If_Using_Alias_Directives_Are_Null" result="Pass" time="0.0005012" />
    </class>
    <class name="Cake.Core.Tests.Unit.TaskSetupContextTests+TheConstructor" time="0.011" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.TaskSetupContextTests+TheConstructor.Should_Throw_If_Context_Is_Null" type="Cake.Core.Tests.Unit.TaskSetupContextTests+TheConstructor" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0099948" />
      <test name="Cake.Core.Tests.Unit.TaskSetupContextTests+TheConstructor.Should_Throw_If_Task_Is_Null" type="Cake.Core.Tests.Unit.TaskSetupContextTests+TheConstructor" method="Should_Throw_If_Task_Is_Null" result="Pass" time="0.0012884" />
    </class>
    <class name="Cake.Core.Tests.Unit.TaskTeardownContextTests+TheConstructor" time="0.008" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.TaskTeardownContextTests+TheConstructor.Should_Throw_If_Context_Is_Null" type="Cake.Core.Tests.Unit.TaskTeardownContextTests+TheConstructor" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0067341" />
      <test name="Cake.Core.Tests.Unit.TaskTeardownContextTests+TheConstructor.Should_Throw_If_Task_Is_Null" type="Cake.Core.Tests.Unit.TaskTeardownContextTests+TheConstructor" method="Should_Throw_If_Task_Is_Null" result="Pass" time="0.0010294" />
    </class>
    <class name="Cake.Core.Tests.Unit.TeardownContextTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.TeardownContextTests+TheConstructor.Should_Throw_If_Context_Is_Null" type="Cake.Core.Tests.Unit.TeardownContextTests+TheConstructor" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0013839" />
    </class>
    <class name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheConstructor.Should_Throw_If_Provided_Template_Is_Null" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheConstructor" method="Should_Throw_If_Provided_Template_Is_Null" result="Pass" time="0.0008332" />
    </class>
    <class name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" time="0.006" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod.Should_Throw_If_Key_Is_Empty(key: &quot;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" method="Should_Throw_If_Key_Is_Empty" result="Pass" time="0.0002435" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod.Should_Throw_If_Key_Is_Empty(key: &quot;\t&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" method="Should_Throw_If_Key_Is_Empty" result="Pass" time="0.0020534" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod.Should_Throw_If_Key_Is_Null" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" method="Should_Throw_If_Key_Is_Null" result="Pass" time="0.0011127" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod.Should_Throw_If_Two_Tokens_With_The_Same_Key_Are_Added(first: &quot;key&quot;, second: &quot;key&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" method="Should_Throw_If_Two_Tokens_With_The_Same_Key_Are_Added" result="Pass" time="0.0027091" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod.Should_Throw_If_Two_Tokens_With_The_Same_Key_Are_Added(first: &quot;KEY&quot;, second: &quot;key&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRegisterMethod" method="Should_Throw_If_Two_Tokens_With_The_Same_Key_Are_Added" result="Pass" time="0.0001519" />
    </class>
    <class name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" time="0.007" total="29" passed="29" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Apply_Format_If_Provided_And_Applicable(template: &quot;Today's date and time is &lt;%date:yyyy-MM-dd HH:mm:s&quot;..., expected: &quot;Today's date and time is 2014-12-23 18:27:43!&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Apply_Format_If_Provided_And_Applicable" result="Pass" time="0.0006027" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Apply_Format_If_Provided_And_Applicable(template: &quot;Today's date is &lt;%date:yyyy-MM-dd%&gt;!&quot;, expected: &quot;Today's date is 2014-12-23!&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Apply_Format_If_Provided_And_Applicable" result="Pass" time="0.0002995" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;$&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000267" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;(&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000236" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;)&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000224" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;*&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0008072" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;.&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000228" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;?&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000244" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;[&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000228" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;^&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.000024" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;{&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000224" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;|&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000228" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Placeholder(placeholder: &quot;+&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Placeholder" result="Pass" time="0.0000497" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Escape_Regex_Characters_In_Text" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Escape_Regex_Characters_In_Text" result="Pass" time="0.0002458" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Invoke_ToString_On_Provided_Value" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Invoke_ToString_On_Provided_Value" result="Pass" time="0.0004341" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Keep_Unmatched_Tokens" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Keep_Unmatched_Tokens" result="Pass" time="0.0004444" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Keep_Unmatched_Tokens_With_Different_Placeholder" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Keep_Unmatched_Tokens_With_Different_Placeholder" result="Pass" time="0.0004061" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Replace_Formated_Null_Token_Value_With_Empty_String" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Replace_Formated_Null_Token_Value_With_Empty_String" result="Pass" time="0.0003962" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Replace_Null_Token_Value_With_Empty_String" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Replace_Null_Token_Value_With_Empty_String" result="Pass" time="0.0003224" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Replace_Tokens" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Replace_Tokens" result="Pass" time="0.0003035" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Replace_Tokens_With_Different_Placeholder" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Replace_Tokens_With_Different_Placeholder" result="Pass" time="0.0004274" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Return_Key_If_The_Value_Was_Not_Formattable" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Return_Key_If_The_Value_Was_Not_Formattable" result="Pass" time="0.0003864" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Return_Key_If_The_Value_Was_Not_Formattable_With_Different_Placeholder" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Return_Key_If_The_Value_Was_Not_Formattable_With_Different_Placeholder" result="Pass" time="0.0006102" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;% guid %&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.0000129" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;% guid%&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.0000129" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;% guid:D %&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.0004582" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;% guid:D%&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.0000157" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;%guid %&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.0000181" />
      <test name="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod.Should_Trim_Content_Of_Token(template: &quot;&lt;%guid:D %&gt;&quot;)" type="Cake.Core.Tests.Unit.Text.TextTransformationTemplateTests+TheRenderMethod" method="Should_Trim_Content_Of_Token" result="Pass" time="0.000039" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor" time="0.010" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0078682" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor.Should_Throw_If_Tool_Repository_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor" method="Should_Throw_If_Tool_Repository_Is_Null" result="Pass" time="0.0010037" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor.Should_Throw_If_Tool_Resolution_Strategy_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheConstructor" method="Should_Throw_If_Tool_Resolution_Strategy_Is_Null" result="Pass" time="0.001196" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheRegisterFileMethod" time="0.004" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheRegisterFileMethod.Should_Register_File_Path_With_Tool_Repository" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheRegisterFileMethod" method="Should_Register_File_Path_With_Tool_Repository" result="Pass" time="0.0024162" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheRegisterFileMethod.Should_Throw_If_File_Path_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheRegisterFileMethod" method="Should_Throw_If_File_Path_Is_Null" result="Pass" time="0.001423" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" time="0.037" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod.Should_Resolve_Tool_Using_The_Tool_Resolution_Strategy" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" method="Should_Resolve_Tool_Using_The_Tool_Resolution_Strategy" result="Pass" time="0.0020345" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod.Should_Throw_If_Tool_Is_Empty(tool: &quot; &quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" method="Should_Throw_If_Tool_Is_Empty" result="Pass" time="0.0002746" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod.Should_Throw_If_Tool_Is_Empty(tool: &quot;&quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" method="Should_Throw_If_Tool_Is_Empty" result="Pass" time="0.000221" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod.Should_Throw_If_Tool_Is_Empty(tool: &quot;\t&quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" method="Should_Throw_If_Tool_Is_Empty" result="Pass" time="0.0331192" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod.Should_Throw_If_Tool_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolLocatorTests+TheResolveMethod" method="Should_Throw_If_Tool_Is_Null" result="Pass" time="0.0010661" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor" time="0.004" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0009197" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0023981" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor.Should_Throw_If_Globber_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheConstructor" method="Should_Throw_If_Globber_Is_Null" result="Pass" time="0.0008668" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" time="0.015" total="10" passed="10" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Prefer_To_Resolve_Tool_From_Repository_If_Possible" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Prefer_To_Resolve_Tool_From_Repository_If_Possible" result="Pass" time="0.0013969" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Resolve_Tool_From_Environment_Variable_If_Not_Present_In_Tools_Directory" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Resolve_Tool_From_Environment_Variable_If_Not_Present_In_Tools_Directory" result="Pass" time="0.0018754" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Resolve_Tool_From_Tools_Directory_If_Not_Present_In_Repository" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Resolve_Tool_From_Tools_Directory_If_Not_Present_In_Repository" result="Pass" time="0.0019054" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Resolve_Tool_From_Tools_Directory_Specified_In_Configuration_If_Not_Present_In_Repository" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Resolve_Tool_From_Tools_Directory_Specified_In_Configuration_If_Not_Present_In_Repository" result="Pass" time="0.0032389" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Return_Null_If_Tool_Could_Not_Be_Resolved" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Return_Null_If_Tool_Could_Not_Be_Resolved" result="Pass" time="0.0030747" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Throw_If_Tool_Name_Is_Empty(tool: &quot; &quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Throw_If_Tool_Name_Is_Empty" result="Pass" time="0.000097" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Throw_If_Tool_Name_Is_Empty(tool: &quot;&quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Throw_If_Tool_Name_Is_Empty" result="Pass" time="0.0001195" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Throw_If_Tool_Name_Is_Empty(tool: &quot;\t&quot;)" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Throw_If_Tool_Name_Is_Empty" result="Pass" time="0.0006607" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Throw_If_Tool_Name_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Throw_If_Tool_Name_Is_Null" result="Pass" time="0.0007421" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod.Should_Throw_If_Tool_Repository_Is_Null" type="Cake.Core.Tests.Unit.Tooling.ToolResolutionStrategyTests+TheResolveMethod" method="Should_Throw_If_Tool_Repository_Is_Null" result="Pass" time="0.0015099" />
    </class>
    <class name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" time="0.044" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Replace_Arguments_Provided_In_Tool_Settings_If_Returning_A_New_Builder" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Replace_Arguments_Provided_In_Tool_Settings_If_Returning_A_New_Builder" result="Pass" time="0.004439" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Replace_Arguments_Provided_In_Tool_Settings_If_Returning_A_String" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Replace_Arguments_Provided_In_Tool_Settings_If_Returning_A_String" result="Pass" time="0.0051586" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Set_Working_Directory_If_Provided_In_Tool_Settings" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Set_Working_Directory_If_Provided_In_Tool_Settings" result="Pass" time="0.0067218" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Succeed_On_NonZero_ExitCode_Validated_By_Custom_Validator" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Succeed_On_NonZero_ExitCode_Validated_By_Custom_Validator" result="Pass" time="0.0040458" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Succeed_On_Zero_ExitCode_Without_Custom_Validation" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Succeed_On_Zero_ExitCode_Without_Custom_Validation" result="Pass" time="0.0096892" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Throw_On_Invalid_ExitCode_Validated_By_Custom_Validator" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Throw_On_Invalid_ExitCode_Validated_By_Custom_Validator" result="Pass" time="0.0064325" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Throw_On_NonZero_ExitCode_Without_Custom_Validation" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Throw_On_NonZero_ExitCode_Without_Custom_Validation" result="Pass" time="0.0037801" />
      <test name="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod.Should_Use_Arguments_Provided_In_Tool_Settings" type="Cake.Core.Tests.Unit.Tooling.ToolTests+TheRunProcessMethod" method="Should_Use_Arguments_Provided_In_Tool_Settings" result="Pass" time="0.0034031" />
    </class>
  </assembly>
  <assembly name="C:\temp\dev\gh\cake-build-bot\cake\src\Cake.NuGet.Tests\bin\Release\Cake.NuGet.Tests.dll" configFile="C:\temp\dev\gh\cake-build-bot\cake\tools\xunit.runner.console\tools\xunit.console.exe.Config" run-date="2016-07-27" run-time="22:07:34" time="0.338" total="42" passed="42" failed="0" skipped="0" environment="64-bit .NET 4.0.30319.42000 [collection-per-class, parallel (4 threads)]" test-framework="xUnit.net 2.1.0.3179">
    <class name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" time="0.015" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;foo.dll&quot;, expectedFrameworkNameIdentifier: null)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0000477" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;fx2/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;fx2&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0001337" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;fx2/sub/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;fx2&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0000788" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;lib/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;Unsupported&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.005067" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;lib/fx1/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;fx1&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0001021" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;lib/fx1/sub/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;fx1&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0000986" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;lib/sub/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;Unsupported&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0001452" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Parse_Framework_Name_Tokens_From_Path(path: &quot;lib/sub/fx2/foo.dll&quot;, expectedFrameworkNameIdentifier: &quot;fx2&quot;)" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Parse_Framework_Name_Tokens_From_Path" result="Pass" time="0.0013768" />
      <test name="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod.Should_Throw_If_Path_Is_Null" type="Cake.NuGet.Tests.Unit.AssemblyFrameworkNameParserTests+TheParseMethod" method="Should_Throw_If_Path_Is_Null" result="Pass" time="0.0082646" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" time="0.296" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod.Should_Return_Compatible_References" type="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" method="Should_Return_Compatible_References" result="Pass" time="0.0380991" />
      <test name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod.Should_Return_Empty_When_No_References_Are_Compatible" type="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" method="Should_Return_Empty_When_No_References_Are_Compatible" result="Pass" time="0.2548786" />
      <test name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod.Should_Throw_If_Any_Assembly_Path_Is_Not_Relative" type="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" method="Should_Throw_If_Any_Assembly_Path_Is_Not_Relative" result="Pass" time="0.0011554" />
      <test name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod.Should_Throw_If_Assembly_Paths_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" method="Should_Throw_If_Assembly_Paths_Is_Null" result="Pass" time="0.0009485" />
      <test name="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod.Should_Throw_If_Target_Framework_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetAssemblyCompatibilityFilterTests+TheFilterCompatibleAssembliesMethod" method="Should_Throw_If_Target_Framework_Is_Null" result="Pass" time="0.0008794" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" time="0.327" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod.Should_Return_Compatible_Packages_For_NuGet_Compliant_Package" type="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" method="Should_Return_Compatible_Packages_For_NuGet_Compliant_Package" result="Pass" time="0.2527141" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod.Should_Return_Empty_If_No_Package_Assemblies_Are_Found" type="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" method="Should_Return_Empty_If_No_Package_Assemblies_Are_Found" result="Pass" time="0.0422887" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod.Should_Return_Empty_If_Package_Directory_Does_Not_Exist" type="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" method="Should_Return_Empty_If_Package_Directory_Does_Not_Exist" result="Pass" time="0.0006323" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod.Should_Throw_If_Package_Directory_Is_Not_Absolute" type="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" method="Should_Throw_If_Package_Directory_Is_Not_Absolute" result="Pass" time="0.001481" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod.Should_Throw_If_Package_Directory_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageAssembliesLocatorTests+TheFindAssembliesMethod" method="Should_Throw_If_Package_Directory_Is_Null" result="Pass" time="0.0298286" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" time="0.030" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod.Should_Be_Able_To_Install_If_Scheme_Is_Correct" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" method="Should_Be_Able_To_Install_If_Scheme_Is_Correct" result="Pass" time="0.0005956" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod.Should_Ignore_Custom_Source_If_AbsoluteUri_Is_Used" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" method="Should_Ignore_Custom_Source_If_AbsoluteUri_Is_Used" result="Pass" time="0.0251886" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod.Should_Not_Be_Able_To_Install_If_Scheme_Is_Incorrect" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" method="Should_Not_Be_Able_To_Install_If_Scheme_Is_Incorrect" result="Pass" time="0.0007089" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod.Should_Throw_If_URI_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" method="Should_Throw_If_URI_Is_Null" result="Pass" time="0.0018367" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod.Should_Use_Custom_Source_If_RelativeUri_Is_Used" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheCanInstallMethod" method="Should_Use_Custom_Source_If_RelativeUri_Is_Used" result="Pass" time="0.0012845" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" time="0.242" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_Content_Resolver_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_Content_Resolver_Is_Null" result="Pass" time="0.2363266" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_Environment_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_Environment_Is_Null" result="Pass" time="0.0011143" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_File_System_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_File_System_Is_Null" result="Pass" time="0.0010109" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0010204" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_Process_Runner_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_Process_Runner_Is_Null" result="Pass" time="0.0012477" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor.Should_Throw_If_Tool_Resolver_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheConstructor" method="Should_Throw_If_Tool_Resolver_Is_Null" result="Pass" time="0.0011704" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" time="0.335" total="5" passed="5" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod.Should_Create_Install_Directory_If_It_Do_Not_Exist" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" method="Should_Create_Install_Directory_If_It_Do_Not_Exist" result="Pass" time="0.0716867" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod.Should_Install_Resource" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" method="Should_Install_Resource" result="Pass" time="0.006907" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod.Should_Not_Install_If_Resource_Already_Is_Installed" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" method="Should_Not_Install_If_Resource_Already_Is_Installed" result="Pass" time="0.0151033" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod.Should_Throw_If_Install_Path_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" method="Should_Throw_If_Install_Path_Is_Null" result="Pass" time="0.000898" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod.Should_Throw_If_Uri_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageInstallerTests+TheInstallMethod" method="Should_Throw_If_Uri_Is_Null" result="Pass" time="0.2404593" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod" time="0.013" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod.Should_Group_Assembly_Files_Into_Package_Reference_Sets_By_Target_Framework" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod" method="Should_Group_Assembly_Files_Into_Package_Reference_Sets_By_Target_Framework" result="Pass" time="0.0115059" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod.Should_Return_Empty_If_Package_Assembly_Files_Is_Empty" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod" method="Should_Return_Empty_If_Package_Assembly_Files_Is_Empty" result="Pass" time="0.0004215" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod.Should_Throw_If_Package_Assembly_Files_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceBundlerTests+TheParseMethod" method="Should_Throw_If_Package_Assembly_Files_Is_Null" result="Pass" time="0.000658" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheConstructor" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheConstructor.Should_Allow_Null_Framework_Name" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheConstructor" method="Should_Allow_Null_Framework_Name" result="Pass" time="0.001344" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheConstructor.Should_Throw_If_References_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheConstructor" method="Should_Throw_If_References_Is_Null" result="Pass" time="0.0009699" />
    </class>
    <class name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheSupportedFrameworksProperty" time="0.002" total="2" passed="2" failed="0" skipped="0">
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheSupportedFrameworksProperty.Should_Be_Empty_When_Framework_Name_Is_Null" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheSupportedFrameworksProperty" method="Should_Be_Empty_When_Framework_Name_Is_Null" result="Pass" time="0.0002692" />
      <test name="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheSupportedFrameworksProperty.Should_Be_Include_Framework_Name" type="Cake.NuGet.Tests.Unit.NuGetPackageReferenceSetTests+TheSupportedFrameworksProperty" method="Should_Be_Include_Framework_Name" result="Pass" time="0.001301" />
    </class>
  </assembly>
  <assembly name="C:\temp\dev\gh\cake-build-bot\cake\src\Cake.Tests\bin\Release\Cake.Tests.dll" configFile="C:\temp\dev\gh\cake-build-bot\cake\tools\xunit.runner.console\tools\xunit.console.exe.Config" run-date="2016-07-27" run-time="22:07:35" time="0.189" total="244" passed="244" failed="0" skipped="0" environment="64-bit .NET 4.0.30319.42000 [collection-per-class, parallel (4 threads)]" test-framework="xUnit.net 2.1.0.3179">
    <class name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" time="0.011" total="7" passed="7" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Can_Find_Default_Scripts(scriptName: &quot;.cakefile&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Can_Find_Default_Scripts" result="Pass" time="0.0008648" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Can_Find_Default_Scripts(scriptName: &quot;build.cake&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Can_Find_Default_Scripts" result="Pass" time="0.0028031" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Can_Parse_Empty_Parameters" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Can_Parse_Empty_Parameters" result="Pass" time="0.0053623" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Can_Parse_Script_With_Unix_Path(input: &quot;&quot;/home/test/build.cake&quot;&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Can_Parse_Script_With_Unix_Path" result="Pass" time="0.000035" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Can_Parse_Script_With_Unix_Path(input: &quot;/home/test/build.cake&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Can_Parse_Script_With_Unix_Path" result="Pass" time="0.0007014" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Should_Throw_If_Arguments_Are_Null" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Should_Throw_If_Arguments_Are_Null" result="Pass" time="0.0008541" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod.Should_Throw_If_Multiple_Build_Configurations_Are_Provided" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod" method="Should_Throw_If_Multiple_Build_Configurations_Are_Provided" result="Pass" time="0.000716" />
    </class>
    <class name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" time="0.136" total="66" passed="66" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-d&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.000041" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-d=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0861766" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-d=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0000338" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-debug&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.000033" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-debug=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0001744" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Debug(input: &quot;-debug=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0000315" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-dryrun&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.000035" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-dryrun=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000398" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-dryrun=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000338" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-noop&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000315" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-noop=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000338" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-noop=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0006347" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-whatif&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000327" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-whatif=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000311" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_DryRun(input: &quot;-whatif=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Experimental(input: &quot;-experimental&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.0184055" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Experimental(input: &quot;-experimental=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.00005" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Experimental(input: &quot;-experimental=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.0000445" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Help(input: &quot;-?&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0000528" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Help(input: &quot;-help&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0000421" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Help(input: &quot;-help=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0061641" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Help(input: &quot;-help=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0000414" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Mono(input: &quot;-mono&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.0000382" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Mono(input: &quot;-mono=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.0005865" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Mono(input: &quot;-mono=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.0000382" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Script(input: &quot;build.cake -verbosity=quiet&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Script" result="Pass" time="0.0000572" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Script(input: &quot;build.cake&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Script" result="Pass" time="0.0010796" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-s&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000287" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-s=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000398" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-s=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0006074" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-showdescription&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000338" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-showdescription=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000323" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_ShowDescription(input: &quot;-showdescription=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000366" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=d&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=diagnostic&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000307" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=m&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000311" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=minimal&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000315" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=n&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000303" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=normal&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=q&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000315" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=quiet&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0024723" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=v&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-v=verbose&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.000033" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=d&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0050343" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=diagnostic&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000342" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=m&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.000037" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=minimal&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000362" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=n&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000461" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=normal&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000315" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=q&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.000035" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=quiet&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=v&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0029101" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Verbosity(input: &quot;-verbosity=verbose&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000334" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-ver&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-ver=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000465" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-ver=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000299" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-version&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000422" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-version=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.000033" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Can_Parse_Version(input: &quot;-version=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0005956" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Add_Unknown_Arguments_To_Argument_List" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Add_Unknown_Arguments_To_Argument_List" result="Pass" time="0.0007045" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Add_Unknown_Arguments_To_Argument_List_Without_Script" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Add_Unknown_Arguments_To_Argument_List_Without_Script" result="Pass" time="0.0009201" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Return_Error_If_Multiple_Arguments_With_The_Same_Name_Exist" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Return_Error_If_Multiple_Arguments_With_The_Same_Name_Exist" result="Pass" time="0.0068845" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;-v=&quot;, expected: &quot;The value '' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.000052" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;-v=lol&quot;, expected: &quot;The value 'lol' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.0000346" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;-verbosity=&quot;, expected: &quot;The value '' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.0012746" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;-verbosity=lol&quot;, expected: &quot;The value 'lol' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithSingleDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.0000378" />
    </class>
    <class name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" time="0.009" total="52" passed="52" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Debug(input: &quot;--debug&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0000338" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Debug(input: &quot;--debug=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0004053" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Debug(input: &quot;--debug=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Debug" result="Pass" time="0.0000319" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--dryrun&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000212" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--dryrun=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.000024" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--dryrun=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000374" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--noop&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000176" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--noop=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000216" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--noop=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0005628" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--whatif&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000382" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--whatif=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000362" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_DryRun(input: &quot;--whatif=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_DryRun" result="Pass" time="0.0000208" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Experimental(input: &quot;--experimental&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.00002" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Experimental(input: &quot;--experimental=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.0000236" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Experimental(input: &quot;--experimental=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Experimental" result="Pass" time="0.0003931" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Help(input: &quot;--help&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.000033" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Help(input: &quot;--help=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0000433" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Help(input: &quot;--help=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Help" result="Pass" time="0.0006101" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Mono(input: &quot;--mono&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.0004006" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Mono(input: &quot;--mono=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.000024" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Mono(input: &quot;--mono=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Mono" result="Pass" time="0.0000196" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Script(input: &quot;build.cake --verbosity=quiet&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Script" result="Pass" time="0.000688" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Script(input: &quot;build.cake&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Script" result="Pass" time="0.0000382" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_ShowDescription(input: &quot;--showdescription&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.0000196" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_ShowDescription(input: &quot;--showdescription=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.000024" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_ShowDescription(input: &quot;--showdescription=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_ShowDescription" result="Pass" time="0.000384" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--v=diagnostic&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--v=minimal&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--v=normal&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--v=quiet&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000192" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--v=verbose&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=d&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0005072" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=diagnostic&quot;, value: Diagnostic)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.000018" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=m&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=minimal&quot;, value: Minimal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.00002" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=n&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000184" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=normal&quot;, value: Normal)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000192" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=q&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=quiet&quot;, value: Quiet)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000267" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=v&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000184" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Verbosity(input: &quot;--verbosity=verbose&quot;, value: Verbose)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Verbosity" result="Pass" time="0.0000184" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--ver&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.000018" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--ver=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000236" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--ver=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0004002" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--version&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.00002" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--version=false&quot;, expected: False)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000176" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Can_Parse_Version(input: &quot;--version=true&quot;, expected: True)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Can_Parse_Version" result="Pass" time="0.0000188" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Should_Add_Unknown_Arguments_To_Argument_List" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Should_Add_Unknown_Arguments_To_Argument_List" result="Pass" time="0.0007298" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Should_Add_Unknown_Arguments_To_Argument_List_Without_Script" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Should_Add_Unknown_Arguments_To_Argument_List_Without_Script" result="Pass" time="0.0005367" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Should_Return_Error_If_Multiple_Arguments_With_The_Same_Name_Exist" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Should_Return_Error_If_Multiple_Arguments_With_The_Same_Name_Exist" result="Pass" time="0.0013571" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;--verbosity=&quot;, expected: &quot;The value '' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.0000362" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments.Should_Throw_If_Parsing_Invalid_Verbosity(verbosity: &quot;--verbosity=lol&quot;, expected: &quot;The value 'lol' is not a valid verbosity.&quot;)" type="Cake.Tests.Unit.Arguments.ArgumentParserTests+TheParseMethod+WithTwoDashLongArguments" method="Should_Throw_If_Parsing_Invalid_Verbosity" result="Pass" time="0.000774" />
    </class>
    <class name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" time="0.009" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Parse_Multiple_Mixed_Arguments" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Parse_Multiple_Mixed_Arguments" result="Pass" time="0.0014325" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Parse_Multiple_Quoted_Arguments" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Parse_Multiple_Quoted_Arguments" result="Pass" time="0.001663" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Parse_Part_That_Contains_Quotes_With_Space_In_It" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Parse_Part_That_Contains_Quotes_With_Space_In_It" result="Pass" time="0.0008775" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Parse_Single_Quoted_Argument_With_Space_In_It" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Parse_Single_Quoted_Argument_With_Space_In_It" result="Pass" time="0.0006225" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Parse_Single_Quoted_Argument_Without_Space_In_It" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Parse_Single_Quoted_Argument_Without_Space_In_It" result="Pass" time="0.0035811" />
      <test name="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod.Should_Return_Zero_Results_If_Input_String_Is_Null" type="Cake.Tests.Unit.Arguments.ArgumentTokenizerTests+TheTokenizeMethod" method="Should_Return_Zero_Results_If_Input_String_Is_Null" result="Pass" time="0.0005802" />
    </class>
    <class name="Cake.Tests.Unit.CakeApplicationTests+TheConstructor" time="0.004" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheConstructor.Should_Throw_If_Command_Factory_Is_Null" type="Cake.Tests.Unit.CakeApplicationTests+TheConstructor" method="Should_Throw_If_Command_Factory_Is_Null" result="Pass" time="0.0037465" />
    </class>
    <class name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" time="0.037" total="10" passed="10" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Build_Command_If_Options_Contain_Script" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Build_Command_If_Options_Contain_Script" result="Pass" time="0.0004807" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Description_Command_If_Specified_In_Options" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Description_Command_If_Specified_In_Options" result="Pass" time="0.0059078" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Dry_Run_Command_If_Specified_In_Options" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Dry_Run_Command_If_Specified_In_Options" result="Pass" time="0.0177992" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Help_Command_Even_If_Script_Is_Specified" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Help_Command_Even_If_Script_Is_Specified" result="Pass" time="0.0006355" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Help_Command_If_Specified_In_Options" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Help_Command_If_Specified_In_Options" result="Pass" time="0.0007314" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Version_Command_Even_If_Script_Is_Specified" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Version_Command_Even_If_Script_Is_Specified" result="Pass" time="0.0006544" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Create_Version_Command_If_Specified_In_Options" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Create_Version_Command_If_Specified_In_Options" result="Pass" time="0.0075986" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Return_Error_If_No_Parameters_Are_Set" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Return_Error_If_No_Parameters_Are_Set" result="Pass" time="0.0012075" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Return_Success_If_No_Exception_Was_Thrown" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Return_Success_If_No_Exception_Was_Thrown" result="Pass" time="0.0010721" />
      <test name="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod.Should_Throw_If_Options_Are_Null" type="Cake.Tests.Unit.CakeApplicationTests+TheRunMethod" method="Should_Throw_If_Options_Are_Null" result="Pass" time="0.0008715" />
    </class>
    <class name="Cake.Tests.Unit.CakeArgumentsTests+GetArguments" time="0.013" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeArgumentsTests+GetArguments.Should_Be_Case_Insensitive(key: &quot;a&quot;, expected: &quot;B&quot;)" type="Cake.Tests.Unit.CakeArgumentsTests+GetArguments" method="Should_Be_Case_Insensitive" result="Pass" time="0.0004298" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+GetArguments.Should_Be_Case_Insensitive(key: &quot;b&quot;, expected: null)" type="Cake.Tests.Unit.CakeArgumentsTests+GetArguments" method="Should_Be_Case_Insensitive" result="Pass" time="0.0000106" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+GetArguments.Should_Return_Argument_Exist(key: &quot;A&quot;, expected: &quot;B&quot;)" type="Cake.Tests.Unit.CakeArgumentsTests+GetArguments" method="Should_Return_Argument_Exist" result="Pass" time="0.0000342" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+GetArguments.Should_Return_Argument_Exist(key: &quot;B&quot;, expected: null)" type="Cake.Tests.Unit.CakeArgumentsTests+GetArguments" method="Should_Return_Argument_Exist" result="Pass" time="0.0128173" />
    </class>
    <class name="Cake.Tests.Unit.CakeArgumentsTests+HasArguments" time="0.001" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeArgumentsTests+HasArguments.Should_Be_Case_Insensitive(key: &quot;a&quot;, expected: True)" type="Cake.Tests.Unit.CakeArgumentsTests+HasArguments" method="Should_Be_Case_Insensitive" result="Pass" time="0.0005285" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+HasArguments.Should_Be_Case_Insensitive(key: &quot;b&quot;, expected: False)" type="Cake.Tests.Unit.CakeArgumentsTests+HasArguments" method="Should_Be_Case_Insensitive" result="Pass" time="0.0000082" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+HasArguments.Should_Return_Whether_Or_Not_An_Argument_Exist(key: &quot;A&quot;, expected: True)" type="Cake.Tests.Unit.CakeArgumentsTests+HasArguments" method="Should_Return_Whether_Or_Not_An_Argument_Exist" result="Pass" time="0.0000244" />
      <test name="Cake.Tests.Unit.CakeArgumentsTests+HasArguments.Should_Return_Whether_Or_Not_An_Argument_Exist(key: &quot;B&quot;, expected: False)" type="Cake.Tests.Unit.CakeArgumentsTests+HasArguments" method="Should_Return_Whether_Or_Not_An_Argument_Exist" result="Pass" time="0.0006817" />
    </class>
    <class name="Cake.Tests.Unit.CakeOptionsTests+TheConstructor" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeOptionsTests+TheConstructor.Should_Set_Verbosity_To_Normal" type="Cake.Tests.Unit.CakeOptionsTests+TheConstructor" method="Should_Set_Verbosity_To_Normal" result="Pass" time="0.0005663" />
    </class>
    <class name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" time="0.089" total="9" passed="9" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Default_To_30_Width" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Default_To_30_Width" result="Pass" time="0.0015268" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Increase_Width_For_Long_Task_Names" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Increase_Width_For_Long_Task_Names" result="Pass" time="0.0017191" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice(verbosity: Minimal)" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice" result="Pass" time="0.0001377" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice(verbosity: Normal)" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice" result="Pass" time="0.0134047" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice(verbosity: Quiet)" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Not_Print_Delegated_Tasks_When_Verbosity_Does_Not_Suffice" result="Pass" time="0.0002064" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Print_Delegated_Tasks_When_Verbosity_Suffices(verbosity: Diagnostic)" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Print_Delegated_Tasks_When_Verbosity_Suffices" result="Pass" time="0.0066792" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Print_Delegated_Tasks_When_Verbosity_Suffices(verbosity: Verbose)" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Print_Delegated_Tasks_When_Verbosity_Suffices" result="Pass" time="0.000178" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Print_No_Duration_For_Skipped_Tasks" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Print_No_Duration_For_Skipped_Tasks" result="Pass" time="0.0500267" />
      <test name="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod.Should_Throw_If_Report_Is_Null" type="Cake.Tests.Unit.CakeReportPrinterTests+TheWriteMethod" method="Should_Throw_If_Report_Is_Null" result="Pass" time="0.0151586" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsMethod" time="0.039" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsMethod.Should_Add_Registration_Type" type="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsMethod" method="Should_Add_Registration_Type" result="Pass" time="0.0385926" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsSelfMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsSelfMethod.Should_Add_Registration_Type" type="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheAsSelfMethod" method="Should_Add_Registration_Type" result="Pass" time="0.0013255" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheSingletonMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheSingletonMethod.Should_Set_Lifetime" type="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheSingletonMethod" method="Should_Set_Lifetime" result="Pass" time="0.0022914" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheTransientMethod" time="0.001" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheTransientMethod.Should_Set_Lifetime" type="Cake.Tests.Unit.Composition.ContainerRegistrationBuilderTests+TheTransientMethod" method="Should_Set_Lifetime" result="Pass" time="0.0007582" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterInstanceMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterInstanceMethod.Should_Create_Instance_Registration_As_Singleton_By_Default" type="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterInstanceMethod" method="Should_Create_Instance_Registration_As_Singleton_By_Default" result="Pass" time="0.0023752" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterModuleMethod" time="0.005" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterModuleMethod.Should_Call_The_Modules_Register_Method" type="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterModuleMethod" method="Should_Call_The_Modules_Register_Method" result="Pass" time="0.0046068" />
    </class>
    <class name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterTypeMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterTypeMethod.Should_Create_Type_Registration_As_Singleton_By_Default" type="Cake.Tests.Unit.Composition.ContainerRegistryTests+TheRegisterTypeMethod" method="Should_Create_Type_Registration_As_Singleton_By_Default" result="Pass" time="0.0024079" />
    </class>
    <class name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" time="0.023" total="14" passed="14" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed(logVerbosity: Minimal, messageVerbosity: Normal)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed" result="Pass" time="0.0165035" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed(logVerbosity: Normal, messageVerbosity: Verbose)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed" result="Pass" time="0.0000651" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed(logVerbosity: Quiet, messageVerbosity: Minimal)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed" result="Pass" time="0.0000046" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed(logVerbosity: Verbose, messageVerbosity: Diagnostic)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Drop_Log_Messages_Written_With_A_Lower_Verbosity_Than_Allowed" result="Pass" time="0.0000062" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Error_Log_Messages_Written_With_A_Lower_Log_Level_Than_Warning(logLevel: Error)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Error_Log_Messages_Written_With_A_Lower_Log_Level_Than_Warning" result="Pass" time="0.0012568" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Error_Log_Messages_Written_With_A_Lower_Log_Level_Than_Warning(logLevel: Fatal)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Error_Log_Messages_Written_With_A_Lower_Log_Level_Than_Warning" result="Pass" time="0.0000279" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed(logVerbosity: Diagnostic, messageVerbosity: Verbose)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed" result="Pass" time="0.0000137" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed(logVerbosity: Minimal, messageVerbosity: Quiet)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed" result="Pass" time="0.000007" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed(logVerbosity: Normal, messageVerbosity: Minimal)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed" result="Pass" time="0.0000066" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed(logVerbosity: Verbose, messageVerbosity: Normal)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Log_Messages_Written_With_A_Higher_Verbosity_Than_Allowed" result="Pass" time="0.0005901" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error(logLevel: Debug)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error" result="Pass" time="0.000086" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error(logLevel: Information)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error" result="Pass" time="0.0000098" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error(logLevel: Warning)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error" result="Pass" time="0.0045246" />
      <test name="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod.Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error(logLevel: Verbose)" type="Cake.Tests.Unit.Diagnostics.CakeBuildLogTests+TheWriteMethod" method="Should_Write_Standard_Log_Messages_Written_With_A_Higher_Log_Level_Than_Error" result="Pass" time="0.0000078" />
    </class>
    <class name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" time="0.012" total="8" passed="8" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Return_No_Token_For_An_Empty_Format" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Return_No_Token_For_An_Empty_Format" result="Pass" time="0.0004871" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Returns_Correct_Token_For_Message_With_No_Properties" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Returns_Correct_Token_For_Message_With_No_Properties" result="Pass" time="0.0014731" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Returns_Correct_Token_For_Message_With_One_Property" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Returns_Correct_Token_For_Message_With_One_Property" result="Pass" time="0.000761" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Should_Return_Correct_Tokens_For_Message_Which_Mixes_Properties_And_Literals" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Should_Return_Correct_Tokens_For_Message_Which_Mixes_Properties_And_Literals" result="Pass" time="0.0006651" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Should_Return_Literal_Tokens_For_Message_With_Escaped_Braces" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Should_Return_Literal_Tokens_For_Message_With_Escaped_Braces" result="Pass" time="0.0008822" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Should_Return_Property_Token_With_Format_For_Property_With_Format" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Should_Return_Property_Token_With_Format_For_Property_With_Format" result="Pass" time="0.0050978" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Should_Throw_If_A_Format_Item_Is_Not_Positional" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Should_Throw_If_A_Format_Item_Is_Not_Positional" result="Pass" time="0.0011621" />
      <test name="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod.Should_Throw_If_A_Format_Item_With_Format_Is_Not_Positional" type="Cake.Tests.Unit.Diagnostics.FormatParserTests+TheParseMethod" method="Should_Throw_If_A_Format_Item_With_Format_Is_Not_Positional" result="Pass" time="0.0010772" />
    </class>
    <class name="Cake.Tests.Unit.Modules.ConfigurationModuleTests+TheRegisterMethod" time="0.003" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Modules.ConfigurationModuleTests+TheRegisterMethod.Should_Use_The_Script_Directory_As_Root_For_Configuration_File" type="Cake.Tests.Unit.Modules.ConfigurationModuleTests+TheRegisterMethod" method="Should_Use_The_Script_Directory_As_Root_For_Configuration_File" result="Pass" time="0.0029219" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod" time="0.017" total="4" passed="4" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod.Should_Not_Print_Empty_Report" type="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod" method="Should_Not_Print_Empty_Report" result="Pass" time="0.0067802" />
      <test name="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod.Should_Not_Print_Report_That_Is_Null" type="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod" method="Should_Not_Print_Report_That_Is_Null" result="Pass" time="0.0070447" />
      <test name="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod.Should_Print_Report" type="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod" method="Should_Print_Report" result="Pass" time="0.0027356" />
      <test name="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod.Should_Proxy_Call_To_Engine" type="Cake.Tests.Unit.Scripting.BuildScriptHostTests+TheRunTargetMethod" method="Should_Proxy_Call_To_Engine" result="Pass" time="0.0006979" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod" time="0.016" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod.Should_Proxy_Call_To_ScriptRunner" type="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod" method="Should_Proxy_Call_To_ScriptRunner" result="Pass" time="0.0012161" />
      <test name="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod.Should_Report_Correct_Process_Id" type="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod" method="Should_Report_Correct_Process_Id" result="Pass" time="0.0133068" />
      <test name="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod.Should_Throw_If_Options_Is_Null" type="Cake.Tests.Unit.Scripting.DebugCommandTests+TheExecuteMethod" method="Should_Throw_If_Options_Is_Null" result="Pass" time="0.0010239" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor" time="0.010" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor.Should_Throw_If_Console_Is_Null" type="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor" method="Should_Throw_If_Console_Is_Null" result="Pass" time="0.0075927" />
      <test name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor.Should_Throw_If_Context_Is_Null" type="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.00117" />
      <test name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor.Should_Throw_If_Engine_Is_Null" type="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheConstructor" method="Should_Throw_If_Engine_Is_Null" result="Pass" time="0.0010705" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheRunTargetMethod" time="0.023" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheRunTargetMethod.Should_Not_Call_To_Engine" type="Cake.Tests.Unit.Scripting.DescriptionScriptHostTests+TheRunTargetMethod" method="Should_Not_Call_To_Engine" result="Pass" time="0.0227261" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheConstructor" time="0.036" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0363464" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheExecuteMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheExecuteMethod.Should_Write_Correct_Output_To_The_Log" type="Cake.Tests.Unit.Scripting.DryRunExecutionStrategyTests+TheExecuteMethod" method="Should_Write_Correct_Output_To_The_Log" result="Pass" time="0.0018434" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor" time="0.005" total="3" passed="3" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor.Should_Throw_If_Context_Is_Null" type="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor" method="Should_Throw_If_Context_Is_Null" result="Pass" time="0.0026507" />
      <test name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor.Should_Throw_If_Engine_Is_Null" type="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor" method="Should_Throw_If_Engine_Is_Null" result="Pass" time="0.0009552" />
      <test name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor.Should_Throw_If_Log_Is_Null" type="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheConstructor" method="Should_Throw_If_Log_Is_Null" result="Pass" time="0.0012252" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheRunTargetMethod" time="0.002" total="1" passed="1" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheRunTargetMethod.Should_Invoke_The_Engine_With_Correct_Execution_Strategy" type="Cake.Tests.Unit.Scripting.DryRunScriptHostTests+TheRunTargetMethod" method="Should_Invoke_The_Engine_With_Correct_Execution_Strategy" result="Pass" time="0.002263" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" time="0.036" total="6" passed="6" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.ArrayInitializ&quot;...)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0000797" />
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.Blocks&quot;)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0000398" />
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.Complex&quot;)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0016405" />
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.Mixed&quot;)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0341251" />
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.MixedComments&quot;)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0000406" />
      <test name="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests.Should_Parse_Resources(resource: &quot;Cake.Tests.Data.MonoScriptProcessor.Simple&quot;)" type="Cake.Tests.Unit.Scripting.Mono.MonoScriptProcessorTests" method="Should_Parse_Resources" result="Pass" time="0.0000279" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" time="0.006" total="12" passed="12" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Array_Initializer_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Array_Initializer_As_Block_Without_Scope" result="Pass" time="0.0004329" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Class_As_Block_With_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Class_As_Block_With_Scope" result="Pass" time="0.0004294" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Else_If_Statement_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Else_If_Statement_As_Block_Without_Scope" result="Pass" time="0.0005139" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Else_If_Statement_Without_Braces_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Else_If_Statement_Without_Braces_As_Block_Without_Scope" result="Pass" time="0.0006094" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Else_Statement_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Else_Statement_As_Block_Without_Scope" result="Pass" time="0.0004401" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Else_Statement_Without_Braces_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Else_Statement_Without_Braces_As_Block_Without_Scope" result="Pass" time="0.0004278" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_If_Statement_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_If_Statement_As_Block_Without_Scope" result="Pass" time="0.0004385" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_If_Statement_Without_Braces_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_If_Statement_Without_Braces_As_Block_Without_Scope" result="Pass" time="0.0006292" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_If_While_Loop_Without_Braces_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_If_While_Loop_Without_Braces_As_Block_Without_Scope" result="Pass" time="0.0003994" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Switch_Statement_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Switch_Statement_As_Block_Without_Scope" result="Pass" time="0.0005763" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_Task_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_Task_As_Block_Without_Scope" result="Pass" time="0.0007053" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod.Should_Parse_While_Loop_As_Block_Without_Scope" type="Cake.Tests.Unit.Scripting.Mono.ScriptParserTests+TheGetBlockMethod" method="Should_Parse_While_Loop_As_Block_Without_Scope" result="Pass" time="0.0004586" />
    </class>
    <class name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" time="0.028" total="19" passed="19" failed="0" skipped="0">
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Character_Correctly(content: &quot; / &quot;, index: 1, length: 1)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Character_Correctly" result="Pass" time="0.000016" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Character_Correctly(content: &quot;/&quot;, index: 0, length: 1)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Character_Correctly" result="Pass" time="0.0007515" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Left_Brace_Correctly" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Left_Brace_Correctly" result="Pass" time="0.0006777" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Left_Parenthesis_Correctly" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Left_Parenthesis_Correctly" result="Pass" time="0.0008123" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Right_Brace_Correctly" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Right_Brace_Correctly" result="Pass" time="0.0038638" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Right_Parenthesis_Correctly" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Right_Parenthesis_Correctly" result="Pass" time="0.0011174" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Semicolon_Correctly" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Semicolon_Correctly" result="Pass" time="0.0006643" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Strings_Correctly(content: &quot; &quot;Hello \&quot;World\&quot;&quot; &quot;, start: 1, end: 17)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Strings_Correctly" result="Pass" time="0.0000189" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Strings_Correctly(content: &quot; &quot;Hello World&quot; &quot;, start: 1, end: 13)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Strings_Correctly" result="Pass" time="0.0016993" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Strings_Correctly(content: &quot;&quot;Hello \&quot;World\&quot;&quot; &quot;, start: 0, end: 17)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Strings_Correctly" result="Pass" time="0.0000074" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Strings_Correctly(content: &quot;&quot;Hello World&quot;&quot;, start: 0, end: 13)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Strings_Correctly" result="Pass" time="0.0000074" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Word_Correctly(content: &quot; Hello &quot;, index: 1, length: 5)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Word_Correctly" result="Pass" time="0.0072098" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Parse_Word_Correctly(content: &quot;Hello&quot;, index: 0, length: 5)" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Parse_Word_Correctly" result="Pass" time="0.0000196" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Return_Null_For_Only_A_Single_Comment" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Return_Null_For_Only_A_Single_Comment" result="Pass" time="0.0006149" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Return_Null_When_EOL_Is_Reached" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Return_Null_When_EOL_Is_Reached" result="Pass" time="0.0027872" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Skip_Carriage_Return" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Skip_Carriage_Return" result="Pass" time="0.0018786" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Skip_Multi_Line_Comment" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Skip_Multi_Line_Comment" result="Pass" time="0.0041113" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Skip_New_Line" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Skip_New_Line" result="Pass" time="0.0007555" />
      <test name="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod.Should_Skip_Single_Line_Comment" type="Cake.Tests.Unit.Scripting.Mono.ScriptTokenizerTests+TheGetNextTokenMethod" method="Should_Skip_Single_Line_Comment" result="Pass" time="0.000592" />
    </class>
  </assembly>
</assemblies>